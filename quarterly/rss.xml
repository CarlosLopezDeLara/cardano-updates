<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Cardano Development Updates Blog</title>
        <link>https://input-output-hk.github.io/cardano-updates/quarterly</link>
        <description>Cardano Development Updates Blog</description>
        <lastBuildDate>Tue, 15 Nov 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Consensus Quarterly Update]]></title>
            <link>https://input-output-hk.github.io/cardano-updates/quarterly/2022-11-15-consensus</link>
            <guid>2022-11-15-consensus</guid>
            <pubDate>Tue, 15 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Consensus Quarterly Update]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="consensus-quarterly-update">Consensus Quarterly Update<a class="hash-link" href="#consensus-quarterly-update" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2022-09---2022-11">2022-09 - 2022-11<a class="hash-link" href="#2022-09---2022-11" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="main-achievements">Main achievements<a class="hash-link" href="#main-achievements" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="utxo-hd">UTxO HD<a class="hash-link" href="#utxo-hd" title="Direct link to heading">​</a></h4><ul><li><p>As a consequence of the errors observed when running distributed mempool
benchmarks, we re-designed the UTxO HD mempool integration, which fixed these
errors and lead to a simpler and more maintainable design.</p></li><li><p>We focused on increasing test coverage for the UTxO-HD prototype. In
particular, we added property tests for:</p><ul><li>Backing store (work ongoing)</li><li>Era transitions</li></ul></li><li><p>The property tests we added uncovered several bugs, which is a great result
given the exponential increase in the cost of finding bugs as they are closer
to deployment.</p></li><li><p>One of the errors found by our tests required us to work on improvements in
the Haskell bindings for LMDB. This work is ongoing.</p></li><li><p>We started working on the mempool property tests that will exercise the new
code paths that UTxO HD introduced.</p></li><li><p>We developed, benchmarked and tested an implementation of sequences of
differences based on "anti-diffs". Performance results of diff sequence
operations show that we achieved a speedup of about <code>4x</code> across several
scenarios. Note: this speedup is taking into account diff sequence operations
only, so the consensus-wide speedup is less than <code>4x</code>.</p></li><li><p>We integrated the "anti-diff" prototype into the UTxO HD feature branch.</p></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="genesis">Genesis<a class="hash-link" href="#genesis" title="Direct link to heading">​</a></h4><ul><li>We wrote a simulator that demonstrates soundness of an abstract implementation
of the new chain selection rule.</li><li>We elaborated a draft specification for the Genesis implementation (currently
awaiting feedback from other architects).</li><li>We elaborated a draft specification for the ChainSync Jumping optimization. In
particular, this includes a proof sketch that the latter preserves liveness
and safety in all cases.</li><li>With the Networking team, we co-designed the eclipse avoidance mechanism,
specifically its coherence with the Genesis implementation plan's security
and its dependence on the new ChainSync Jumping optimization.</li><li>We implemented a prototype for ChainSync Jumping. Initial benchmarks showed a
performance degradation wrt the baseline. Our optimization attempts so far
have brought the performance closer to the baseline, but not yet to parity.</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="conway-era">Conway era<a class="hash-link" href="#conway-era" title="Direct link to heading">​</a></h4><ul><li>We did most of the heavy lifting required to integrate the Conway era into the
Consensus layer.</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="technical-debt">Technical debt<a class="hash-link" href="#technical-debt" title="Direct link to heading">​</a></h4><ul><li><p>We started working on enabling CI nightly tests, which revealed several test
failures due to thunks being found it data structures used by the ledger and
consensus. We made a lot of progress fixing those thunk errors, but some
errors still remain.</p></li><li><p>We elaborated a <code>db-analyser</code> benchmark for the ledger operations. This led us
to the identification of high processing time at epoch boundaries, and we
could not observe any performance degradation that can be attributed to era
changes.</p></li><li><p>We fixed a source of flakiness in the ChainDB QSM test.</p></li><li><p>We clarified a common source of confusion around VRF tie-breaking and
cross-era chain selection.</p></li><li><p>We fixed a bug in the maximum-allowed ledger major protocol version.</p></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="fostering-collaboration">Fostering collaboration<a class="hash-link" href="#fostering-collaboration" title="Direct link to heading">​</a></h4><ul><li>We spent time making <code>cardano-updates</code> the central source of information for
the core teams stakeholders.</li><li>We went through the Galois gap analysis and extracted actionable points to
take on next.</li><li>Bart and Yogesh continued with their onboarding and stated making substantial
contributions to consensus.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next steps<a class="hash-link" href="#next-steps" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="utxo-hd-1">UTxO HD<a class="hash-link" href="#utxo-hd-1" title="Direct link to heading">​</a></h4><ul><li>Finish the mempool property tests.</li><li>Benchmark the latest version of the prototype.</li><li>Elaborate a document that describes new integration test scenarios and pass it
to the SDET team.</li><li>Bring query UTxO by address command performance on par with the baseline
version.</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="genesis-1">Genesis<a class="hash-link" href="#genesis-1" title="Direct link to heading">​</a></h4><ul><li>Receive and incorporate Duncan's feedback on the first draft specification for
the Genesis implementation.</li><li>Begin prototyping the first genesis implementation, unless the first draft
needs major changes.</li><li>Draft a second revision of the Genesis report.</li><li>Review the second revision with a wider audience, which includes at least
Alexander Russell. That feedback will drive a third and hopefully final
revision.</li><li>Investigate how to mitigate the ~30% slowdown we have observed so far in the
ChainSync jumping prototype, and try to mitigate it. In particular, we might
need to optimize the existing BlockFetch logic.</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="tech-debt">Tech debt<a class="hash-link" href="#tech-debt" title="Direct link to heading">​</a></h4><ul><li>Enabling nightly CI tests.</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="fostering-collaboration-1">Fostering collaboration<a class="hash-link" href="#fostering-collaboration-1" title="Direct link to heading">​</a></h4><ul><li>Merge the tutorial document Galois wrote; requires CI integration.</li><li>Come up with our own documentation improvements, many of which were suggested
in the Galois gap analysis.</li><li>Try to hire a new team member.</li></ul>]]></content:encoded>
            <category>consensus</category>
        </item>
        <item>
            <title><![CDATA[Network Team Update]]></title>
            <link>https://input-output-hk.github.io/cardano-updates/quarterly/2022-11-09-network</link>
            <guid>2022-11-09-network</guid>
            <pubDate>Wed, 09 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Network Quarterly Update]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="network-quarterly-update">Network Quarterly Update<a class="hash-link" href="#network-quarterly-update" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2022-09---2022-11">2022-09 - 2022-11<a class="hash-link" href="#2022-09---2022-11" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="summary-of-most-important-improvements">Summary of most important improvements<a class="hash-link" href="#summary-of-most-important-improvements" title="Direct link to heading">​</a></h3><p>During this quarter the networking team delivered low level specification of
peer sharing &amp; eclipse evasion.  We held a session with the consensus &amp; the
scientists; we got a positive feedback on the design.</p><p>Further we focused on implementation of peer sharing.  We produced a <a href="https://github.com/input-output-hk/ouroboros-network/wiki/Peer-Sharing-Implementation-Plan" target="_blank" rel="noopener noreferrer">detail
design</a> and an <a href="https://github.com/input-output-hk/ouroboros-network/pull/4019" target="_blank" rel="noopener noreferrer">early implementation</a>.</p><p>We prepared the <em>P2P Single Relay Release</em> (<code>cardano-node-1.35.5</code>).  It
includes over <a href="https://github.com/input-output-hk/ouroboros-network/pull/4120" target="_blank" rel="noopener noreferrer">130 patches</a> of network stack improvements over the
previous version <code>1.35.4</code>, which were accomplished over a longer period of
time.  Among them are both bug fixes and UX improvements for stake pool
operators like simplified format of the <a href="https://github.com/input-output-hk/cardano-node/pull/4563" target="_blank" rel="noopener noreferrer">topology file</a>, or
improvements in the logged messages:</p><ul><li><a href="https://github.com/input-output-hk/ouroboros-network/pull/4015" target="_blank" rel="noopener noreferrer">tracing of early consensus exceptions</a></li><li><a href="https://github.com/input-output-hk/ouroboros-network/pull/4127" target="_blank" rel="noopener noreferrer">tracing of demotion of local root peers</a> (traced with
<code>Warning</code> severity), the trace is called <code>TraceDemoteLocalAsynchronous</code>, in
<code>json</code> format it is encoded as <code>DemoteLocalAsynchronous</code>.  For an SPO
tracking these demotion is vital (such demotion could indicate that a block
producer is no longer connected to its relays or vice versa)</li></ul><p>We also provide better integration with <a href="https://github.com/input-output-hk/ouroboros-network/pull/3979" target="_blank" rel="noopener noreferrer">systemd</a> (socket
activation improvements) or improvements in the networking stack:</p><ul><li><a href="https://github.com/input-output-hk/ouroboros-network/pull/3785" target="_blank" rel="noopener noreferrer">exit policies</a>,</li><li><a href="https://github.com/input-output-hk/ouroboros-network/pull/3915" target="_blank" rel="noopener noreferrer">peer metrics improvements</a>,</li><li><a href="https://github.com/input-output-hk/ouroboros-network/pull/4106" target="_blank" rel="noopener noreferrer">DNS TTL</a> improvements (which make it harder to misconfigure the
system, an issue discovered by the performance &amp; monitoring team),</li><li>do not trigger inbound idle timeout for <code>node-to-client</code> connections (<a href="https://github.com/input-output-hk/ouroboros-network/pull/3844" target="_blank" rel="noopener noreferrer">pr
#3844</a>), an issue reported to us by Matthias Benkort from
Cardano Foundation.</li></ul><p>Duncan has been making progress with the input endorsers demo. His simulation
provides a useful animated visualisation and live quantification of behaviour
of the modeled design.</p><p>We also improved our e2e diffusion simulation by implementing header-body
split, similar to what the real implementation does.</p><p>We also made some advances towards our future goals of P2P release for block
producer nodes (<a href="https://github.com/input-output-hk/ouroboros-network/pull/3800" target="_blank" rel="noopener noreferrer">pr #3800</a> - in review) &amp; for Daedalus users
(<a href="https://github.com/input-output-hk/ouroboros-network/issues/3968" target="_blank" rel="noopener noreferrer">pr #3690</a> - merged).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="detailed-log">Detailed log<a class="hash-link" href="#detailed-log" title="Direct link to heading">​</a></h3><ul><li><p>We expanded diffusion simulation with block-fetch protocol bringing it closer
to the production system.</p></li><li><p>We addressed some additional technical depth in diffusion simulation</p></li><li><p>We slightly improved documentation &amp; CI of io-sim and typed-protocols
repositories for open-source contributors.</p></li><li><p>We closed a number of issues towards publishing io-sim on Hackage (only two
essential issues are left open).</p></li><li><p>We pushed a branch of typed-protocols which captures one of the developer UX
problems in the API which we need to solve.</p></li><li><p>We identified and fixed an issue related to systemd sockets.</p></li><li><p>We identified and fixed an issue in consensus initialisation not giving
feedback on early errors.</p></li><li><p>We deployed RT View, identified a number of issues which were communicated to
the performance &amp; monitoring team.</p></li><li><p>We finished high level &amp; detailed design of peer sharing, very early
implementation of peer sharing is done (note that peer sharing cannot be
safely deployed without eclipse evasion &amp; genesis).</p></li><li><p>We finished high level design of eclipse evasion, and started working on
a detailed design.</p></li><li><p>We were assigned the role of release engineer for 1.35.5 release (the P2P
single relay release); we prepared a cardano-node for 1.35.5 release which
contains more than 130 patches of just network stack improvements done over
last few months.</p></li><li><p>We diagnosed and fixed an tricky bug in the peer state actions (a component
which sits between outbound governor and connection manager). That bug was
introduced earlier this year and never released. It was caught by the QA
testing framework. We expanded our diffusion simulation to cover such case and
also mitigated a chance for reintroducing such a bug in future.</p></li><li><p>We identified and quite likely mitigated a misconfiguration in the
benchmarking cluster (next benchmarking run will confirm our hypothesis).</p></li><li><p>We simplified the format of p2p topology file, we got positive feedback from
SPOs.</p></li><li><p>We raised severities of some of the logging messages, which is an important
improvement for SPOs, exchanges and other users of the system.</p></li><li><p>We worked on input endorsers simulation which gives both animated and
quantified live feedback on network operation, using a simplified model of
a TCP/IP network. </p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="next-quarter">Next quarter<a class="hash-link" href="#next-quarter" title="Direct link to heading">​</a></h2><ul><li><p>Release the Single Relay P2P Release <code>1.35.5</code>.</p></li><li><p>Carry on with Peer Sharing (review, testing).</p></li><li><p>Deliver a talk at <a href="https://sites.uclouvain.be/OPODIS2022/" target="_blank" rel="noopener noreferrer">Conference on Principles of Distributed Systems 2022</a> in Brussels, Belgium.</p></li><li><p>Present Detailed Design of Eclipse Evasion and start implementation phase.</p></li><li><p>Work on P2P Block Producer release.</p></li><li><p>Carry on with publishing of <code>io-sim</code> on <code>Hackage</code>.</p></li></ul>]]></content:encoded>
            <category>network</category>
        </item>
        <item>
            <title><![CDATA[Ledger Team Update]]></title>
            <link>https://input-output-hk.github.io/cardano-updates/quarterly/2022-11-07-ledger</link>
            <guid>2022-11-07-ledger</guid>
            <pubDate>Mon, 07 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Ledger Quarterly Update]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ledger-quarterly-update">Ledger Quarterly Update<a class="hash-link" href="#ledger-quarterly-update" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2022-09---2022-11-04">2022-09 - 2022-11-04<a class="hash-link" href="#2022-09---2022-11-04" title="Direct link to heading">​</a></h2><ul><li>We finished a minimal ledger era capable of master key rotation.
This will be re-purposed our upcoming work.</li><li>We have the humble beginnings of a proper ledger API.</li><li>We improved the problematic cost model serialization
(recall the song and dance about updating the cost model one epoch after the hard fork).</li><li>We have added benchmarks for problematic areas.</li><li>Massive repository restructure and cleanup.<ul><li>Unified and consistent variable name schemes (not completely finished, but nearly there).</li><li>Massive reduction in type constraints, which causes a lot of developer friction,
in our code and also downstream.</li><li>More organized module structures.</li><li>Improved generators for our property tests.</li><li>We removed our dependency on cardano-prelude.</li></ul></li><li>The formal ledger model has come a long way.<ul><li>We created a fork of Agda that provides some meta-programming support for the ledger rules.</li><li>We have a large amount of the basic UTxO support in the model.</li><li>We can generate a good looking PDF from the model.</li><li>We can produce Haskell from the model.</li><li>We have a nice finite set theory library that we can use for many of the ledger rules.</li><li>We have nix support for the model.</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next steps<a class="hash-link" href="#next-steps" title="Direct link to heading">​</a></h2><ul><li>Individual tracking of deposits. [<a href="https://github.com/input-output-hk/cardano-ledger/issues/3113" target="_blank" rel="noopener noreferrer">issue-3113</a>]</li><li>Versioned CBOR encoders/decoders. [<a href="https://github.com/input-output-hk/cardano-ledger/issues/3014" target="_blank" rel="noopener noreferrer">issue-3014</a>]</li><li>New ledger era transaction body (and the surround work associated with it).</li><li>Designs for the next ledger era.</li></ul>]]></content:encoded>
            <category>ledger</category>
        </item>
        <item>
            <title><![CDATA[Node API & CLI Team Update]]></title>
            <link>https://input-output-hk.github.io/cardano-updates/quarterly/2022-10-07-node-cli-api</link>
            <guid>2022-10-07-node-cli-api</guid>
            <pubDate>Mon, 07 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Node-Api-Cli Quarterly Update]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="node-api-cli-quarterly-update">Node-Api-Cli Quarterly Update<a class="hash-link" href="#node-api-cli-quarterly-update" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2022-09---2022-11-04">2022-09 - 2022-11-04<a class="hash-link" href="#2022-09---2022-11-04" title="Direct link to heading">​</a></h2><ul><li>Various improvements to tests/CI/GHC 9.2.4 preparations/upgrade to cabal-3.8.1.0</li><li>Major clean up of stale iusses + PRs.</li><li>Implementation of stale-bot to mitigate against a proliferation of outdated issues and PRs</li><li>cardano-api refactoring with the aim of exposing more user friendly functions, particularly concerning transaction construction and querying the node.</li><li>cardano-cli refactoring with the aim of moving reusable functions to cardano-api. We have made strides here and have managed to improve the interface of transaction construction and validation.</li><li>General documentation updates and improvements</li><li>Addition of tx-mempool command which allows users to:<ul><li>Query the node about the current mempool's capacity and sizes</li><li>Request the next transaction from the mempool's current list</li><li>Query if a particular transaction exists in the mempool</li></ul></li><li>Initial refactoring of cardano-testnet</li></ul><p>Next quarter</p><ul><li>cardano-api<ul><li>Working with Konstantinos and his team to make cardano-api better for dapp developers - we have a google doc for this, I can send it to you privately.</li></ul></li><li>cardano-testnet<ul><li>Working with Marc Fontaine to create an easy to use executable to deploy testnets locally - <a href="https://github.com/input-output-hk/cardano-node/issues/4598" target="_blank" rel="noopener noreferrer">https://github.com/input-output-hk/cardano-node/issues/4598</a></li></ul></li><li>Serenity<ul><li>Continued refactoring of cardano-api and cardano-cli, with the particular focus on extracting re-usable components of cardano-cli and moving them to cardano-api. This is harder to define but will manifest in stuff moving from cardano-cli to cardano-api and is tied in to the cardano-api work specified above.</li></ul></li><li>General bug fixing and smaller feature requests for the api/cli that are always coming in. Robert is primarily handling this at the moment as he is relatively new.</li></ul>]]></content:encoded>
            <category>cli-api-quarterly</category>
        </item>
    </channel>
</rss>