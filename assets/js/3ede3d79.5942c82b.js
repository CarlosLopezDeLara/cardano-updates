"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[2221],{4562:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"2023-08-04-crypto","metadata":{"permalink":"/cardano-updates/2023-08-04-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-08-04-crypto.md","source":"@site/blog/2023-08-04-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":0.495,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-08-04-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-08-04-hydra"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Sidechains: Analysis of Halo2 SNARK verifier to plan a plutus implementation\\n* mithril: Full node verifier\\n* musig2: Finalised the missing fuzz tests\\n* kes_agent: engineer on PTO. Work halted \\n\\n## Low level summary\\n### Mithril\\n* Work on a mithril flaky test [#1105](https://github.com/input-output-hk/mithril/pull/1105)\\n* Keep working on Full Node Verifier [#939](https://github.com/input-output-hk/mithril/pull/939).\\n  Should be merged in the coming week.\\n### MuSig2\\n* Finalised the fuzz tests [#43](https://github.com/input-output-hk/musig2/pull/43)\\n### Sidechains\\n* Analysis of Halo2 verifier. Necessary for a future implementation of a plutus verifier."},{"id":"2023-08-04-hydra","metadata":{"permalink":"/cardano-updates/2023-08-04-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-08-04-hydra.md","source":"@site/blog/2023-08-04-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.06,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-08-04-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-08-04-crypto"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-08-04-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team achieved notable progress in various aspects of the\\nproject. The team updated the use case section for auctions on the [/unstable](https://hydra.family/head-protocol/unstable/use-cases/)\\nbranch of the website, improving the understanding of Hydra&rsquo;s applicability.\\n\\nFrom the development side, the team successfully completed event-sourced\\npersistence, a key enhancement in the project&rsquo;s architecture which improves\\noff-chain transaction processing performance. They also added a\\n&ldquo;submit-transaction&rdquo; endpoint to the API.\\n\\nIn addition to project-related progress, the team actively engaged in community\\nreviews for several catalyst proposals related to Hydra and Mithril,\\ncontributing to the wider Cardano ecosystem.\\n\\nFinally, the full report for the month of July was also published [here](https://hydra.family/head-protocol/monthly/2023-07).\\n\\n## What did the team achieve this week\\n\\n-   Published the [monthly report for July](https://hydra.family/head-protocol/monthly/2023-07)\\n-   Updated the use case section for auctions (published on [/unstable](https://hydra.family/head-protocol/unstable/use-cases/) branch)\\n-   Completed event sourced persistence [#913](https://github.com/input-output-hk/hydra/issues/913)\\n-   Added a &ldquo;submit-transaction&rdquo; endpoint to the API [#966](https://github.com/input-output-hk/hydra/issues/966)\\n-   Community reviews for several catalyst proposals related to Hydra and Mithril\\n-   Created a network testing tool (hydra-net) [#1006](https://github.com/input-output-hk/hydra/pull/1006)\\n\\n## What are the goals of next week\\n\\n-   Update hydra-node to work with cardano-node version 8.x\\n-   Remove the internal commit functionality\\n-   Release version 0.12.0\\n-   Update & streamline tutorial to work with latest version of hydra-node"},{"id":"2023-08-04-ledger","metadata":{"permalink":"/cardano-updates/2023-08-04-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-08-04-ledger.md","source":"@site/blog/2023-08-04-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.915,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-08-04-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-08-04-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-08-04-network"}},"content":"## High level summary\\n\\nThe ledger team was working almost exclusively on the Conway era implementation. In\\nparticular, the main focus was directed towards solidifying transaction related types and\\ntheir binary representation. We also directed some effort into unblocking Plutus team with\\nrespect to PlutusV3 integration.\\n\\n## Low level summary\\n\\n### Conway progress\\n\\n* [pull-3552] - Allow Constitutional Committee Hot Key to be ScriptHash\\n* [pull-3581] - Make Constitutional Committee Cold Key to be ScriptHash\\n* [pull-3571] - Implement a portion of the TICKF rule.\\n* [pull-3556] - Add Script to Constitution\\n* [pull-3576] - Add optional Anchor to ConwayRegDRep certificate\\n* [pull-3495] - Implement refund logic for Proposal deposits\\n* [pull-3579] - Change voting procedure in the transaction to a nested Map\\n* [pull-3585] - Rename `CommitteeCert` into a `GovCert`\\n* [pull-3587] - Remove `DelegStakeTxCert` from the `COMPLETE` pragma for `TxCert`\\n* [pull-3586] - Add `CurrentTreasuryValue` to `TxBody`\\n* [pull-3588] - Rename key roles\\n* [pull-3557] - Update `NewCommittee` action to use `RewardAcnt` and add more info\\n* [pull-3595] - Add `ConwayUpdateDRep` constructor to ConwayTxCertGov type\\n* [pull-3600] - Filter out zero TxOuts on Byron/Shelley boundary instead of Babbage/Conway\\n* [pull-3597] - Update `ProposalProcedure` return address to be a `RewardAcnt`\\n\\n### Testing\\n\\n* [pull-3374] - New features for generation subject to constraints\\n* [pull-3519] - Basic Conway features test\\n\\n### Bugfixes\\n\\n* [pull-3566] - Mint field translation bugfix.\\n\\n### Plutus integration\\n\\n* [issue-3538] - A fairly complete specification was created for the PlutusV3 context\\n* [pull-3593] - Conway TxInfo for PlutusV3 is now compatible with all pre-Conway functionality\\n\\n### Improvements and releasing\\n\\n* [pull-3574] - Improve clarity and performance of collateral Non-ADA validation:\\n* [pull-3573] - Update top-level `CHANGELOG.md` with cardano-node relevant changes\\n* [pull-3555] - Bump pygments from 2.12.0 to 2.15.0 in /doc\\n* [pull-3575] - Bump certifi from 2022.12.7 to 2023.7.22 in /doc\\n* [pull-3567] - Backport mint field translation bugfix\\n* [pull-3568] - Fixed typo in byron ledger spec\\n* [pull-3572] - Release/backport tickf bugfix\\n\\n\\n\\n[issue-3538]: https://github.com/input-output-hk/cardano-ledger/issues/3538\\n[pull-3555]: https://github.com/input-output-hk/cardano-ledger/pull/3555\\n[pull-3566]: https://github.com/input-output-hk/cardano-ledger/pull/3566\\n[pull-3567]: https://github.com/input-output-hk/cardano-ledger/pull/3567\\n[pull-3568]: https://github.com/input-output-hk/cardano-ledger/pull/3568\\n[pull-3572]: https://github.com/input-output-hk/cardano-ledger/pull/3572\\n[pull-3552]: https://github.com/input-output-hk/cardano-ledger/pull/3552\\n[pull-3571]: https://github.com/input-output-hk/cardano-ledger/pull/3571\\n[pull-3575]: https://github.com/input-output-hk/cardano-ledger/pull/3575\\n[pull-3573]: https://github.com/input-output-hk/cardano-ledger/pull/3573\\n[pull-3556]: https://github.com/input-output-hk/cardano-ledger/pull/3556\\n[pull-3574]: https://github.com/input-output-hk/cardano-ledger/pull/3574\\n[pull-3576]: https://github.com/input-output-hk/cardano-ledger/pull/3576\\n[pull-3581]: https://github.com/input-output-hk/cardano-ledger/pull/3581\\n[pull-3495]: https://github.com/input-output-hk/cardano-ledger/pull/3495\\n[pull-3579]: https://github.com/input-output-hk/cardano-ledger/pull/3579\\n[pull-3585]: https://github.com/input-output-hk/cardano-ledger/pull/3585\\n[pull-3587]: https://github.com/input-output-hk/cardano-ledger/pull/3587\\n[pull-3586]: https://github.com/input-output-hk/cardano-ledger/pull/3586\\n[pull-3588]: https://github.com/input-output-hk/cardano-ledger/pull/3588\\n[pull-3557]: https://github.com/input-output-hk/cardano-ledger/pull/3557\\n[pull-3593]: https://github.com/input-output-hk/cardano-ledger/pull/3593\\n[pull-3595]: https://github.com/input-output-hk/cardano-ledger/pull/3595\\n[pull-3374]: https://github.com/input-output-hk/cardano-ledger/pull/3374\\n[pull-3600]: https://github.com/input-output-hk/cardano-ledger/pull/3600\\n[pull-3597]: https://github.com/input-output-hk/cardano-ledger/pull/3597\\n[pull-3519]: https://github.com/input-output-hk/cardano-ledger/pull/3519"},{"id":"2023-08-04-network","metadata":{"permalink":"/cardano-updates/2023-08-04-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-08-04-network.md","source":"@site/blog/2023-08-04-network.md","title":"Network Team Update","description":"High-level overview of sprint 41","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":1.515,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-08-04-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-08-04-ledger"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-08-04-performance-and-tracing"}},"content":"## High-level overview of [sprint 41][sprint-41]\\n_24th July - 6th August 2023_\\n\\nWe started the implementation of __bootstrap peers__.  Bootstrap peers are designed\\nto provide a safety guarantee for nodes joining the network while still taking\\nadvantage of the distributed network for nodes that are synced.  This will be\\nan intermediate step before Genesis which will allow for further distribute the\\nsystem.  The bootstrap peers will be run by some trusted partners like CF,\\nEmurgo or IOG.   They are primarily designed for leaf nodes (e.g. full node\\nwallets), which often end up syncing and require access to the honest chain. See\\n[ouroboros-network#4615] for a more detailed implementation plan.\\n\\n## Other contributions\\n\\nWe started to use `nothunks` library to discover if we have any unevaluated\\nthunks which can lead to memory leaks [ouroboros-network#4633].  We found\\na small one in the peer metric component of the P2P networking stack.  Fixing\\nit put us on a small detour of fixing the API of the [`strict-checked-vars`]\\npackage: [cardano-base#431], [cardano-base#432], as well as adding `NFData`\\ninstance to [`io-classes`][io-classes#110].  We also improved `nothunks`\\nlibrary to make debugging easier and we provided a `NoThunks` instance for\\n`ThreadId` which we will need in the future (see [nothunks#33]).\\n\\nWe released a new version of `io-classes` (version `1.2.0.0`) and related\\npackages to [Hackage][io-classes-1.2.0.0].\\n\\nWe addressed all review comments on the eclipse evasion PR which introduces big\\nledger peers, [ouroboros-network#3886].\\n\\nWe fixed how `SIGHUP` signal handlers are registered, so it\'s not possible to\\nshutdown a node which was starting while trying to update network topology,\\nsee [cardano-node#5421].\\n\\nI didn\'t mention that in the previous update, so here it goes: in the previous\\nsprint we released [`ouroboros-network-0.8.2.0`] and\\n[`ouroboros-network-framework-0.7.0.0`].\\n\\n[sprint-41]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22sprint+41%22\\n\\n[`strict-checked-vars`]: https://github.com/input-output-hk/cardano-base/tree/master/strict-checked-vars\\n[cardano-base#431]: https://github.com/input-output-hk/cardano-base/pulls/431\\n[cardano-base#432]: https://github.com/input-output-hk/cardano-base/pulls/432\\n[cardano-node#5421]: https://github.com/input-output-hk/cardano-node/pull/5421\\n[ouroboros-network#3886]: https://github.com/input-output-hk/ouroboros-network/issues/3886\\n[ouroboros-network#4615]: https://github.com/input-output-hk/ouroboros-network/issues/4615\\n[ouroboros-network#4633]: https://github.com/input-output-hk/ouroboros-network/issues/4633\\n[`ouroboros-network-0.8.2.0`]: https://github.com/input-output-hk/ouroboros-network/blob/f84fcddce472d6cfc2b838b20a2ad085fe0896ed/ouroboros-network/CHANGELOG.md\\n[`ouroboros-network-framework-0.7.0.0`]: https://github.com/input-output-hk/ouroboros-network/blob/ouroboros-network-framework-0.7.0.0/ouroboros-network-framework/CHANGELOG.md\\n[io-classes#110]: https://github.com/input-output-hk/io-sim/pull/110\\n[io-classes-1.2.0.0]: https://hackage.haskell.org/package/io-classes-1.2.0.0io-classes-1.2.0.0\\n[nothunks#33]: https://github.com/input-output-hk/nothunks/pull/33"},{"id":"2023-08-04-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-08-04-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-08-04-performance-and-tracing.md","source":"@site/blog/2023-08-04-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":1.76,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-08-04-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-08-04-network"},"nextItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-08-04-sre"}},"content":"## High level summary\\n\\n* Benchmarking: We\'re adjusting the benchmarking cluster to handle runs for node version `8.2.0`.\\n* Tracing: We\'ve finished optimization of the new tracing system and added extra robustness with regard to namespacing.\\n* Infrastructure: We\'ve been working on making all benchmarking code compliant with the latest GHC9.6.\\n* Nomad backend: The new backend has seen adjustments due to a change of underlying hardware. Additionally, we\'ve successfully performed various benchmarking runs on it.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nThe `8.2.0` version of `cardano-node` required adjustment of some of the sanity checks that are part of our benchmarking\\ncluster automation. We\'ve pinpointed the necessary changes and are currently setting up the cluster for the new node version.\\n\\n### Tracing\\n\\nThe optimization efforts for the new tracing system have been completed and have significantly reduced the resource footprint\\nwhen using it as default for a running node.  \\n\\nA linchpin of the new system is the organization of traces into a namespace hierarchy. This affects configuration, self-documentation as well as rendering of desired trace messages. The new system is now equipped to detect any\\ninconsistency in the whole set of tracers, defined across all components, even if they are never turned on in a running node.\\nThis feature adds another layer of robustness to the whole system.\\n\\n### Infrastructure\\n\\nA potential switch to GHC9.6 (or higher) required some work on our code bases to make it compliant with recent compiler\\nversions. We\'ve future-proofed our benchmarking code.\\n\\n### Nomad backend\\n\\nThe hardware cluster that our nomad backend was accessing has been changed, and we were able to adjust our backend\\naccordingly without touching its higher level abstractions and functionality. Moreover, with the new hardware and cluster setup, certain tasks such as retrieving run artifacts or healthcheck monitoring have become more performant.  \\n\\nThe validation phase is ongoing. We were able to perform successful runs and analyses for various `8.x` node versions, including `8.2.0-pre`. With parallel runs on the current cluster, we hope to measure the same effects we\'ve observed with the\\nnomad backend - which will be a big step towards production use."},{"id":"2023-08-04-sre","metadata":{"permalink":"/cardano-updates/2023-08-04-sre","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-08-04-sre.md","source":"@site/blog/2023-08-04-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-08-04T00:00:00.000Z","formattedDate":"August 4, 2023","tags":[{"label":"sre","permalink":"/cardano-updates/tags/sre"}],"readingTime":0.64,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-08-04-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-08-04-performance-and-tracing"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-07-31-network"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent updates or improvements include:\\n* Preprod and preview envionments were updated to 8.1.2.\\n* Sanchonet and shelley-qa environments were updated to 8.2.0-pre.\\n* Work on a new cardano performance repo which utilizes a lightweight Cloudformation/Rain to Terraform infra bootstrap and Nomad environment has begun.\\n\\n## Lower level summary\\n\\n### Cardano-ops\\n* Deploy cardano-node 8.1.2, merge p2p modifications, script fixes and cleanup: [cardano-ops-pull-416](https://github.com/input-output-hk/cardano-ops/pull/416)\\n\\n### Cardano-perf\\n* New repo: [cardano-perf-repo](https://github.com/input-output-hk/cardano-perf)\\n\\n### Cardano-world\\n* Deploy cardano-node 8.1.2, emurgo p2p config, optimize faucet resources: [cardano-world-pull-104](https://github.com/input-output-hk/cardano-world/pull/104)\\n* Resolve nomad segfaults via nix versioning and fixup dbSync metal job for iohkNix env update: [cardano-world-pull-105](https://github.com/input-output-hk/cardano-world/pull/105)\\n* Add nomad dbSync fix for iohkNix env update: [cardano-world-pull-106](https://github.com/input-output-hk/cardano-world/pull/106)"},{"id":"2023-07-31-network","metadata":{"permalink":"/cardano-updates/2023-07-31-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-31-network.md","source":"@site/blog/2023-07-31-network.md","title":"Network Team Update","description":"Network Update (Sprints 39 & 40)","date":"2023-07-31T00:00:00.000Z","formattedDate":"July 31, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":2.18,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-07-31-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-08-04-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-07-28-hydra"}},"content":"## Network Update (Sprints 39 & 40)\\n\\nThe network updates got distracted.  Mostly because of me leaving for the meeting in Edinburgh, Scotland and the being away.\\nIt was great to see and talk to so many of the community members.\\n\\n### Sprint 39 (Jun 26 - Jul 09)\\n\\n#### Major changes\\n\\nNow the following __list of traces will be turned on by default__:\\n\\n##### `node-to-client` protocol\\n\\n- `LocalConnectionManagerTracer` \\n- `LocalInboundGovernor`\\n- `LocalHandshake`\\n- `LocalServer`\\n\\n##### `node-to-node` protocol\\n\\n- `Server`\\n\\nSee [cardano-node#5353].  This will be released in `node-8.2.0`.\\n\\n\\nWe made sure that `cardano-client-0.1.0.x` library (which is `db-sync`) is not using the experimental `node-to-client` protocol.\\nThe `cardano-client-0.2.0.0` was not affected.\\nSee [ouroboros-network#4612].\\n\\nWe merged the __dynamic block production feature__ to `ouroboros-consensus` (also available in the `cardano-node-8.2.0` release).\\nDynamic block production enables hot-swap p2p nodes, which are important for the p2p deployment of block-producing nodes.\\nSee [ouroboros-network#3159], [ouroboros-consensu#140].\\n\\nWe continued to review the implementation of big ledger peers for eclipse evasion, see [ouroboros-network#4462].\\n\\n#### Minor changes\\n\\n- We refactored the top level `cardano-node` error handler: [cardano-node#5356]\\n\\n\\n### Sprint 40 (Jul 09 - Jul 23)\\n\\n#### Major changes\\n\\nWe integrated `ouroboros-network-0.8.2.0` with the `master` branch of `cardano-node` for the `8.2.0` release (the version match between `ouroboros-network` and `cardano-node` is purely accidental).\\nThis includes:\\n\\n* integration with __dynamic block production__ feature.\\n  This feature is documented in the [following PR][cardano-node#5399].\\n* __Warm valency__ for local root peers (see below).\\n\\nFor the full list of features included in the `8.2.0` release from the network side, please take a look at the [pre-release nodes][cardano-node-8.2.0-pre].\\n\\n\\nWe __improved the memory footprint__ of peer metrics measured by the P2P stack.\\nPeer metrics are used to decide which peers to demote every churn interval (roughly every hour with some probabilistic fluctuation).\\nSee [ouroboros-network#4620].\\nThe improvement will be available in `cardano-node-8.2.0`.\\n\\nWe added an __optional explicit warm valency__ to local root peers of the __P2P topology file__.\\nPreviously we used an implicit valency, e.g. the node keeps connections to all of the local roots; with local warm valency the node will pick only that many peers from the local root peers group to connect to.\\nThe hot valency (previously known simply as valency) hasn\'t changed, but it must be smaller than the warm valency as hot peers are selected from warm ones.\\nWarm valency is a useful feature to limit resource consumption if one of the domain names in the local root peer group resolves to many IP addresses.\\nSee [ouroboros-network#4575], [cardano-node#5409].\\n\\n[cardano-node#5353]: https://github.com/input-output-hk/cardano-node/pull/5353\\n[cardano-node#5356]: https://github.com/input-output-hk/cardano-node/pull/5356\\n[cardano-node#5399]: https://github.com/input-output-hk/cardano-node/pull/5399\\n[cardano-node#5409]: https://github.com/input-output-hk/cardano-node/pull/5409\\n[cardano-node-8.2.0-pre]: https://github.com/input-output-hk/cardano-node/releases/tag/8.2.0-pre\\n[ouroboros-network#4575]: https://github.com/input-output-hk/ouroboros-network/pull/4575\\n[ouroboros-network#4612]: https://github.com/input-output-hk/ouroboros-network/pull/4612\\n[ouroboros-network#4620]: https://github.com/input-output-hk/ouroboros-network/pull/4620\\n[ouroboros-network#3159]: https://github.com/input-output-hk/ouroboros-network/issues/3159\\n[ouroboros-network#4462]: https://github.com/input-output-hk/ouroboros-network/pull/4462\\n[ouroboros-consensus#140]: https://github.com/input-output-hk/ouroboros-consensus/pull/140\\n\\n[sprint-39]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22Sprint+39%22\\n[sprint-40]: https://github.com/orgs/input-output-hk/projects/19/views/16?filterQuery=sprint%3A%22Sprint+40%22"},{"id":"2023-07-28-hydra","metadata":{"permalink":"/cardano-updates/2023-07-28-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-28-hydra.md","source":"@site/blog/2023-07-28-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-07-28T00:00:00.000Z","formattedDate":"July 28, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.005,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-07-28-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-07-31-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-07-27-mithril"}},"content":"## High-level summary\\n\\nDuring this week, the Hydra team achieved significant progress in various areas.\\nThey conducted the monthly review meeting for July, which continously ensures\\ntransparent communication and project evaluation. The team migrated the core\\nlogic of the node to an event-sourced architecture and incremental writes of\\nevents to persistence, enhancing the project&rsquo;s performance and maintainability.\\nFurthermore, the team added the ability to read protocol parameters via the API\\nand fixed the CI workflows to support pull requests from forks of external\\ncontributors, streamlining the development process for community involvement.\\n\\n## What did the team achieve this week\\n\\n-   Held the monthly review meeting for July ([recording](https://drive.google.com/file/d/14ANZ3efuxgXpYK94EBWxZLR9TtN7voru/))\\n-   Migrate the core logic of the node to an event-sourced architecture [#999](https://github.com/input-output-hk/hydra/pull/999)\\n-   Updated persistence to faster incremental writes of events [#1000](https://github.com/input-output-hk/hydra/pull/1000)\\n-   Added ability to read protocol parameters via API [#735](https://github.com/input-output-hk/hydra/issues/735)\\n-   Fix CI workflows to support pull requests from forks of external contributors [#993](https://github.com/input-output-hk/hydra/pull/993)\\n-   Updated to GHC 9.2.8 [#1005](https://github.com/input-output-hk/hydra/pull/1005)\\n-   Prepared an updated use cases section on <https://hydra.family> (published with next release)\\n\\n## What are the goals of next week\\n\\n-   Publish monthly report\\n-   Complete user transaction submission work [#966](https://github.com/input-output-hk/hydra/issues/966)\\n-   Remove commit from internal wallet (deprecated) [#954](https://github.com/input-output-hk/hydra/issues/954)"},{"id":"2023-07-27-mithril","metadata":{"permalink":"/cardano-updates/2023-07-27-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-27-mithril.md","source":"@site/blog/2023-07-27-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-07-27T00:00:00.000Z","formattedDate":"July 27, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.715,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-07-27-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-07-28-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-07-26-consensus"}},"content":"## High level overview\\nThe Mithril team launched **Mithril protocol\u2019s mainnet beta**: the `release-mainnet` network is now open for signer registrations, and its genesis certificate has been created. The team is monitoring the network, and expects it to start producing certificates during the next Cardano epoch. \\n\\nThey have released a new distribution [`2329.0`](https://github.com/input-output-hk/mithril/releases/tag/2329.0), which is running on the `release-mainnet` network. They also kept working on the implementation of the stress test tool for benchmarking the aggregator. The team kept working on the refactoring of the serialization/deserialization of the entities of the cryptographic library. Additionally, they completed the cleanup of the legacy store adapters in the aggregator.\\n\\nFinally, they have worked on enhancing the documentation for [onboarding SPOs](https://mithril.network/doc/manual/getting-started/SPO-on-boarding-guide) and setting up a [Mithril signer](https://mithril.network/doc/manual/getting-started/run-signer-node), and fixing installation bugs of the binary artifacts produced in the CI.\\n\\n\\n## Low level overview\\n- Created the dev blog post [Mithril Protocol\u2019s Mainnet Beta Launch](https://mithril.network/doc/dev-blog/2023/07/21/mainnet-beta-launch)\\n- Released the new distribution [`2329.0`](https://github.com/input-output-hk/mithril/releases/tag/2329.0)\\n- Closed the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Completed the issue `Deploy \'mainnet\' infrastructure` [#988](https://github.com/input-output-hk/mithril/issues/988)\\n  - Completed the issue `Handle Secrets management` [#989](https://github.com/input-output-hk/mithril/issues/989)\\n- Worked on the epic `Release \'mainnet\' Mithril network` [#918](https://github.com/input-output-hk/mithril/issues/918)\\n  - Completed the issue `Prepare SPO on-boarding guide` [#1049](https://github.com/input-output-hk/mithril/issues/1049)\\n- Worked on the epic `Benchmark performances of Mithril Aggregator` [#904](https://github.com/input-output-hk/mithril/issues/904):\\n  - Worked on the issue `Design & implement basic stress test tool for aggregator` [#991](https://github.com/input-output-hk/mithril/issues/991)\\n- Worked on optimizations:\\n  - Completed the issue `Enhance the configuration of Mithril relay` [#1080](https://github.com/input-output-hk/mithril/issues/1080)\\n  - Completed the issue `Remove legacy store adapters from aggregator` [#1053](https://github.com/input-output-hk/mithril/issues/1053)\\n  - Completed the issue `Add a \'sign\' sub-command to \'genesis\' command in aggregator` [#1081](https://github.com/input-output-hk/mithril/issues/1081)\\n- Worked on refactoring:\\n  - Worked on the issue `Refactor (de)serialization of crypto entities` [#668](https://github.com/input-output-hk/mithril/issues/668)\\n- Worked on documentation:\\n  - Completed the issue `Enhance \'Run a Mithril Signer node (SPO)\' guide` [#1055](https://github.com/input-output-hk/mithril/issues/1055)\\n- Worked on bugs:\\n  - Completed the issue `Shared library error in CI binaries` [#1073](https://github.com/input-output-hk/mithril/issues/1073)\\n  - Completed the issue `Debian package does not install cleanly on older ubuntu versions` [#834](https://github.com/input-output-hk/mithril/issues/834)\\n  - Completed the issue `Aggregator panics with new (de)serialization of \'ProtocolVerificationKey\'` [#1083](https://github.com/input-output-hk/mithril/issues/1083)"},{"id":"2023-07-26-consensus","metadata":{"permalink":"/cardano-updates/2023-07-26-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-26-consensus.md","source":"@site/blog/2023-07-26-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-07-26T00:00:00.000Z","formattedDate":"July 26, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":0.85,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-07-26-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-07-27-mithril"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-07-21-hydra"}},"content":"## High level summary\\n\\nThe `db-sync` team confirmed that the adaptor module the Consensus team provided for UTxO-HD integration, shows no performance degradation. Other clients who wish to integrate with UTxO-HD without using a on-disk storage could use that same approach for now.\\nWe also focused on completing tracing support for UTxO-HD in `cardano-node`.\\nCurrently we are working on UTxO-HD documentation, both for downstream consumers and for the general public; and generalizing the implementation further. \\n\\nThe team working on Genesis decided on a Genesis-motivated change of the epoch structure with the researchers, wrote a self-contained description of the statistical model for historical Genesis windows and eclipse durations, and merged two small improvements to the `ChainSync` client as part of the onboarding efforts for the team that will implement Genesis.\\n\\nThe Consensus team also investigated an issue on sanchonet (the Conway testnet) manifesting in long syncing pauses; identified a ledger bug which was promptly fixed by the Ledger team.\\n\\n### Genesis liaising\\n\\nImprovements to the `ChainSync` client:\\n\\n- [#222](https://github.com/input-output-hk/ouroboros-consensus/pull/222).\\n- [#233](https://github.com/input-output-hk/ouroboros-consensus/pull/233)."},{"id":"2023-07-21-hydra","metadata":{"permalink":"/cardano-updates/2023-07-21-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-21-hydra.md","source":"@site/blog/2023-07-21-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-07-21T00:00:00.000Z","formattedDate":"July 21, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.7,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-07-21-hydra","authors":["ch1bo"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-07-26-consensus"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-07-21-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team updated the specification to align with recent\\noff-chain protocol changes, completed refactoring the snapshot emission\\nin preparation for event-sourced protocol logic, and updated to GHC\\n9.2.7, resulting in improved compile times and slightly smaller Plutus\\nscripts.\\n\\n## What did the team achieve this week\\n\\n-   Updated the specification to match the recent off-chain protocol\\n    changes to complete\\n    [#728](https://github.com/input-output-hk/hydra/pull/728)\\n-   Refactored the snapshot emission logic in preparation for event\\n    sourced protocol logic.\\n-   Updated to GHC 9.2.7, which led to improved compile times and\\n    slightly smaller plutus scripts.\\n\\n## What are the goals of next week\\n\\n-   Monthly review meeting next wednesday and July report\\n-   Reflect latest information onto our roadmap.\\n-   Actual implemention of event-sourced persistence\\n    [#913](https://github.com/input-output-hk/hydra/pull/913).\\n-   Update the use cases section on <https://hydra.family>\\n-   Remove deprecated internal commit\\n    [#954](https://github.com/input-output-hk/hydra/pull/954)."},{"id":"2023-07-21-ledger","metadata":{"permalink":"/cardano-updates/2023-07-21-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-21-ledger.md","source":"@site/blog/2023-07-21-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-07-21T00:00:00.000Z","formattedDate":"July 21, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.715,"hasTruncateMarker":false,"authors":[{"name":"Alexey Kuleshevich","title":"Ledger Team Software Engineer","url":"https://github.com/lehins","imageURL":"https://github.com/lehins.png","key":"lehins"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-07-21-ledger","authors":"lehins","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-07-21-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-07-21-sre"}},"content":"## High level summary\\n\\nOur focus was on planning and implementing Conway features that we would like to see deployed and running on Sanchonet. \\nAll members of the ledger team participated in the CIP-1694 workshop and had an in-person meeting, where we discussed plans forward for the Conway era.\\nWe also investigated some transaction validation issues that occurred on preview with the latest node (for 8.2 release).\\nAdditionally, we did some preparatory work that will help us define the types we need for Plutus V3 and integrate with the new version when it will become available.\\nWe also made progress on the constraint-based generators, which can now generate valid transactions and ledger states. \\n\\n## What we achieved \\n\\n* [[pull-3521]] [[pull-3554]] Improved Governance model (GovernanceProcedures, ProposalProcedure)\\n* [[pull-3520]] Improved Governance-related naming (Renamed Tally to Gov and VDel to GovCert ) \\n* [[pull-3531]] Refactored and simplified code interacting with Plutus\\n* [[pull-3558]] Fixed a bug that was breaking validation on preview, related to refernce inputs witnesses. We backported and released the fix. \\n* [[pull-3550]] For Conway to run on Sanchonet, we updated the era Translation to remove zero-ADA outputs. This was necessary because such outputs exist on mainnet, but in Conway they are not allowed.\\n* [[pull-3551]] [[pull-3546]] [[pull-3472]] Updated tools and added some small improvements \\n* [[issue-3146]] [[pull-3498]] Introduced Conway protocol parameters \\n* [[issue-2948]] [[pull-3499]] Implemented ConwayGenesis with the new protocol parameters\\n\\n## What is currently in progress\\n\\n* [[issue-3494]] [[pull-3495]] Implement returning of proposal deposits\\n* [[issue-3436]] [[pull-3523]] Implement transferring lovelace from UTxO to treasury\\n* [[issue-3509]] [[pull-3552]] Add script-support for the committee hot key\\n* [[issue-3532]] [[pull-3556]] Add script-support for the constitution\\n* [[issue-3543]] [[pull-3557]] Improve the \'new committee\' governance action by specifying the members to be replaced, expiration epoch of new members and adding script-support\\n\\n\\n[pull-3521]: https://github.com/input-output-hk/cardano-ledger/pull/3521\\n[pull-3554]: https://github.com/input-output-hk/cardano-ledger/pull/3554\\n[pull-3520]: https://github.com/input-output-hk/cardano-ledger/pull/3520\\n[pull-3531]: https://github.com/input-output-hk/cardano-ledger/pull/3531\\n[pull-3558]: https://github.com/input-output-hk/cardano-ledger/pull/3558\\n[pull-3550]: https://github.com/input-output-hk/cardano-ledger/pull/3550\\n[pull-3551]: https://github.com/input-output-hk/cardano-ledger/pull/3551\\n[pull-3546]: https://github.com/input-output-hk/cardano-ledger/pull/3546\\n[pull-3472]: https://github.com/input-output-hk/cardano-ledger/pull/3472\\n[pull-3498]: https://github.com/input-output-hk/cardano-ledger/pull/3498\\n[pull-3499]: https://github.com/input-output-hk/cardano-ledger/pull/3499\\n[pull-3495]: https://github.com/input-output-hk/cardano-ledger/pull/3495 \\n[pull-3523]: https://github.com/input-output-hk/cardano-ledger/pull/3523\\n[pull-3552]: https://github.com/input-output-hk/cardano-ledger/pull/3552\\n[pull-3556]: https://github.com/input-output-hk/cardano-ledger/pull/3556\\n[pull-3557]: https://github.com/input-output-hk/cardano-ledger/pull/3557 \\n[issue-3494]: https://github.com/input-output-hk/cardano-ledger/issues/3494\\n[issue-2948]: https://github.com/input-output-hk/cardano-ledger/issues/2948\\n[issue-3436]: https://github.com/input-output-hk/cardano-ledger/issues/3436\\n[issue-3532]: https://github.com/input-output-hk/cardano-ledger/issues/3532\\n[issue-3509]: https://github.com/input-output-hk/cardano-ledger/issues/3509\\n[issue-3146]: https://github.com/input-output-hk/cardano-ledger/issues/3146\\n[issue-3543]: https://github.com/input-output-hk/cardano-ledger/issues/3543"},{"id":"2023-07-21-sre","metadata":{"permalink":"/cardano-updates/2023-07-21-sre","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-21-sre.md","source":"@site/blog/2023-07-21-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-07-21T00:00:00.000Z","formattedDate":"July 21, 2023","tags":[{"label":"sre","permalink":"/cardano-updates/tags/sre"}],"readingTime":0.685,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-07-21-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-07-21-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-07-14-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements and general environment maintenance.\\n\\nSome notable recent improvements include:\\n* Re-spin sanchonet for testing a new node version followed by fork to Conway\\n* Deploying a sanchonet compatible faucet to sanchonet\\n* Migrate shelley qa legacy environment to cardano-world\\n\\n## Lower level summary\\n\\n### Cardano-node\\n* Bump iohk-nix for sanchonet and shelley qa environment updates: [cardano-node-pull-5406](https://github.com/input-output-hk/cardano-node/pull/5406)\\n\\n### Cardano-ops\\n* Mainnet relays are 50% migrated to p2p topology and 1 relay per region dedicated for ledger peers: [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/31cce1a...496f085)\\n\\n### Cardano-world\\n* Cardano-node p2p all local roots entrypoint option was added: [cardano-world-pull-102](https://github.com/input-output-hk/cardano-world/pull/102)\\n* Migrate shelley qa legacy environment to cardano-world: [cardano-world-pull-103](https://github.com/input-output-hk/cardano-world/pull/103)\\n* Create a sanchonet compatible faucet: [cardano-world-pull-91](https://github.com/input-output-hk/cardano-world/pull/91)\\n\\n### Iohk-nix\\n\\n* Migrate shelley qa legacy environment to cardano-world: [iohk-nix-pull-549](https://github.com/input-output-hk/iohk-nix/pull/549)\\n* Drop legacy byron environment parameters: [iohk-nix-pull-550](https://github.com/input-output-hk/iohk-nix/pull/550)"},{"id":"2023-07-14-hydra","metadata":{"permalink":"/cardano-updates/2023-07-14-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-14-hydra.md","source":"@site/blog/2023-07-14-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-07-14T00:00:00.000Z","formattedDate":"July 14, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.79,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"},{"name":"Sasha Bogicevic","title":"Hydra Software Engineer","url":"https://github.com/v0d1ch","imageURL":"https://github.com/v0d1ch.png","key":"v0d1ch"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-07-14-hydra","authors":["ffakenz","v0d1ch"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-07-21-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-07-13-mithril"}},"content":"## High-level summary\\n\\nThis week the team focused on exploring the event sourced persistence in order\\nto improve `hydra-node` performance. Because of this work the team noticed we\\nneed to refactor the emit snapshot emission logic and update the spec in the\\nlight of new changes. They also took the time to revisit their goals and product\\nplans for the next quarter as well as doing some security fixes related to\\nmultisignatures.\\n\\n## What did the team achieve this week\\n\\n-   Finished spike about performance improvements of event sourced persistence [#963](https://github.com/input-output-hk/hydra/pull/963).\\n-   Refactor snapshot emission in protocol logic.\\n-   Revisited our roadmap and goals.\\n-   Prepared and conducated a learning session on lean-waste.\\n-   Improve security of multi-signature checks, see [this Github security advisory](https://github.com/input-output-hk/hydra/security/advisories/GHSA-c8qp-cv4h-vcc4).\\n-   Implemented a cache friendly way to version our binaries [#962](https://github.com/input-output-hk/hydra/pull/962).\\n\\n## What are the goals of next week\\n\\n-   Implement Event sourced persistence [#913](https://github.com/input-output-hk/hydra/pull/913).\\n-   Remove deprecated internal commit [#954](https://github.com/input-output-hk/hydra/pull/954) and close [#728](https://github.com/input-output-hk/hydra/pull/728)."},{"id":"2023-07-13-mithril","metadata":{"permalink":"/cardano-updates/2023-07-13-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-13-mithril.md","source":"@site/blog/2023-07-13-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-07-13T00:00:00.000Z","formattedDate":"July 13, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.92,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-07-13-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-07-14-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-07-12-consensus"}},"content":"## High level overview\\nThe Mithril team created a new [`2327.0`](https://github.com/input-output-hk/mithril/releases/tag/2327.0) distribution. They focused on preparing the beta launch on the `mainnet`: they tested the new production signer deployment model with the pioneer SPOs, they prepared an SPO on-boarding guide, and they kept working on the deployment and monitoring of the `mainnet` infrastructure. The team also worked on the implementation of a simple stress test tool for benchmarking the aggregator. Additionally, they completed the refactoring of the interface to the cryptographic library. \\n\\nFinally, they fixed a bug that sporadically prevented the latest signer registration of a SPO to be used in the associated signing epoch, they fixed a bug in the epoch gap detection of the certificate chain in the aggregator, and worked on multiple other optimizations and bugs.\\n\\n## Low level overview\\n- Released the new distribution [`2327.0`](https://github.com/input-output-hk/mithril/releases/tag/2327.0)\\n- Worked on the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Completed the issue `Add infrastructure monitoring` [#987](https://github.com/input-output-hk/mithril/issues/987)\\n  - Worked on the issue `Deploy \'mainnet\' infrastructure` [#988](https://github.com/input-output-hk/mithril/issues/988)\\n  - Worked on the issue `Handle Secrets management` [#989](https://github.com/input-output-hk/mithril/issues/989)\\n- Worked on the epic `Benchmark performances of Mithril Aggregator` [#904](https://github.com/input-output-hk/mithril/issues/904):\\n  - Worked on the issue `Design & implement basic stress test tool for aggregator` [#991](https://github.com/input-output-hk/mithril/issues/991)\\n- Worked on optimizations:\\n  - Completed the issue `Remove certificate hash from Artifact` [#932](https://github.com/input-output-hk/mithril/issues/932)\\n  - Completed the issue `Check vulnerabilities in CI` [#1037](https://github.com/input-output-hk/mithril/issues/1037)\\n  - Completed the issue `Add \'created_at\' in Mithril Stake Distribution messages` [#1030](https://github.com/input-output-hk/mithril/issues/1030)\\n  - Completed the issue `Add a \'run-only\' option in end to end test` [#1048](https://github.com/input-output-hk/mithril/issues/1048)\\n- Worked on refactoring:\\n  - Completed the issue `Factorize protocol crypto operations` [#669](https://github.com/input-output-hk/mithril/issues/669)\\n  - Completed the issue `Refactor aggregator dependency injection and services` [#1058](https://github.com/input-output-hk/mithril/issues/1058)\\n  - Completed the issue `Build static binaries in CI` [#874](https://github.com/input-output-hk/mithril/issues/874)\\n- Worked on documentation:\\n  - Completed the issue `Prepare SPO on-boarding guide` [#1049](https://github.com/input-output-hk/mithril/issues/1049)\\n  - Completed the issue `Add instructions to set firewall using iptables` [#1040](https://github.com/input-output-hk/mithril/issues/1040)\\n  - Completed the issue `Update ufw command to set firewall on Mithril Signer installation instructions` [#1041](https://github.com/input-output-hk/mithril/issues/1041)\\n- Worked on bugs:\\n  - Completed the issue `Aggregator does not detect certificate chain epoch gap` [#952](https://github.com/input-output-hk/mithril/issues/952)\\n  - Completed the issue `\'testing-preview\' network does not create certificates` [#1015](https://github.com/input-output-hk/mithril/issues/1015)\\n  - Completed the issue `SQLite compatibility in aggregator` [#837](https://github.com/input-output-hk/mithril/issues/837)\\n  - Completed the issue `Q&A followup fixes` [#1035](https://github.com/input-output-hk/mithril/issues/1035)\\n  - Completed the issue `E2E tests are flaky in CI` [#1023](https://github.com/input-output-hk/mithril/issues/1023)"},{"id":"2023-07-12-consensus","metadata":{"permalink":"/cardano-updates/2023-07-12-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-12-consensus.md","source":"@site/blog/2023-07-12-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-07-12T00:00:00.000Z","formattedDate":"July 12, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":0.59,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-07-12-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-07-13-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-07-12-performance-and-tracing"}},"content":"## High level summary\\n\\nThis week the team working on UTxO-HD discovered a space leak in the peer metrics code. This was communicated to the Networking team who has a [proposed fix](https://github.com/input-output-hk/ouroboros-network/pull/4620). The ad-hoc benchmarks that the team ran using a local immutable DB server showed good memory and time performance. We still have to check the performance on a memory constrained machine.\\n\\nThe team working on the Genesis design started onboarding the team of engineers that will implement the new Genesis protocol. This team is also finalizing the statistical model for historical Genesis feasibility.\\n\\nOn the support front, the team [drafted](https://github.com/input-output-hk/ouroboros-consensus/pull/200) an information exchange requirement (IER) for the Networking team to safely and efficiently control peer load."},{"id":"2023-07-12-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-07-12-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-12-performance-and-tracing.md","source":"@site/blog/2023-07-12-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-07-12T00:00:00.000Z","formattedDate":"July 12, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":2.29,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-07-12-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-07-12-consensus"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-07-07-crypto"}},"content":"## High level summary\\n\\n* Benchmarking: The peformance investigation into the compiler switch to GHC9 is ongoing. Additionally, a roadmap for implementing Consensus QTAs has been developed.\\n* Infrastructure: Our workbench has undergone some refactoring to seamlessly integrate its profiles into all available backends.\\n* Tracing: Optimization of the new tracing system is ongoing and yielding good performance results.\\n* Nomad backend: We developed a new feature for the nomad backend which allows pinning deployments to specific machines.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nOur analysis of the GHC9 build of `cardano-node` has produced several locations in the code base where the new compiler seems to miss opportunities for optimization. Our hypothesis is, that those can account for the difference in resource usage we observe when benchmarking with a full cluster run. Instructing the compiler on how to perform the optimizations which GHC8 apparently applied out of the box requires further investigation.  \\n  \\nIn an effort to define Quantitative Timeliness Agreements (QTAs) on a per-component basis, we have coordinated with the Consensus team and developed a roadmap for providing those on consensus level. Making use of the insight that system-level benchmarks allow, we intend to set up and calibrate a benchmark that can reliably predict a regression or optimization for select metrics before needing full integration into `cardano-node`. This will help tremendously in various ways: catching regressions much earlier, localizing them much easier, avoiding repeated component integration and much shorter feedback cycle.\\n\\n### Infrastructure\\n\\nWe have worked on seamless integration of our benchmarking profiles into the many available backends that the workbench provides. The goal was to be backend-agnostic, to guarantee that all benchmarking run artifacts be structurally identical as far as their file name, format and location are concerned. This lead to refactoring work and has already landed in `master`.\\n\\n### Tracing\\n\\nMuch effort went into further optimization of the new tracing system. After working on configuration to align both new and legacy tracing system with regard to their trace frequencies, we could uncover some increase in resource usage. This occurred for corner cases under very heavy load. These cases have been addressed already, and do now surpass the legacy tracing system in terms of performance.\\n\\n### Nomad backend\\n\\nFor reliable benchmarking results it is vital to introduce as few confounding factors as possible when performing runs. This includes hardware and network topology. The nomad backend has been outfitted with a mechanism to pin the nomad job for some node in our benhcmarking cluster to a specific machine instance. This greatly increases confidence in the metrics observed from a run.  \\n\\nFurthermore this feature will detect any change in the underlying hardware or topology so it can be taken into account. The new feature has been merged to `master`."},{"id":"2023-07-07-crypto","metadata":{"permalink":"/cardano-updates/2023-07-07-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-07-crypto.md","source":"@site/blog/2023-07-07-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":0.795,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-07-07-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-07-12-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-07-07-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Sidechains: First version of snark-based ATMS\\n* mithril: Full node verifier\\n* kes_agent: Keep progress, and prepare CIP and CPS\\n* CIPs and community: Finishing BLS12-381 CIP and working on a KECCAK CIP\\n\\n## Low level summary\\n### kes_agent\\n* KES Agent CIP/CSP. Preparing documents. Will become public in the future.\\n* KES Agent testsuite (https://github.com/input-output-hk/kes-agent/issues/14)\\n* RawBearer abstraction in ouroboros-network-framework (https://github.com/input-output-hk/ouroboros-network/pull/4395)\\n* Maintaining required changes to cardano-base for KES Agent (https://github.com/input-output-hk/cardano-base/pull/317)\\n### Mithril\\n* Final review of the implementation of Full Node Verifier [#939](https://github.com/input-output-hk/mithril/pull/939).\\n  Included benchmarks and further tests.\\n### Sidechains\\n* Schnorr signature implemented\\n* ATMS signature implemented\\n* First benchmarks show that for the committe size we expect, we need 2^21 constraints. \\n### CIPs and community\\n* Addressed some review comments in [#PR506](https://github.com/cardano-foundation/CIPs/pull/506)\\n* Worked with the communityt on [#PR524](https://github.com/cardano-foundation/CIPs/pull/524) to include Keccak as part of the next Plutus release."},{"id":"2023-07-07-goedel","metadata":{"permalink":"/cardano-updates/2023-07-07-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-07-goedel.md","source":"@site/blog/2023-07-07-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.42,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-07-07-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-07-07-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-07-07-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the teams have been working on finalising their ICE papers\\nfor publication in EPTCS, formalising concensus, and investigating chain\\nsync.\\n\\n## Details\\n\\n* Preparing final versions of ICE papers\\n\\n* Reviewing the chain sync design and documentation\\n\\n* Refactoring the thorn calculus\\n\\n* First draft of Praos specification\\n\\n* Developing bounding factors on timeouts"},{"id":"2023-07-07-hydra","metadata":{"permalink":"/cardano-updates/2023-07-07-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-07-hydra.md","source":"@site/blog/2023-07-07-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.865,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"},{"name":"Sasha Bogicevic","title":"Hydra Software Engineer","url":"https://github.com/v0d1ch","imageURL":"https://github.com/v0d1ch.png","key":"v0d1ch"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-07-07-hydra","authors":["ffakenz","v0d1ch"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-07-07-goedel"},"nextItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-07-07-sre"}},"content":"## High-level summary\\n\\nThis week the Hydra team accomplished some nice progress. They secured the\\nnetwork layer further by implementing authentication of the messages between the\\npeers in the Head protocol. In the process they also managed to separate\\nHeartBeat messages from the protocol ones which somewhat improved the quality of\\ncode in Hydra. The team also finished work related to sending only transaction\\nids in ReqSn messages, fixed an issue in the smoke tests, and improved benchmark\\npublishing on the website.\\n\\n## What did the team achieve this week\\n\\n- [Implemented](https://github.com/input-output-hk/hydra/issues/727) authenticated messages\\n- [Implemented](https://github.com/input-output-hk/hydra/issues/728) send only transaction ids in ReqSn messages\\n- Separate [HeartBeat](https://github.com/input-output-hk/hydra/pull/969) messages from the core network protocol messages\\n- Publish multiple pre-defined [benchmarks](https://github.com/input-output-hk/hydra/pull/947)\\n- [Fixed](https://github.com/input-output-hk/hydra/pull/967) a smoke-test issue where funds would not be returned to the faucet\\n- Found a bug in the [off-chain signature\\n  verification](https://github.com/input-output-hk/hydra-ghsa-c8qp-cv4h-vcc4/pull/1)\\n\\n## What are the goals of next week\\n\\n- Spike on performance improvements of event sourced persistence [#913](https://github.com/input-output-hk/hydra/issues/913)\\n- Add new endpoint for submitting client transactions\\n- Remove commit from internal wallet"},{"id":"2023-07-07-sre","metadata":{"permalink":"/cardano-updates/2023-07-07-sre","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-07-sre.md","source":"@site/blog/2023-07-07-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"sre","permalink":"/cardano-updates/tags/sre"}],"readingTime":0.815,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-07-07-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-07-07-hydra"},"nextItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-07-04-db-sync"}},"content":"## High level summary\\n\\nThe SRE team continues work on cardano environment improvements, supporting CI improvements, and general environment maintenance.\\n\\nSome notable recent improvements include:\\n* Improved cardano-node entrypoint handling to allow for clean restarts in the Nomad environment\\n* Explorer component updates\\n* Spongix caching server rewrite for R2 Cloudflare support and various performance improvements\\n\\n## Lower level summary\\n\\n### Cardano-node\\n* Nixos service update to enable non-systemd socket activation multi-node relays: [cardano-node-pull-5360](https://github.com/input-output-hk/cardano-node/pull/5360)\\n\\n### Cardano-ogmios\\n* Cardano ogmios bump to 5.6.0 for nixos service: [cardano-ogmios-pull-6](https://github.com/input-output-hk/cardano-ogmios/pull/6)\\n\\n### Cardano-ops\\n* Improve storage resize script, workaround systemd node signal handling, rescale p2p relays: [cardano-ops-compare](https://github.com/input-output-hk/cardano-ops/compare/88a17c9...dfde751)\\n\\n### Cardano-rosetta\\n* Cardano-rosetta nixos modifications for rosetta 2.1.0 service: [cardano-rosetta-pull-532](https://github.com/cardano-foundation/cardano-rosetta/pull/532)\\n\\n### Cardano-world\\n* Cardano-node entrypoint improvements: [cardano-world-pull-99](https://github.com/input-output-hk/cardano-world/pull/99)\\n* Further automate pool performance SQL query: [cardano-world-pull-100](https://github.com/input-output-hk/cardano-world/pull/100)\\n* Performance and benchmark job related tweaks: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/02f1ba424d3e36bd114df6f53b769d2cd25301c3)\\n* Explorer related component version bumps and traefik definition handline: [cardano-world-pull-101](https://github.com/input-output-hk/cardano-world/pull/101)\\n\\n### Spongix\\n* Spongix caching server rewrite for Cloudflare R2 backend support plus misc improvements: [spongix-simple-branch](https://github.com/input-output-hk/spongix/compare/afd77728f5823d61732425df52a363949096e163...4890ff93308f45584bea8443cc13fbc16c8ce911)"},{"id":"2023-07-04-db-sync","metadata":{"permalink":"/cardano-updates/2023-07-04-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-07-04-db-sync.md","source":"@site/blog/2023-07-04-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-07-04T00:00:00.000Z","formattedDate":"July 4, 2023","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":0.73,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-07-04-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-07-07-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-30-hydra"}},"content":"## High level summary\\nWe\'ve made progress in all high level objectives\\n- CIP-1694 integration design\\n- UTxO-HD integration proof of concept\\n- schema migrations with a focus on speeding up frequent queries is part of release 13.1.1.2 and tested\\n- Many devx issues resolved\\n\\n## Lower level summary\\n- We have improved and validated the design for the Conway integration in db-sync\\n- Improved the initial integration of the UTxO-HD feauture branches which are under test\\n- Prepared a new release 13.1.1.3 which supports node 8.1.1\\n[#1455](https://github.com/input-output-hk/cardano-db-sync/pull/1455).\\n- This also fixes a bug\\n[#1451](https://github.com/input-output-hk/cardano-db-sync/issues/1451)\\n- Added new tests to the new tx_out options\\n[#1429](https://github.com/input-output-hk/cardano-db-sync/pull/1429)\\n- Fixed a chronic issue in db-sync related to exception handling and concurrency\\nThis fixes many other issues and simplifies the logic in db-sync\\n[#1447](https://github.com/input-output-hk/cardano-db-sync/pull/1447)\\n- A number of fixes and improvements in ci, docker, devx, docs\\n[#1436](https://github.com/input-output-hk/cardano-db-sync/pull/1436)\\n[#1442](https://github.com/input-output-hk/cardano-db-sync/pull/1442)\\n[#1448](https://github.com/input-output-hk/cardano-db-sync/pull/1448)\\n[#1452](https://github.com/input-output-hk/cardano-db-sync/pull/1452)"},{"id":"2023-06-30-hydra","metadata":{"permalink":"/cardano-updates/2023-06-30-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-30-hydra.md","source":"@site/blog/2023-06-30-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-30T00:00:00.000Z","formattedDate":"June 30, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.925,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-30-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-07-04-db-sync"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-06-29-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team wrote and published the monthly report for June,\\nimplemented the end-to-end functionality for external commits, and tested it on\\nthe preview environment. They also listed Hydra as a tool on the Cardano\\ndeveloper portal, providing more visibility for the project. The team clarified\\nthe path forward for L2 protocol improvements and explored an alternative CI\\napproach using cabal instead of nix. Additionally, they released version 0.11.0,\\nmarking another milestone in the project&rsquo;s development.\\n\\n## What did the team achieve this week\\n\\n-   Written and published the monthly report for [June](https://hydra.family/head-protocol/monthly/2023-06)\\n-   Implemented external commits end-to-end incl. tested it on preview [#215](https://github.com/input-output-hk/hydra/issues/215)\\n-   Listed Hydra as a tool on cardano [developer portal](https://developers.cardano.org/tools/)\\n-   Cleared up path forward on L2 protocol improvements [#728](https://github.com/input-output-hk/hydra/issues/728)\\n-   Established an alternative CI using more cabal tools [#923](https://github.com/input-output-hk/hydra/pull/923)\\n-   Release version [0.11.0](https://github.com/input-output-hk/hydra/releases/tag/0.10.0)\\n\\n## What are the goals of next week\\n\\n-   Spike on performance improvements of event sourced persistence [#913](https://github.com/input-output-hk/hydra/issues/913)\\n-   Complete ReqSn only sends transaction ids [#728](https://github.com/input-output-hk/hydra/issues/728)\\n-   Groom and plan last items for 0.12.0 (remove internal commit)\\n-   Improve reliability of benchmarks"},{"id":"2023-06-29-mithril","metadata":{"permalink":"/cardano-updates/2023-06-29-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-29-mithril.md","source":"@site/blog/2023-06-29-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-06-29T00:00:00.000Z","formattedDate":"June 29, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":2.205,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-06-29-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-30-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-06-28-consensus"}},"content":"## High level overview\\nThe Mithril team completed the design of the signer deployment model for the SPOs to run Mithril on their Cardano `mainnet` infrastructure, and implemented the associated Mithril Relay in the Mithril networks. They started working on the design and implementation of a stress test tool for benchmarking the aggregator performances. They worked on the refactoring of the Mithril Stake Distribution entity and the uniformization of the date types in the nodes. They also worked on implementing a new tool command in the aggregator and its first sub-command that helps avoiding re-genesis of the certificate chain when the structure of the certificate is updated. Additionally, they worked on implementing some monitoring for the Mithril infrastructure, and worked on a retry mechanism for the artifact creation of the aggregator.\\n\\nFinally, they fixed some bugs, and they completed the upgrade of the Mithril networks to Cardano node v.8.1.1.\\n\\n## Low level overview\\n- Worked on the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Worked on the issue `Add infrastructure monitoring` [#987](https://github.com/input-output-hk/mithril/issues/987)\\n- Completed the epic `Prepare Mithril Signer deployment model for SPO` [#862](https://github.com/input-output-hk/mithril/issues/862):\\n  - Completed the issue `Design recommended deployment model for SPOs on \'mainnet\' and \'preview\'/\'preprod\'` [#961](https://github.com/input-output-hk/mithril/issues/961)\\n  - Completed the issue `Adapt infrastructure to use Mithril Relay` [#1018](https://github.com/input-output-hk/mithril/issues/1018)\\n  - Completed the issue `Announce the new signer deployment model in a dev blog post` [#1017](https://github.com/input-output-hk/mithril/issues/1017)\\n- Worked on the epic `Benchmark performances of Mithril Aggregator` [#904](https://github.com/input-output-hk/mithril/issues/904):\\n  - Worked on the issue `Design & implement basic stress test tool for aggregator` [#991](https://github.com/input-output-hk/mithril/issues/991)\\n- Worked on bugs:\\n  - Completed the issue `Aggregator does not exit on critical error` [#993](https://github.com/input-output-hk/mithril/issues/993)\\n  - Completed the issue `Computation of master certificate of an epoch is incorrect` [#1006](https://github.com/input-output-hk/mithril/issues/1006)\\n  - Completed the issue `End to end tests are flaky` [#954](https://github.com/input-output-hk/mithril/issues/954)\\n  - Worked on the issue `\'testing-preview\' network does not create certificates` [#1015](https://github.com/input-output-hk/mithril/issues/1015)\\n- Worked on optimizations:\\n  - Completed the issue `Dates format is not standardized` [#946](https://github.com/input-output-hk/mithril/issues/946)\\n  - Completed the issue `Add \'recompute-certificates-hash\' command to aggregator` [#1001](https://github.com/input-output-hk/mithril/issues/1001)\\n  - Completed the issue `Add a retry mechanism for artifact creation in aggregator` [#984](https://github.com/input-output-hk/mithril/issues/984)\\n  - Completed the issue `Log node version at startup in Aggregator/Signer` [#944](https://github.com/input-output-hk/mithril/issues/944)\\n  - Completed the issue `Reactivate Publish Results job in CI` [#978](https://github.com/input-output-hk/mithril/issues/978)\\n  - Completed the issue `Clean \'pending_snapshot\' directory of aggregator` [#983](https://github.com/input-output-hk/mithril/issues/983)\\n  - Completed the issue `Update OpenAPI spec examples` [#1000](https://github.com/input-output-hk/mithril/issues/1000)\\n- Worked on refactoring:\\n  - Completed the issue `Refactor \'MithrilStakeDistribution\' entity` [#967](https://github.com/input-output-hk/mithril/issues/967)\\n  - Completed the issue `Refactoring client` [#982](https://github.com/input-output-hk/mithril/issues/982)\\n  - Completed the issue `Refactor download code in client` [#1010](https://github.com/input-output-hk/mithril/issues/1010)\\n  - Worked on the issue `Factorize protocol crypto operations` [#669](https://github.com/input-output-hk/mithril/issues/669)\\n- Worked on dependencies:\\n  - Completed the issue `Upgrade Cardano node to \'8.1.1\'` [#973](https://github.com/input-output-hk/mithril/issues/973)"},{"id":"2023-06-28-consensus","metadata":{"permalink":"/cardano-updates/2023-06-28-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-28-consensus.md","source":"@site/blog/2023-06-28-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-06-28T00:00:00.000Z","formattedDate":"June 28, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":1.85,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-06-28-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-06-29-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-06-28-performance-and-tracing"}},"content":"## High level summary\\n\\nDuring the past two weeks the team working on the Genesis implementation continued to engage with the researchers, which resulted in various simplifications of the correctness argument for the historical Genesis window. They also decided on an approach for a syncing node to decide that it is (no longer) caught up. This functionality was requested by the networking team. \\n\\nThe team working on the UTxO-HD implementation ran ad-hoc benchmarks that showed performance issues, which are being investigated. They also merged several improvements required for the first UTxO-HD release, and added a package for easing integration with other downstream components.\\n\\nRegarding our support activities, we integrated the latest Ledger changes into Consensus in preparation for release 8.2 of node. \\n\\n### Genesis\\n\\n- We continued to engage with the researchers on our probabilistic model for historical Genesis window, resulting in various simplifications that make the correctness argument more clear while not being excessively conservative.\\n\\n- We [decided on an approach](https://github.com/input-output-hk/ouroboros-consensus/issues/101#issuecomment-1607767722) of how to implement functionality requested by the Networking team; namely, how a syncing node can safely conclude that it is (no longer) caught up. Certain parameters are still subject to discussion with the researchers, and we have still have to agree on a concrete API for this functionality with the Networking team.\\n\\n### UTxO-HD\\n\\n- We merged the last of the PRs that were part of UTxO-HD improvements for version [0.1](https://github.com/input-output-hk/ouroboros-consensus/issues/149): expose UTxO-HD configuration options in the node, refactor ledger tables, and expose a method of computing the UTxO set size.\\n- We [added](https://github.com/input-output-hk/ouroboros-consensus/pull/87) a new \\"legacy\\" cardano block in a new `ouroboros-consensus-cardano-legacy-block` package that should ease the transition for some downstream packages to UTxO-HD, like `db-sync`. This is really only useful for downstream packages that use the parts of consensus that don\'t involve the storage components, in which case we can largely ignore ledger tables. Ignoring ledger tables could also make functionality like block (re-)application more performant for the legacy Cardano block as compared to the actual (UTxO-HD compatible) Cardano block.\\n- We performed ad-hoc benchmarks of the UTxO-HD implementation, observing a regression in sync speed in the LMDB implementation as well as a regression in memory usage on the in-memory implementation. We are investigating this."},{"id":"2023-06-28-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-06-28-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-28-performance-and-tracing.md","source":"@site/blog/2023-06-28-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-06-28T00:00:00.000Z","formattedDate":"June 28, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":1.885,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-06-28-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-06-28-consensus"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-06-23-goedel"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve performed several new benchmarks and a performance investigation in preparation of switching the default compiler to GHC9.\\n* Infrastructure: The first batch of refactoring and documentation for our `tx-generator` has been merged to `master`.\\n* Tracing: We\'ve looked into an issue where the tracing system\'s concurrency could prevent a graceful node shutdown.\\n* Nomad backend: Our new cloud backend has seen various improvements regarding deployment and monitoring; validation runs for the backend are ongoing.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nThe compiler switch to GHC9 as the default build platform for `cardano-node` and its components still has noticeable effects on system-wide performance metrics. An investigation into the different resource usage profiles of compiler versions does seem to indicate GHC9\'s significantly different inlining behaviour may produce those effects. We\'re currently locating the specific places in component code that have the most extensive effect in that regard.  \\n  \\nUsing the `forge-stress` approximation we set up, we could determine that above effect is not due to a range of RTS parameters, as for example the number of capabilites used by the node.\\n\\n### Infrastructure\\n\\nThe `tx-generator` is a crucial part of our tooling responsible for producing very specific workloads for our benchmarking cluster. In an effort to flesh out an API to make it reusable for more general use cases, a first set of refactorings has been merged to `master`. Additionally, this merge contained systematic documentation both for internal and for exposed areas of the code base.\\n\\n### Tracing\\n\\nThe tracing system\'s concurrency could under certain conditions prevent a graceful shutdown of the node. This issue did occur only after adding specific new traces on a development branch. We could localize and address that issue.\\n\\n### Nomad backend\\n\\nWith the data gathered from running the new nomad cloud backend, we\'ve been able to address many, many small and medium-sized improvements. The deployment process has been restructured for better efficiency, and the healthcheck system could be fine-tuned to recognize severity of various conditions that might occur. Optimization of fetching all run data from the cloud for evaluation is in progress.\\n\\nAdditionally, we\'re continuing the new backend\'s validation by setting up test runs and looking into comparative analyses with metrics gathered from the current cluster backend."},{"id":"2023-06-23-goedel","metadata":{"permalink":"/cardano-updates/2023-06-23-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-23-goedel.md","source":"@site/blog/2023-06-23-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-06-23T00:00:00.000Z","formattedDate":"June 23, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.335,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-06-23-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-06-28-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-23-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the teams presented two papers at ICE 2023.\\n\\n## Details\\n\\n* Presented two papers at ICE 2023: https://www.discotec.org/2023/ice\\n\\n* Analysing and implementing chain synchronization mini protocol\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-06-23-hydra","metadata":{"permalink":"/cardano-updates/2023-06-23-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-23-hydra.md","source":"@site/blog/2023-06-23-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-23T00:00:00.000Z","formattedDate":"June 23, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.79,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"},{"name":"Pascal Grange","title":"Hydra Software Engineer","url":"https://github.com/pgrange","imageURL":"https://github.com/pgrange.png","key":"pgrange"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-23-hydra","authors":["ffakenz","pgrange"],"tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-06-23-goedel"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-06-23-network"}},"content":"## High-level summary\\n\\nThis week, the Hydra team shared progress updates during the monthly review\\nmeeting (monthly report and video recording available soon) and started\\nexperimenting on preview network with the new commit from external wallet\\nfeature.\\n\\n## What did the team achieve this week\\n\\n- Monthly report & review meeting, demonstrating [commit from external\\n  wallet](https://github.com/input-output-hk/hydra/pull/887)\\n- Published regular [benchmarks for\\n  Hydra](https://hydra.family/head-protocol/unstable/benchmarks/end-to-end-benchmarks)\\n- Moved forward the journey for external commits using multiple script UTxOs\\n  [#903](https://github.com/input-output-hk/hydra/pull/903)\\n- Changed the API to only put transaction id in snapshots, instead of the full\\n  transactions [#922](https://github.com/input-output-hk/hydra/pull/922) -> this\\n  is now evolved into fully addressing [#728](\\n  https://github.com/input-output-hk/hydra/issues/728)\\n- Fuel marking is now optional as one can now commit from an external wallet\\n  [#924](https://github.com/input-output-hk/hydra/pull/924)\\n- Add flag option to display node version on tui\\n  [#934](https://github.com/input-output-hk/hydra/pull/934)\\n\\n## What are the goals of next week\\n\\n- Complete external commits using multiple script UTxOs [#903](https://github.com/input-output-hk/hydra/pull/903)\\n- New release 0.11.0\\n- Dirtroad solution of improved persistence performance [#913](https://github.com/input-output-hk/hydra/pull/913)"},{"id":"2023-06-23-network","metadata":{"permalink":"/cardano-updates/2023-06-23-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-23-network.md","source":"@site/blog/2023-06-23-network.md","title":"Network Team Update","description":"Network Update","date":"2023-06-23T00:00:00.000Z","formattedDate":"June 23, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":1.7,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-06-23-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-23-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-06-23-sre"}},"content":"## Network Update\\n\\n### Key contributions\\n\\nWe held a series of session to review the implementation of big ledger peers\\n(eclipse evasion). See [#4462].\\n\\nWe get a request from a 3rd party to clarify an inconsistency between CDDL spec\\nand protocol implementation.  We worked out a nice solution which takes\\nadvantage of the `any` notion available in `CDDL`.  On the Haskell side we\\nprovide `Any` type which gen generate almost any CBOR term (some are excluded\\nonly because they are not decoded back to the same form, and we relay on that\\nproperty).  See [#4580].\\n\\nWe fixed a bunch of problems of the `cardano-cli ping` command.  It also now has\\na limited support of `node-to-client` mini-protocol (the `-c` option is\\nignored, as it cannot be supported by `node-to-client` protocol).  Note that\\nthe format of messages has changed, timestamps are printed in ISO8601 format.\\nSee [#4601], [#5326], [#5313], [#30]\\n\\nIn order to provide a new flag in the topology file which enables ledger peers\\nwhen the chain is close to the tip, we continued to work on [#4530].  This is\\ncurrently in review, the consensus team will need to provide us with the new\\napi.  This feature is useful for two reasons: makes it easier to maintain\\na topology file, it will also limit the traffic on public roots generated by\\nfor example full node wallets and distribute it to ledger peers.\\n\\nWe also continued to work on a blog post which describes the journey of design\\n& implementation of the dynamic P2P network layer.  Too be announced soon :).  \\n\\n### Other smaller changes\\n\\nWe limit the concurrency of resolving dns names.  Up to 8 root peers or ledger\\npeers DNS names are resolved concurrently, and at most 2 local root peer DNS\\nnames. See [#4596].\\n\\nWe fixed handshake query timeout in [#4603].\\n\\nWe renamed one of the block-fetch decision constructors as requested by the\\nconsensus team, see [#4608].\\n\\n[#30]: https://github.com/input-output-hk/cardano-cli/pull/30\\n[#4462]: https://github.com/input-output-hk/ouroboros-network/pull/4462\\n[#4580]: https://github.com/input-output-hk/ouroboros-network/pull/4580\\n[#4596]: https://github.com/input-output-hk/ouroboros-network/pull/4596\\n[#4598]: https://github.com/input-output-hk/ouroboros-network/issues/4598\\n[#4601]: https://github.com/input-output-hk/ouroboros-network/pull/4601\\n[#5313]: https://github.com/input-output-hk/cardano-node/pull/5313\\n[#5326]: https://github.com/input-output-hk/cardano-node/pull/5326\\n[#4603]: https://github.com/input-output-hk/ouroboros-network/pull/4603\\n[#4530]: https://github.com/input-output-hk/ouroboros-network/issues/4530\\n[#4608]: https://github.com/input-output-hk/ouroboros-network/pull/4608"},{"id":"2023-06-23-sre","metadata":{"permalink":"/cardano-updates/2023-06-23-sre","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-23-sre.md","source":"@site/blog/2023-06-23-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-06-23T00:00:00.000Z","formattedDate":"June 23, 2023","tags":[{"label":"sre","permalink":"/cardano-updates/tags/sre"}],"readingTime":0.98,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-06-23-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-06-23-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-16-hydra"}},"content":"## High level summary\\n\\nThe SRE team continues work on CI and cardano environment improvements.  Some notable recent improvements include:\\n* A devx-ci cluster containing a Hydra build server and Linux build farm was stood up and is intended to replace Cicero functionality\\n* Cardano Sanchonet environment was stood up to test Conway era functionality\\n* Cardano-node nixos service was updated to support the latest p2p topology format and non-systemd socket activation use case\\n* Cardano-node 8.1.1 was deployed to preview, preprod and mainnet environments\\n\\n## Lower level summary\\n\\n### Cardano-node\\n\\n- Update cardano-node nixos service for updated p2p topology and non-systemd socket activation: [cardano-node-pull-5318](https://github.com/input-output-hk/cardano-node/pull/5318)\\n\\n### Cardano-ops\\n\\n- Updates required for node 8.1.1 nixos service: [cardano-ops-pull-414](https://github.com/input-output-hk/cardano-ops/pull/414)\\n- Work in progress continues on mixed legacy and p2p topology clusters in cardano-ops: [cardano-ops-ops-local](https://github.com/input-output-hk/cardano-ops/tree/ops-local), [cardano-ops-mn-mixed-p2p](https://github.com/input-output-hk/cardano-ops/tree/mn-mixed-p2p)\\n\\n### Cardano-world\\n\\n- Add Sanchonet environment: [cardano-world-pull-96](https://github.com/input-output-hk/cardano-world/pull/96)\\n\\n### Ci-ops\\n\\n- Add devx-ci cluster integration for legacy darwin [ci-ops-compare](https://github.com/input-output-hk/ci-ops/compare/b158b17...ed875b9)\\n\\n### Ci-world\\n\\n- Add devx-ci cluster integration for caching, monitoring during cicero to devx-ci transition: [ci-world-compare](https://github.com/input-output-hk/ci-world/compare/840cdb6...b08c250)\\n\\n### Devx-ci\\n\\n- A CI cluster with a hydra build server was stood up and is intended to replace usage of Cicero: [devx-ci-repo](https://github.com/input-output-hk/devx-ci)\\n\\n### Iohk-nix\\n\\n- Add Sanchonet environment: [iohk-nix-pull-545](https://github.com/input-output-hk/iohk-nix/pull/545)"},{"id":"2023-06-16-hydra","metadata":{"permalink":"/cardano-updates/2023-06-16-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-16-hydra.md","source":"@site/blog/2023-06-16-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-16T00:00:00.000Z","formattedDate":"June 16, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.815,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-16-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-06-23-sre"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-06-15-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team focused their efforts on continuing to investigate and\\nexperiment operating a head on mainnet. They collected several bugs and issues\\nand worked on fixing them. Now the team is soon to release a new version,\\n0.11.0, which comes with a lot of improvements and bug fixes.\\n\\n\\n## What did the team achieve this week\\n\\n-   Restored and fixed a bug which stalled our head on mainnet [#927](https://github.com/input-output-hk/hydra/issues/927)\\n-   Solved one user issue [#914](https://github.com/input-output-hk/hydra/issues/914)\\n-   Reduced significantly local state size and logs by removing the full scripts from it [#928](https://github.com/input-output-hk/hydra/pull/928)\\n-   (pending review) Reduced snapshot size in the API, by only including tx ids [#922](https://github.com/input-output-hk/hydra/pull/922)\\n\\n## What are the goals of next week\\n\\n-   New release 0.11.0\\n-   Monthly report & review meeting.\\n-   Fix some minor bugs discovered when operating our head on mainnet\\n-   Complete journey for external commits using multiple script UTxOs [#903](https://github.com/input-output-hk/hydra/pull/903)\\n-   Publish benchmarks and provide regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186)"},{"id":"2023-06-15-mithril","metadata":{"permalink":"/cardano-updates/2023-06-15-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-15-mithril.md","source":"@site/blog/2023-06-15-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-06-15T00:00:00.000Z","formattedDate":"June 15, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.795,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-06-15-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-16-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-06-14-consensus"}},"content":"## High level overview\\nThe Mithril team completed the implementation of the new sub-command for restoring a Mithril stake distribution in the client. They also updated the client\u2019s developer documentation and architecture documentation, and did some refactoring on the client and its dependency injection mechanism. Additionally, they completed and deployed infrastructure enhancements on the test Mithril networks. They also completed the performance tests of the new stake distribution computation on the Cardano mainnet.\\n\\nFinally, the team worked on fixing a bug on the client multi-platform test, a bug on the aggregator state machine, and some flakiness on the CI.\\n\\n## Low level overview\\n- Completed on the epic that designs and implements generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the issue `Create the sub-command for \'Mithril Stake Distribution\' in client` [#896](https://github.com/input-output-hk/mithril/issues/896)\\n  - Completed the issue `Adapt end to end tests to handle new types of data` [#899](https://github.com/input-output-hk/mithril/issues/899)\\n  - Completed the issue `Update client documentation` [#897](https://github.com/input-output-hk/mithril/issues/897)\\n  - Completed the issue `Update architecture documentations for new types of data` [#898](https://github.com/input-output-hk/mithril/issues/898)\\n  - Completed the issue `Refactoring client` [#960](https://github.com/input-output-hk/mithril/issues/960)\\n- Worked on the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Completed the issue `Enhance terraform infrastructure` [#930](https://github.com/input-output-hk/mithril/issues/930)\\n- Completed the epic that implements the computation of the stake distribution for `mainnet` [#880](https://github.com/input-output-hk/mithril/issues/880):\\n  - Completed the issue `Check performance impact of new stake distribution command on the \'mainnet\'` [#962](https://github.com/input-output-hk/mithril/issues/962)\\n- Worked on the epic `Prepare Mithril Signer deployment model for SPO` [#862](https://github.com/input-output-hk/mithril/issues/862):\\n  - Worked on the issue `Design recommended deployment model for SPOs on \'mainnet\' and  \'preview\'/\'preprod\'` [#961](https://github.com/input-output-hk/mithril/issues/961)\\n- Worked on bugs and optimizations:\\n  - Completed the issue `Aggregator does not always detect new immutable file` [#953](https://github.com/input-output-hk/mithril/issues/953)\\n  - Completed the issue `CI tests fail with Rust \'1.70.0\'` [#958](https://github.com/input-output-hk/mithril/issues/958)\\n  - Worked on the issue `End to end tests are flaky` [#954](https://github.com/input-output-hk/mithril/issues/954)\\n  - Worked on the issue `Certificate dates in metadata are not on the same timezone` [#946](https://github.com/input-output-hk/mithril/issues/946)\\n  - Worked on the issue `Refactor \'MithrilStakeDistribution\' entity` [#967](https://github.com/input-output-hk/mithril/issues/967)\\n  - Completed the issue `Fix \'Mithril Client multi-platform test\' with new client interface` [#956](https://github.com/input-output-hk/mithril/issues/956)\\n  - Completed the issue `Enhance \'ImmutableDigesterError::NotEnoughImmutable\' error` [#969](https://github.com/input-output-hk/mithril/issues/969)\\n  - Completed the issue `Client \'snapshot download\' command fails with option \'--download-dir\'` [#979](https://github.com/input-output-hk/mithril/issues/979)"},{"id":"2023-06-14-consensus","metadata":{"permalink":"/cardano-updates/2023-06-14-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-14-consensus.md","source":"@site/blog/2023-06-14-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-06-14T00:00:00.000Z","formattedDate":"June 14, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":1.115,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-06-14-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-06-15-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-06-14-performance-and-tracing"}},"content":"## High level summary\\n\\nThe Consensus team had a very productive meeting with IOG Researchers. We now seem to be in alignment in regards to a strong argument that the `Byron` and `TPraos` eras do not need to be checkpointed for an MVP.\\nThere is one remaining question (which applies also to the `Praos` era): how to assess the threat that short forks pose against historical windows that underperformed? We are currently collaborating on that. We also drafted an argument that the updated \\"Limit on Patience\\" timeout sufficiently bounds how long the adversary can inflate a victim\'s overall sync time.\\n\\nOn the UTxO-HD front, the prototype branch was rebased on top of the latest `ouroboros-consensus` `main` branch and integrated on top of `cardano-node 8.1.1-pre`. As a result, the mempool fairness fix that was released recently is now integrated into UTxO-HD.\\nWe managed to run a node again with UTxO-HD enabled. \\nWe also identified a race condition in the UTxO-HD prototype and fixed it. In addition, we started performing UTxO-HD ad-hoc benchmarks for `cardano-node`, which uncovered a performance regression on the Network component when using `GHC-9.2/9.4`. This is being addressed.\\n\\nRegarding our support activities, we Released `fs-sim-0.2.0.0` and are in the process of preparing the 8.2 release of `cardano-node`. We also identified and started fixing incorrectly-unevaluated thunks in preparation for enabling CI NoThunks tests."},{"id":"2023-06-14-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-06-14-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-14-performance-and-tracing.md","source":"@site/blog/2023-06-14-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-06-14T00:00:00.000Z","formattedDate":"June 14, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":1.515,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-06-14-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-06-14-consensus"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-06-12-network"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve continued release benchmarking and established a new baseline for `8.0.0`.\\n* New tracing: Our benchmarking profile for measuring new vs. legacy tracing performance has been refined.\\n* Nomad backend: The healthcheck system for the the nomad cloud has been completed. We\'ve performed the first full runs on the new backend.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nIn our release benchmarking cycle, we established a new performance baseline for `8.0.0`. Additionally, we\'ve measured\\nperformance under various workloads for `8.1.1-pre`; the results look promising and validate the optimization efforts\\ndone on several system components.  \\n  \\nIn the meantime, we\'ve finalized a build plan with GHC9.2 that matches the current one with GHC8.10; a requirement for\\nbenchmarking as a large amount of differences in the dependency graph can confound the results for the application code proper.\\n\\n\\n### Tracing\\n\\nThe legacy and the new tracing system differ fundamentally in design, implementation and handling. So for metrics to be\\nmeaningful in a comparison, benchmarking profiles have to be tuned such that not only log line frequency but frequency of specific\\ntrace messages are closely aligned. We\'ve found that higher granularity in this regard was necessary, and done additional work on our dedicated profiles.  \\n\\nAdditionally, we\'ve had a first glance of what additional traces could be valuable in the context of benchmarking UTxO-HD.\\n\\n\\n### Nomad backend\\n\\nAs the new backend\'s healthcheck system in its first iteration can now serve as a guardrail to ensure sanity of a full-length run, we\'ve performed our first 52-node cluster runs on nomad cloud. We\'re currently smoothing the edges around cluster deployment, and analysing the metrics gathered from those runs.  \\n\\nThis means the backend is entering validation phase, where we systematically compare all metrics taken from the new\\ninfrastructure to the existing ones, including determining reproducibility and variance."},{"id":"2023-06-12-network","metadata":{"permalink":"/cardano-updates/2023-06-12-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-12-network.md","source":"@site/blog/2023-06-12-network.md","title":"Network Team Update","description":"Network Update","date":"2023-06-12T00:00:00.000Z","formattedDate":"June 12, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":2.205,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-06-12-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-06-14-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-06-09-crypto"}},"content":"## Network Update\\n\\n### Key contributions and advances\\n\\nWe merged `light peer sharing` feature, which allows to include inbound peers\\ninto outbound governor known peers.  This is the primary way for new\\nunregistered nodes to enter the network, which then can be shared using peer\\nsharing.  Note that peer sharing is an experimental feature which is disabled\\nuntil genesis & eclipse evasion as fully implemented. See [#3596].\\n\\nWe are making progress reviewing eclipse evasion, [#3886].\\n\\nWe fixed another bug in local root peers.  We found out that if the local roots\\nwhere ignored until the first domain name was resolved, see [#4583].  The bug\\nfix was backported and released in `ouroboros-network-0.8.1.1`.\\n\\nWe re-started working on dynamically enabling block forging to address issue\\n[#3159], which will enable us to release `P2P` on block producing nodes. See [#140].\\n\\n#### New `cardano-ping` / `cardano-cli ping` release\\n\\nWe prepared a new release of `cardano-ping` library which supports the new\\nquery feature (query supported versions). See [#4589], [#4593] and [#5313].\\nThe new version of `cardano-cli ping` will use `ISO8601` formatted\\ntimestamps; also the formatting of ping results is slightly improved, and it\\nwill introduce the new `--query-versions` (`-Q`) switch.  If the remote site\\nsupports the query parameter, the command will print:\\n```\\nredacted-ip:port network rtt: 0.064\\nredacted-ip:port handshake rtt: 0.064010896s\\nredacted-ip:port Queried versions [NodeToNodeVersionV11 764824073 InitiatorAndResponder,NodeToNodeVersionV10 764824073 InitiatorAndResponder,NodeToNodeVersionV9 764824073 Initiat\\norAndResponder,NodeToNodeVersionV8 764824073 InitiatorAndResponder,NodeToNodeVersionV7 764824073 InitiatorAndResponder]\\n```\\notherwise it will print the negotiation results\\n```\\nredacted-ip:port network rtt: 0.045\\nredacted-ip:port handshake rtt: 0.101867615s\\nredacted-ip:port Negotiated version NodeToNodeVersionV10 764824073 InitiatorAndResponder\\n```\\nNote that in that case `cardano-cli ping` offers `InitiatorAndResponder`, which\\nallows us to detect whether the remote side is an `InitiatorOnly` or\\n`InitiatorAndResponder`.   Also `cardano-cli ping` will no longer announce\\nitself as `InitiatorAndResponder`, except for the case mentioned above.\\n\\n### Other smaller contributions\\n\\nOn a request from the Marlow Team, we published haddocks of `typed-protocols`,\\nwhich are now available [here][typed-protocols-haddocks] ([#40], [#41]).\\n\\nWe made a new release of `strict-stm-1.1.0.1` on Hackage, which fixed a bug in\\npackage description file, [#101] .\\n\\nWe also helped to debug a deadlock when using named pipes on Windows in the new\\n`RawBearer` API.  The API is being used to store secret keys only in memory.\\nThe PR [#4395] is under review.\\n\\nWe also have two more PRs which are under review:\\n\\n* [#4530]: enabling ledger peers on a fixed number of slots before the tip of the chain;\\n* [#4580]: a PR which fixes inconsistencies in one of our cddl specs.\\n\\n[typed-protocols-haddocks]: https://input-output-hk.github.io/typed-protocols/\\n\\n[#40]: https://github.com/input-output-hk/typed-protocols/pull/40\\n[#41]: https://github.com/input-output-hk/typed-protocols/pull/41\\n[#101]: https://github.com/input-output-hk/io-sim/pull/101\\n[#140]: https://github.com/input-output-hk/ouroboros-consensus/pull/140\\n[#3159]: https://github.com/input-output-hk/ouroboros-network/issues/3159\\n[#3596]: https://github.com/input-output-hk/ouroboros-network/issues/3596\\n[#3886]: https://github.com/input-output-hk/ouroboros-network/issues/3886\\n[#4395]: https://github.com/input-output-hk/ouroboros-network/pull/4395\\n[#4530]: https://github.com/input-output-hk/ouroboros-network/issues/4530\\n[#4580]: https://github.com/input-output-hk/ouroboros-network/issues/4580\\n[#4583]: https://github.com/input-output-hk/ouroboros-network/issues/4583\\n[#4589]: https://github.com/input-output-hk/ouroboros-network/pull/4589\\n[#4593]: https://github.com/input-output-hk/ouroboros-network/pull/4593\\n[#5313]: https://github.com/input-output-hk/cardano-node/pull/5313"},{"id":"2023-06-09-crypto","metadata":{"permalink":"/cardano-updates/2023-06-09-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-09-crypto.md","source":"@site/blog/2023-06-09-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-06-09T00:00:00.000Z","formattedDate":"June 9, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":0.705,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-06-09-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-06-12-network"},"nextItem":{"title":"Developer Experience Update","permalink":"/cardano-updates/2023-06-09-developer-experience"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* cardano-base: E2E tests for BLS bindings and KES agent \\n* Sidechains: Implement ECC chip and Rescue hash primitives for ATMS\\n* mithril: Full node verifier\\n\\n## Low level summary\\n### cardano-base\\n* RawBearer API in ouroboros-network-framework (https://github.com/input-output-hk/ouroboros-network/pull/4395); blocked due to issue with windows\' localSnocket. Trying to resolve.\\n* Adapting cardano-base for direct memory transfers between mlocked RAM and file descriptors [#317](https://github.com/input-output-hk/cardano-base/pull/317).\\n* Above, blocked by the simplification of typeclasses [#404](https://github.com/input-output-hk/cardano-base/pull/404).\\n* Provided e2e test cases to the testing team with aggregated signatures and schnorr signatures for the BLS bindings\\n### Mithril\\n* Implementation of Full Node Verifier [#939](https://github.com/input-output-hk/mithril/pull/939)\\n### Sidechains\\n* [ECC chip](https://github.com/input-output-hk/sidechains-zk/tree/master/prover/src/ecc) implemented for JubJub over BLS12-381\\n* [Rescue chip](https://github.com/input-output-hk/sidechains-zk/tree/master/prover/src/rescue) implemented for hashing.\\n* Currently working on Schnorr signature (which uses the above constraints)"},{"id":"2023-06-09-developer-experience","metadata":{"permalink":"/cardano-updates/2023-06-09-developer-experience","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-09-developer-experience.md","source":"@site/blog/2023-06-09-developer-experience.md","title":"Developer Experience Update","description":"High level summary","date":"2023-06-09T00:00:00.000Z","formattedDate":"June 9, 2023","tags":[{"label":"devx","permalink":"/cardano-updates/tags/devx"}],"readingTime":2.035,"hasTruncateMarker":false,"authors":[{"name":"Moritz Angermann","title":"Head of Developer Experience","url":"https://github.com/angerman","imageURL":"https://github.com/angerman.png","key":"angerman"}],"frontMatter":{"title":"Developer Experience Update","slug":"2023-06-09-developer-experience","authors":"angerman","tags":["devx"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-06-09-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-09-hydra"}},"content":"## High level summary\\n\\nThe Developer Experience team has been devoted to day-to-day troubleshooting and support of various elements including build failures, compiler upgrades, the maintaince of our cardano-haskell-packages (CHaP), and infrastructure like GitHub Actions, iohk-nix, haskell.nix, and devx. Furthermore, we have also contributed to upstream tooling improvements.\\n\\n## Lower level summary\\n\\n### build support & maintainance\\n\\nOur DevX team has been instrumental in troubleshooting and fixing a wide range of issues, from broken windows builds and obscure `LoadDLL` errors to `blst` integration across Nix and Github CI. We\'ve also initiated automatic uploads for release assets. Our efforts in streamlining complex CI setups have paid off, with some repositories like [cardano-base](https://github.com/input-output-hk/cardano-base) experiencing significant reductions in CI complexity.\\n\\n### compiler upgrades\\nAfter the support for 9.2 across our libraries, we have started working on 9.6 compabilitiy as well. This move brings us closer to the upstream compiler, facilitating the contribution of patches and enabling early detection of regressions. In addition, we\'re prioritizing compaining even stronger for better backwards compatibility.\\n\\n### CHaP (cardano-haskell-packages)\\nWe relocated the underlying tooling, ([foliage](https://github.com/input-output-hk/foliage)), for [CHaP](https://github.com/input-output-hk/cardano-haskell-packages) into the IOG organization. Furthermore, we have introduced [improved tooling to quickly add constraints to packages](https://github.com/input-output-hk/cardano-haskell-packages/pull/260), [better error reporting for add-revision](https://github.com/input-output-hk/cardano-haskell-packages/issues/285) and [better hackage url compatibility](https://github.com/input-output-hk/foliage/pull/63) to facilitate easer usage of CHaP.\\n\\n### GitHub Actions\\nOur repository, [input-output-hk/actions](https://github.com/input-output-hk/actions), now houses the necessary actions for installing pre-requisites to build Cardano projects using GitHub Actions. Leveraging the `base` and `haskell` install actions has allowed us to simplify workflows in the repos, focusing primarily on invoking `cabal`.\\n\\n\\n### iohk-nix\\nThe [iohk-nix](https://github.com/input-output-hk/iohk-nix) repository has undergone a major revamp and now provides pre-built packages of the cryptographic libraries IOG utilizes for GitHub Runners. The key components we use, `sodium`, `blst`, and `secp256k1`, are also fixed to certain revisions within the `iohk-nix` repository.\\n\\n### haskell.nix\\n[Haskell.nix](https://github.com/input-output-hk/haskell.nix) has been maintained and updated with the addition of GHC 9.6.2 and GHC 8.2.8. After discovering performance regression in the native bignum backend, we switched the default bignum backend to `gmp`.\\n\\n\\n### devx\\n\\nThe relatively new [devx](https://github.com/input-output-hk/devx) repository is where we experiment with a single nix development shell that aims to suffice for most use-cases at IOG. This initiative is expected to eliminate a number of CI failures related to project-build and shell interaction problems. The `devx` repository\'s readme has been updated to reflect its purpose and usage guidelines.\\n\\n### upstream tooling\\n\\nOur team remains committed to enhancing upstream tooling, with ongoing contributions to GHC, Cabal, and Nix."},{"id":"2023-06-09-hydra","metadata":{"permalink":"/cardano-updates/2023-06-09-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-09-hydra.md","source":"@site/blog/2023-06-09-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-09T00:00:00.000Z","formattedDate":"June 9, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.18,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-09-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Developer Experience Update","permalink":"/cardano-updates/2023-06-09-developer-experience"},"nextItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-06-08-db-sync"}},"content":"## High-level summary\\n\\nThis week, the Hydra team worked on multiple fronts. They finished the\\ninvestigation about the broken head on mainnet and re-opened their persistent\\nhead instance. The team also fixed the monthly report publication on their\\nwebsite and started sketching ideas and further improvements. Also, they are on\\nthe last mile to deliver a new feature which will allow parties to commit funds\\nfrom extern wallets. Finally the team started to work on optimizing the\\nperformance on their benchmarks.\\n\\n## What did the team achieve this week\\n\\n-   Finished investigation on broken head on mainnet [#897](https://github.com/input-output-hk/hydra/issues/897) and re-opened it.\\n-   Added support for externally committing regular utxo [#887](https://github.com/input-output-hk/hydra/pull/887)\\n-   Fix monthly report publication on docs website and published the [monthly report](https://hydra.family/head-protocol/monthly/2023-05). Odd problems when publishing monthly report:\\n    +   Make us think about if we should change something about the website [#908](https://github.com/input-output-hk/hydra/issues/908)\\n    +   Open issue to docusaurus [#9036](https://github.com/facebook/docusaurus/issues/9036)\\n-   Fixed a bug in the benchmark process [#910](https://github.com/input-output-hk/hydra/pull/910)\\n-   Explored performance of the `hydra-node`{.verbatim} and identified a\\n    bottleneck.\\n-   Timed transaction feature is being used by the auction project \ud83c\udf89 \\n\\n## What are the goals of next week\\n\\n-   Complete performance analysis and start/plan improvements and provide\\n    regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186)\\n-   Add hydra as tool to developer platform [#872](https://github.com/input-output-hk/hydra/issues/872).\\n-   Authenticate network messages [#727](https://github.com/input-output-hk/hydra/issues/727).\\n-   Complete journey for external commits using multiple script UTxOs [#903](https://github.com/input-output-hk/hydra/pull/903)\\n-   Start implementing _Option B_ for external commits [#215](https://github.com/input-output-hk/hydra/issues/215)."},{"id":"2023-06-08-db-sync","metadata":{"permalink":"/cardano-updates/2023-06-08-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-08-db-sync.md","source":"@site/blog/2023-06-08-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":0.745,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-06-08-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-09-hydra"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-06-08-goedel"}},"content":"## High level summary\\nWe\'ve made progress in all high level objectives\\n- CIP-1694 integration design\\n- UTxO-HD integration proof of concept\\n- schema migrations with a focus on speeding up frequent queries is part of release 13.1.1.2\\n- A new hire will help us with devx issues.\\n\\n## Lower level summary\\n- We have an initial design for the Conway integration in db-sync\\n- The initial UTxO-HD integration resulted in a requested feuture that\\nthe consensus team is working on\\n[#88](https://github.com/input-output-hk/ouroboros-consensus/issues/88).\\n- Added two optional migrations that speed up querying UTxO\\n[#1416](https://github.com/input-output-hk/cardano-db-sync/pull/1416)\\n- Work on improving the above feauture by adding tests and fixing tech debt\\n[#1429](https://github.com/input-output-hk/cardano-db-sync/pull/1429)\\n[#1419](https://github.com/input-output-hk/cardano-db-sync/pull/1419)\\n- Fixed issue with ada_pots being wrong\\nhttps://github.com/input-output-hk/cardano-db-sync/pull/1407/commits/1ad4521a5601e8e98dc06bba2826d6b2f9b4fcf4\\n- Added a process which fixes in place scripts with wrong CBOR serialisation.\\nhttps://github.com/input-output-hk/cardano-db-sync/pull/1407/commits/8792f72e2485b320de26c02dacc4d504d377ba17\\n- Prepared a tag [`13.1.1.2`](https://github.com/input-output-hk/cardano-db-sync/releases)\\nwhich is tested and ready to release. It contains many of the above."},{"id":"2023-06-08-goedel","metadata":{"permalink":"/cardano-updates/2023-06-08-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-08-goedel.md","source":"@site/blog/2023-06-08-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.605,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-06-08-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-06-08-db-sync"},"nextItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-06-08-sre"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on giving and preparing public\\ntalks, also on preparing final versions of their ICE 2023 papers, and\\non analysing chain selection.\\n\\nThis sprint the team has been working on final revisions for the\\npre-proceedings versions of two ICE 2023 papers.\\n\\n## Details\\n\\n* Lambda Days keynote by Kevin Hammond:\\n  https://www.lambdadays.org/lambdadays2023\\n\\n* Codebeam keynote by Peter Van Roy: https://www.youtube.com/watch?v=h8sE3Ai8Dsk; https://www.youtube.com/watch?v=h8sE3Ai8Dsk\\n\\n* Preparing talks and final versions for two ICE 2023 contributions:\\n  https://www.discotec.org/2023/ice\\n\\n* Analysing chain selection.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-06-08-sre","metadata":{"permalink":"/cardano-updates/2023-06-08-sre","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-08-sre.md","source":"@site/blog/2023-06-08-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"sre","permalink":"/cardano-updates/tags/sre"}],"readingTime":1.795,"hasTruncateMarker":false,"authors":[{"name":"John Lotoski","title":"Service Reliability Engineer","url":"https://github.com/johnalotoski","imageURL":"https://github.com/johnalotoski.png","key":"johnalotoski"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-06-08-sre","authors":"johnalotoski","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-06-08-goedel"},"nextItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2023-06-08-system-test"}},"content":"## High level summary\\n\\nThe SRE team continues work on CI and cardano environment improvements.  Some notable recent improvements include: expanding the darwin CI cluster and providing new aarch64 builder support; adding bare metal bitte cluster capability with network overlay for high IOPS workload performance, such as explorer.\\n\\n## Lower level summary\\n\\n### Bitte\\n\\n- Equinix bare metal capability was added to bitte: [bitte-pull-194](https://github.com/input-output-hk/bitte/pull/194)\\n- Update bitte nixpkgs, nix version, nomad driver, equinix lifecycle, misc bug fixes: [bitte-pull-201](https://github.com/input-output-hk/bitte/pull/201)\\n\\n### Bitte-cells\\n\\n- Improvements made for patroni cluster recovery of large databases: [bitte-cells-branch](https://github.com/input-output-hk/bitte-cells/compare/main...patroni-flex)\\n\\n### Cardano-graphql\\n\\n- Update cardano-graphql and nixos service: [cardano-graphql-pull-815](https://github.com/input-output-hk/cardano-graphql/pull/815)\\n\\n### Cardano-node\\n\\n- Update cardano-node to use the updated iohk-nix environments: [cardano-node-pull-5241](https://github.com/input-output-hk/cardano-node/pull/5241)\\n\\n### Cardano-ops\\n\\n- Update cardano-graphql, adds monitoring improvements and misc bug fixes: [cardano-ops-pull-411](https://github.com/input-output-hk/cardano-ops/pull/411)\\n- Work in progress on mixed legacy and p2p topology clusters in cardano-ops: [cardano-ops-branch](https://github.com/input-output-hk/cardano-ops/compare/master...ops-local)\\n\\n### Cardano-world\\n\\n- Add a declarative cardano-faucet dashboard: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/e7d40d34aff52bbeb309f87939bd0d40f585e60a)\\n- Remove a requirement for root user in Nomad docker images: [cardano-world-pull-68](https://github.com/input-output-hk/cardano-world/pull/68)\\n- Enable explorer in cardano-world for high IOPS metal access: [cardano-world-pull-69](https://github.com/input-output-hk/cardano-world/pull/69)\\n- Migrate explorer cluster to cardano-world: [cardano-world-pull-75](https://github.com/input-output-hk/cardano-world/pull/75)\\n- Migrate testnet metadata server to cardano-world, cleanup envs: [cardano-world-pull-77](https://github.com/input-output-hk/cardano-world/pull/77)\\n- Add a faucet restore delegation script to cardano-world for non-functioning delegated pools: [cardano-world-pull-79](https://github.com/input-output-hk/cardano-world/pull/79)\\n- Integrate node 8.x into cardano-world: [cardano-world-pull-84](https://github.com/input-output-hk/cardano-world/pull/84)\\n- Update cardano-world to use iohk-nix for node environments: [cardano-world-pull-87](https://github.com/input-output-hk/cardano-world/pull/87)\\n- Create a stakepool analysis query for cluster pool performance overview: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/64fe3b9d4067c24eef028ac1c561d6f9a7d5a9a8)\\n- Added an iptables fixup script for broken bridged networking nomad jobs: [cardano-world-commit](https://github.com/input-output-hk/cardano-world/commit/02550206e4e34d121135794b6e54084635e55a50)\\n- Improve cardano-world job automation with additional parameterization: [cardano-world-pr-92](https://github.com/input-output-hk/cardano-world/pull/92)\\n- Update preview network experimental config defaults: [cardano-world-pr-93](https://github.com/input-output-hk/cardano-world/pull/93)\\n\\n### Ci-ops\\n\\n- Update legacy darwin builders and buildkite agent for ci-world network overlay and monitoring: [ci-ops-pull-108](https://github.com/input-output-hk/ci-ops/pull/108)\\n\\n### Ci-world\\n\\n- Resolve ci-world linux buildkite agent cleanup bug: [ci-world-commit](https://github.com/input-output-hk/ci-world/commit/3d053b202a6e40fab23db49801de7d6e580fab1f)\\n- Integrate new darwin builders into ci-world: [ci-world-pull-22](https://github.com/input-output-hk/ci-world/pull/22)\\n- Migrate patroni HA db to it\'s own namespace in ci-world: [ci-world-pull-24](https://github.com/input-output-hk/ci-world/pull/24)\\n\\n### Cicero\\n\\n- Implement a cicero webhook backoff with exponential decay plus jitter: [cicero-pull-79](https://github.com/input-output-hk/cicero/pull/79)\\n\\n### Iohk-nix\\n\\n- Update iohk-nix to be source of truth for node environments: [iohk-nix-pull-534](https://github.com/input-output-hk/iohk-nix/pull/534)\\n- Update preview network experimental config defaults: [iohk-nix-pull-544](https://github.com/input-output-hk/iohk-nix/pull/544)\\n\\n### Openziti\\n\\n- Add darwin intel and arm support to ziti-edge-tunnel nix modules: [openziti-bins-pull-1](https://github.com/johnalotoski/openziti-bins/pull/1)"},{"id":"2023-06-08-system-test","metadata":{"permalink":"/cardano-updates/2023-06-08-system-test","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-08-system-test.md","source":"@site/blog/2023-06-08-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"system-test","permalink":"/cardano-updates/tags/system-test"}],"readingTime":1.005,"hasTruncateMarker":false,"authors":[{"name":"Martin Kourim","title":"System Test Engineer","url":"https://github.com/mkoura","imageURL":"https://github.com/mkoura.png","key":"mkoura"}],"frontMatter":{"title":"System Test Team Update","slug":"2023-06-08-system-test","authors":"mkoura","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-06-08-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-02-hydra"}},"content":"## High level summary\\nSince the last update (2023-03-26) we did more improvements on our Test Framework, added more automated tests, kept analyzing and fixing nightly jobs failures, tested the _1.35.7_ and _8.0.0_ releases.\\n\\n## Workstreams\\n\\n[Full list of closed PRs](https://github.com/input-output-hk/cardano-node-tests/pulls?page=1&q=is%3Apr+is%3Aclosed+updated%3A2023-03-26..2023-06-08)\\n\\n### Framework improvements:\\n- Make cardano-submit-api REST API service available and run corresponding regression tests by default\\n- Update cabal build testing for 8.0.0\\n- Add support for testing governance SPO poll\\n- Use Poetry for Python dependency management\\n- Check status of known GH issues during tests runtime and finish the test accordingly\\n- Generate topology files with both IP addresses and DNS names\\n- Log issues like failure to start a cluster instance and report errors during tests runtime\\n\\n### Testing improvements\\n- Add rollback testing:\\n    1. global consensus is reached after rollback, in situation where less than `securityParam` blocks were produced since cluster split\\n    1. global consensus is not reached when more than `securityParam` blocks were produced, and the result is permanent fork\\n- Add tests to governance SPO poll commands\\n\\n### Node:\\n- tested the [1.35.7](https://input-output-hk.github.io/cardano-node-tests/test_results/node/tag_1_35_7.html) release\\n- tested the [8.0.0](https://input-output-hk.github.io/cardano-node-tests/test_results/node/tag_8_0_0.html) release\\n\\n### DB-Sync:\\n- improvements in db-sync sync tests\\n- improvements in db-sync functional tests"},{"id":"2023-06-02-hydra","metadata":{"permalink":"/cardano-updates/2023-06-02-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-02-hydra.md","source":"@site/blog/2023-06-02-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-06-02T00:00:00.000Z","formattedDate":"June 2, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.215,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-06-02-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2023-06-08-system-test"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-06-01-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has put their effort on finding solutions on many\\ndifferent problems, such as our broken head on mainnet\\n[#897](https://github.com/input-output-hk/hydra/issues/897), our fragile monthly\\nreport publications on the website and implementing &ldquo;Option A&rdquo; for\\nexternal commits [#215](https://github.com/input-output-hk/hydra/issues/215).\\nAlthough most of these items are still open, huge progress has been made. To\\naccelerate the investigation, they improved their logging to give more precise\\nerrors when a transition requirement fails, and to reduce duplication on effets\\nlogged content. Last but not least, the team is exploring formal methods and\\nattended a workshop on formalizing cryptographic protocols in Agda.\\n\\n\\n## What did the team achieve this week\\n\\n-   Continued investigating broken head and opened an issue to keep track [#897](https://github.com/input-output-hk/hydra/issues/897).\\n    \\n    As part of this issue, improvements were made to the node logs:\\n\\n    +   Give a precise error when a transition requirement fails [#895](https://github.com/input-output-hk/hydra/pull/895).\\n\\n    +   Reduce duplication for effects logged content by using sequential eventId and effectId pair  [#896](https://github.com/input-output-hk/hydra/pull/896).\\n\\n-   Fixed references in the hydra specification [#893](https://github.com/input-output-hk/hydra/pull/893).\\n\\n-   Attended a workshop on formal methods and crypto in Agda.\\n\\n## What are the goals of next week\\n\\n-   Investigate and re-open our team-internal head on mainnet.\\n-   Improve and provide regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186).\\n-   Complete journey for external commits implementing &ldquo;Option A&rdquo; and start implementing &ldquo;Option B&rdquo; [#215](https://github.com/input-output-hk/hydra/issues/215).\\n-   Authenticate network messages [#727](https://github.com/input-output-hk/hydra/issues/727).\\n-   Add hydra as tool to developr platform [#872](https://github.com/input-output-hk/hydra/issues/872).\\n-   Fix monthly report publication on docs website."},{"id":"2023-06-01-mithril","metadata":{"permalink":"/cardano-updates/2023-06-01-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-06-01-mithril.md","source":"@site/blog/2023-06-01-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-06-01T00:00:00.000Z","formattedDate":"June 1, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.415,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-06-01-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-06-02-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-05-31-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2321.1`](https://github.com/input-output-hk/mithril/releases/tag/2321.1) distribution that fully implements the mechanism developed to sign generic data. They completed the upgrade of the Cardano node in the Mithril networks to v.8.0.0 and the implementation of the new computation of the stake distribution. They refactored the state machines of the signer and aggregator, and the signed entity service of the aggregator. Additionally, they worked on adapting the client and implementing a new sub-command for restoring the Cardano immutable file snapshots.\\n\\nFinally, the team worked on adding a new certificate list route in the aggregator REST API, and started enhancing the infrastructure of the Mithril networks.\\n\\n## Low level overview\\n- Released the new distribution [`2321.1`](https://github.com/input-output-hk/mithril/releases/tag/2321.1)\\n- Worked on the epic that designs and implements generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the issue `Enhance MessageAdapter for Artifact in aggregator REST API` [#925](https://github.com/input-output-hk/mithril/issues/925)\\n  - Completed the issue `Create the sub-command for \'Cardano Immutable Files Full\' in client` [#895](https://github.com/input-output-hk/mithril/issues/895)\\n  - Completed the issue `Enhance state machines Aggregator/Signer` [#933](https://github.com/input-output-hk/mithril/issues/933)\\n  - Completed the issue `Adapt the aggregator REST API to list certificates` [#892](https://github.com/input-output-hk/mithril/issues/892)\\n  - Worked on the issue `Adapt end to end tests to handle new types of data` [#899](https://github.com/input-output-hk/mithril/issues/899)\\n  - Worked on the issue `Update client documentation` [#897](https://github.com/input-output-hk/mithril/issues/897)\\n  - Worked on the issue `Update architecture documentations for new types of data` [#898](https://github.com/input-output-hk/mithril/issues/898)\\n- Worked on the epic that prepares the Mithril infrastructure for `mainnet` [#767](https://github.com/input-output-hk/mithril/issues/767):\\n  - Worked on the issue `Enhance terraform infrastructure` [#930](https://github.com/input-output-hk/mithril/issues/930)\\n- Worked on the epic that implements the computation of the stake distribution for `mainnet` [#880](https://github.com/input-output-hk/mithril/issues/880):\\n  - Completed the issue `Upgrade Cardano node to \'8.0.0\'` [#920](https://github.com/input-output-hk/mithril/issues/920)\\n- Completed the issue `Add export path in Client CLI` [#512](https://github.com/input-output-hk/mithril/issues/512)"},{"id":"2023-05-31-consensus","metadata":{"permalink":"/cardano-updates/2023-05-31-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-31-consensus.md","source":"@site/blog/2023-05-31-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-05-31T00:00:00.000Z","formattedDate":"May 31, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":0.825,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-05-31-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-06-01-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-05-31-performance-and-tracing"}},"content":"## High level summary\\n\\nDuring the Past two weeks we drafted an implementation path for concluding that a node is caught up, which will also be used to back Network\'s ledger-peer selection (see [this issue](https://github.com/input-output-hk/ouroboros-consensus/issues/101)). We also carried a thorough investigation into the exact feasibility of applying the Genesis rule to certain historical parts of the chain.\\n\\nOn the UTxO-HD front, we are working on improving the ledger tables design and wrapping up the improved DB locking mechanism. We also released packages that are required not only by UTxO-HD but are already used in cardano.\\n\\n## UTxO-HD\\n\\n- We have a plan for making the ledger tables in UTxO-HD more ergonomic by mimicking `SOP` classes like `HPure` and `HAp` . In short, we implement generalised versions of important classes like `Applicative` and `Traversable`.\\n\\n## Support\\n\\n- `fs-sim-0.1.0.2` and `fs-api-0.1.0.2` were released, which makes them now compatible with GHC up to `9.6`.\\n- `ouroboros-consensus-0.7.0.0` was released for `cardano-node` `8.1`, including query serialization fixes for backwards compatibility."},{"id":"2023-05-31-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-05-31-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-31-performance-and-tracing.md","source":"@site/blog/2023-05-31-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-05-31T00:00:00.000Z","formattedDate":"May 31, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":2.055,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-05-31-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-05-31-consensus"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-05-26-goedel"}},"content":"## High level summary\\n\\n* Benchmarking: We\'ve performed and analysed first benchmarks with GHC9.2 builds. Additionally we have developed an early indicator for how build config changes might reflect on metrics from our model cluster.\\n* New tracing: Collaboration with Galois led to the new tracing system to be equipped with a re-forwarding mechanism.\\n* Nomad backend: Porting the 52 node model cluster to nomad cloud is ongoing, with the focus on deployment and health checks.\\n\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nThe first set of runs with GHC9.2 as a build platform are in. We\'ve discovered a significant difference in resource profile usage compared to GHC8.10. Further investigation uncovered the need for benchmarking another parameter change in the build\\nconfiguration: As it stands, the `ghc-bignum` package is using the Haskell `native-backend` as a default. We strive\\nto benchmark a build with the `gmp-backend` next.  \\n\\nA variant of our `forge-stress` local benchmark has been set up to serve as an early indicator for the resource usage profile\\nwe\'d expect to observe on the model cluster. This provides us with a much tighter feedback loop, as local run duration is way\\nshorter. This indicator is specific to changes in the configuration of build and the runtime systems, and will be of great\\nsupport when evaluating different compiler versions or RTS flags incrementally.\\n\\n### Tracing\\n\\nThe hub of the new tracing system `cardano-tracer` is designed with a fixed output behaviour, which is limited to various\\nlogging options. Thanks to the contribution from Galois, that design is now extended to be able to re-forward all, or a pre-filtered portion, of traces from the node in a configurable manner. This will enable downstream applications to \\ndirectly receive the set of trace values relevant to their logic, without any additional cost for the node itself at all.\\n\\n\\n### Nomad backend\\nWe\'re currently working out the details of efficiently deploying and monitoring a fleet of 50+ nodes, along with\\njob definitions for tracing and transaction generation. Scaling up to those many instances, and monitoring an ongoing\\nbenchmarking run required us to fine-tune communications with the nomad server.  \\n\\nRelated to that, the new cloud backend will provide a monitoring and health-checking mechanism which is far more flexible\\nand offers more detailed insight than the previous iteration in `cardano-ops`. The backend will enable you to formulate\\nvery specific conditions for an ongoing run to be considered healthy, and offer automation of certain actions should these conditions not be met."},{"id":"2023-05-26-goedel","metadata":{"permalink":"/cardano-updates/2023-05-26-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-26-goedel.md","source":"@site/blog/2023-05-26-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-05-26T00:00:00.000Z","formattedDate":"May 26, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.39,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-05-26-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-05-31-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-05-26-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on final revisions for the\\npre-proceedings versions of two ICE 2023 papers.\\n\\n## Details\\n\\n* Porting Ouroboros Praos formalisation to new application layer.\\n\\n* Preparing pre-proceedings version of two ICE 2023 papers.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-05-26-hydra","metadata":{"permalink":"/cardano-updates/2023-05-26-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-26-hydra.md","source":"@site/blog/2023-05-26-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-05-26T00:00:00.000Z","formattedDate":"May 26, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-05-26-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-05-26-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-05-26-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team accomplished several important tasks. They held their\\nmonthly review meeting and drafted the report for May. They made progress on\\nimplementing the first end-to-end journey for external commits using \\"Option A\\"\\nfor normal UTxOs, while still considering \\"Option B\\". The team also integrated a\\nSpanish translation contributed by the community, created micro-benchmarks for\\ntransaction validation and deserialization, and made improvements to\\nhydra-node\'s version reporting. Last but not least, they implemented the ability\\nto commit multiple UTxOs to a head at once.\\n\\n## What did the team achieve this week\\n\\n-   Held the monthly review meeting ([recording](https://drive.google.com/file/d/1_N6b4RDe579TgLawiJzbE0NLofD3ljE6/view) + [slides](https://docs.google.com/presentation/d/1anUC3Z1idloyR6uwiSHLZtV6-LQvUcByHPMUgCBOVIA)) & drafted the report for May.\\n-   Have a first end-to-end journey for external commits implementing &ldquo;Option A&rdquo;\\n    for normal UTxOs [#887](https://github.com/input-output-hk/hydra/pull/887) (still considering &ldquo;Option B&rdquo;).\\n-   Integrated the spanish translation [#866](https://github.com/input-output-hk/hydra/pull/866).\\n-   Created micro-benchmarks for transaction validation and deserialization [#884](https://github.com/input-output-hk/hydra/pull/884).\\n-   Improve hydra-node &#x2013;version reporting on non-released builds [#849](https://github.com/input-output-hk/hydra/issues/849)\\n-   Some minor CI improvements following up last weeks changes.\\n-   Allow commit transactions with multiple UTxO [#774](https://github.com/input-output-hk/hydra/pull/774).\\n\\n## What are the goals of next week\\n\\n-   Investigate and re-open our team-internal head on mainnet.\\n-   Improve and provide regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186).\\n-   Complete external commits with script UTxOs [#215](https://github.com/input-output-hk/hydra/issues/215).\\n-   Authenticate network messages [#727](https://github.com/input-output-hk/hydra/issues/727).\\n-   Add hydra as tool to developr platform [#872](https://github.com/input-output-hk/hydra/issues/872)."},{"id":"2023-05-26-ledger","metadata":{"permalink":"/cardano-updates/2023-05-26-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-26-ledger.md","source":"@site/blog/2023-05-26-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-05-26T00:00:00.000Z","formattedDate":"May 26, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.565,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-05-26-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-05-26-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-05-26-network"}},"content":"## High level summary\\n\\nThe ledger team made progress on the conway ledger era. In particular, the design and implementation\\nof the new certificates is near complete, we refactored some of our data structures\\nto be able to support DReps, we cleaned up the serialization format, and renamed things to make\\nclearer the differences with Shelley.\\n\\nThe team also completed integration work for the next node release, namely 8.1.0.\\nAnd, as always, we continue to address technical debt.\\n\\n## Low level summary\\n\\n### Conway progress\\n\\n- [pull-3408] - Improve conway delegation certificates\\n- [pull-3428] - Get rid of Constitutional in favor of Genesis and Committee\\n- [pull-3426] - Add DRep to internal data struture (UMap)\\n- [pull-3425] - Improve witness logic needed for conway\\n- [pull-3423] - Rename ShelleyDelegCerts constructors to distinguish them from Conway\\n- [pull-3421] - Rename DCert -> TxCert\\n- [pull-3454] - conway CDDL minor fixes\\n\\n### Improve testing\\n\\n- [pull-3403] - Add Plutus script context golden tests\\n\\n### Integration work\\n\\n- [pull-3410] - Update chaps index\\n- [pull-3416] - Bump cardano-ledger-alonzo-test version\\n- [pull-3414] - Bump cardano-ledger-shelley-test minor version\\n- [pull-3420] - Bump cardano-ledger-shelley-ma-test version\\n- [pull-3441] - Release cardano-ledger-[alonzo|babbage]-1.2.1\\n\\n### Technical debt\\n\\n- [pull-3409] -  Unit test - no such thing as a reference datum\\n- [pull-3407] -  Fixup release process documentation\\n- [pull-3404] -  Create TotalDeposits events during all eras\\n- [pull-3402] -  Fix broken references in the Shelley spec\\n- [pull-3424] -  Remove no longer used cardano-ledger-shelley-ma package\\n- [pull-3432] -  Add an example on how to bump up versions in the changelog \\n- [pull-3440] -  Revert back to the group serialization for ProtVer for PParams \\n\\n[pull-3409]: https://github.com/input-output-hk/cardano-ledger/pull/3409\\n[pull-3408]: https://github.com/input-output-hk/cardano-ledger/pull/3408\\n[pull-3407]: https://github.com/input-output-hk/cardano-ledger/pull/3407\\n[pull-3404]: https://github.com/input-output-hk/cardano-ledger/pull/3404\\n[pull-3403]: https://github.com/input-output-hk/cardano-ledger/pull/3403\\n[pull-3402]: https://github.com/input-output-hk/cardano-ledger/pull/3402\\n[pull-3410]: https://github.com/input-output-hk/cardano-ledger/pull/3410\\n[pull-3416]: https://github.com/input-output-hk/cardano-ledger/pull/3416\\n[pull-3414]: https://github.com/input-output-hk/cardano-ledger/pull/3414\\n[pull-3428]: https://github.com/input-output-hk/cardano-ledger/pull/3428\\n[pull-3426]: https://github.com/input-output-hk/cardano-ledger/pull/3426\\n[pull-3425]: https://github.com/input-output-hk/cardano-ledger/pull/3425\\n[pull-3424]: https://github.com/input-output-hk/cardano-ledger/pull/3424\\n[pull-3423]: https://github.com/input-output-hk/cardano-ledger/pull/3423\\n[pull-3421]: https://github.com/input-output-hk/cardano-ledger/pull/3421\\n[pull-3420]: https://github.com/input-output-hk/cardano-ledger/pull/3420\\n[pull-3432]: https://github.com/input-output-hk/cardano-ledger/pull/3432\\n[pull-3454]: https://github.com/input-output-hk/cardano-ledger/pull/3454\\n[pull-3441]: https://github.com/input-output-hk/cardano-ledger/pull/3441\\n[pull-3440]: https://github.com/input-output-hk/cardano-ledger/pull/3440"},{"id":"2023-05-26-network","metadata":{"permalink":"/cardano-updates/2023-05-26-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-26-network.md","source":"@site/blog/2023-05-26-network.md","title":"Network Team Update","description":"High level summary","date":"2023-05-26T00:00:00.000Z","formattedDate":"May 26, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":0.515,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-05-26-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-05-26-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-05-24-node-cli-api"}},"content":"## High level summary\\n\\nWe continued working on `eclipse-evasion`.  We also analysed and fixed a bug\\nwhen using DNS names in local root peers.  We continued working on engineering\\nblog post about P2P. We released a new version of packages for\\n`cardano-node-8.1.0` release.\\n\\nWe improved our CI, removed obsolete scripts add extra validation which checks\\nif `CHANGELOG.md` files were updated.\\n\\nWe also improved release scripts.\\n\\n## Detailed summary\\n\\n* Eclipse evasion: [#4462]\\n* Local root peers bug fix: [#4559]\\n* Release to CHaP: [#4573]\\n* CI improvements: [#4572]\\n* Release script improvements: [#4573]\\n\\n[#4462]: https://github.com/input-output-hk/ouroboros-network/pull/4462\\n[#4558]: https://github.com/input-output-hk/ouroboros-network/pull/4558\\n[#4559]: https://github.com/input-output-hk/ouroboros-network/pull/4559\\n[#4572]: https://github.com/input-output-hk/ouroboros-network/pull/4572\\n[#4573]: https://github.com/input-output-hk/ouroboros-network/pull/4573"},{"id":"2023-05-24-node-cli-api","metadata":{"permalink":"/cardano-updates/2023-05-24-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-24-node-cli-api.md","source":"@site/blog/2023-05-24-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-05-24T00:00:00.000Z","formattedDate":"May 24, 2023","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-05-24-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-05-26-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-05-19-hydra"}},"content":"# 2023-05-24 - 2023-06-06\\n\\n## High level summary\\n- The last sprint focused on removing cardano-cli and cardano-api from the cardano-node repository. We have successfully moved cardano-api to its own repository and will do the same for cardano-cli after the 8.1 node is released. \\n- We provided assitance where needed in the release\\n- An integration repository https://github.com/input-output-hk/fusion-flamingo was created to enable my team to more easily work on cardano-cli and cardano-api\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Update `cardano-cli` changelog](https://github.com/input-output-hk/cardano-node/pull/5290) \\n- [Propagate protocol parameters conversion errors](https://github.com/input-output-hk/cardano-node/pull/5197) \\n- [Command line option for parsing UTC time to slot number](https://github.com/input-output-hk/cardano-node/pull/5149) \\n\\n### cardano-api\\n- [Switch to `tasty-discover`](https://github.com/input-output-hk/cardano-api/pull/31) \\n- [Move tests to standard locations](https://github.com/input-output-hk/cardano-api/pull/30) \\n- [Make cardano-api:internal component public](https://github.com/input-output-hk/cardano-api/pull/26) \\n- [update chaps index](https://github.com/input-output-hk/cardano-api/pull/24) \\n- [Make `ErrorSpec` check for all constructors, move golden tests together](https://github.com/input-output-hk/cardano-api/pull/18) \\n- [Expose toAlonzoCostModels](https://github.com/input-output-hk/cardano-api/pull/17) \\n- [Make `ErrorsSpec`  use generated types and constructors names](https://github.com/input-output-hk/cardano-api/pull/9) \\n- [Check changelog in tag script](https://github.com/input-output-hk/cardano-api/pull/32) \\n- [Use tag script from `cardano-dev` repository instead](https://github.com/input-output-hk/cardano-api/pull/34) \\n- [Use .x suffix for release branches](https://github.com/input-output-hk/cardano-api/pull/38) \\n\\n### cardano-node\\n- [Use `cryptoInit` instead of `sodiumInit`](https://github.com/input-output-hk/cardano-node/pull/5291) \\n- [Move configuration tests to `cardano-node` tests](https://github.com/input-output-hk/cardano-node/pull/5284) \\n- [update chaps & integration](https://github.com/input-output-hk/cardano-node/pull/5243) \\n- [#5222 Remove `ApplicationName` and `ApplicationVersion` config parameters](https://github.com/input-output-hk/cardano-node/pull/5240) \\n\\n### cardano-testnet"},{"id":"2023-05-19-hydra","metadata":{"permalink":"/cardano-updates/2023-05-19-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-19-hydra.md","source":"@site/blog/2023-05-19-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-05-19T00:00:00.000Z","formattedDate":"May 19, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.045,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-05-19-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-05-24-node-cli-api"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-05-17-consensus"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has worked on several fronts, including improvements of their CI speed, logs, documentation pages and adding the support for timed transactions. They also updated the \\"Coding Standards\\" for the project, improved the troubleshooting page on their website and wrote a section about how to operate a hydra node. Finally the team completed a feature request that allows clients to submit and validate transactions to their hydra nodes using time validity ranges, ensuring isomorphism with L1.\\n\\n## What did the team achieve this week\\n\\n-   Complete validation of timed transactions feature [#196](https://github.com/input-output-hk/hydra/issues/196).\\n-   Write &ldquo;ops&rdquo; instructions and troubleshooting [#569](https://github.com/input-output-hk/hydra/issues/569) and improve logs.\\n-   Remove `--ledger-genesis` argument to hydra-node options [#863](https://github.com/input-output-hk/hydra/pull/863).\\n-   Fix issue with garbage collected caches by using a new cardano-scaling.cachix in more workflows [#877](https://github.com/input-output-hk/hydra/pull/877).\\n-   Use nix to build test binaries to increase CI speed [#867](https://github.com/input-output-hk/hydra/pull/867).\\n-   Updated our [Coding Standards](https://github.com/input-output-hk/hydra/wiki/Coding-Standards).\\n\\n## What are the goals of next week\\n\\n-   Monthly report & review meeting.\\n-   Have a first end-to-end journey for external commits implementing \\"Option A\\" [#215](https://github.com/input-output-hk/hydra/issues/215).\\n-   Integrate spanish translation [#866](https://github.com/input-output-hk/hydra/pull/866).\\n-   Improve and provide regular benchmarks for Hydra [#186](https://github.com/input-output-hk/hydra/issues/186).\\n-   Allow commit transactions with multiple UTxO [#774](https://github.com/input-output-hk/hydra/pull/774).\\n-   Explored stateless observation and refined hydra explorer ticket [#696](https://github.com/input-output-hk/hydra/issues/696)."},{"id":"2023-05-17-consensus","metadata":{"permalink":"/cardano-updates/2023-05-17-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-17-consensus.md","source":"@site/blog/2023-05-17-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-05-17T00:00:00.000Z","formattedDate":"May 17, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":1.285,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-05-17-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-05-19-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-05-17-mithril"}},"content":"## High level summary\\n\\nDuring the past two weeks we brought further improvements into the Genesis design in collaboration with the IO Research and Networking teams. These improvements concern the Genesis selection rule, candidate rule, and root peers usage. See the [Genesis][#genesis] section for more details.\\n\\nRegarding our UTxO-HD prototype, during the past two weeks we put together a pull-request that improves the DB locking mechanism, started porting the mempool fairness improvements from our `main` branch, and integrated a new open source library (that implements cancellative monoids) that allowed us to simplify our code and get a small performance gain.\\n\\nWe improved our tooling by releasing an [immutable DB server](https://github.com/input-output-hk/ouroboros-consensus/pull/68), which can be used for testing and benchmarking purposes, and a [`db-truncater`](https://github.com/input-output-hk/ouroboros-consensus/pull/70) program, which can be used in disaster recovery and benchmarking scenarios.\\n\\n## Genesis \\n\\nThe consensus team working on Genesis:\\n\\n- Improved the genesis selection rule as a result of our interaction with IO Research.\\n- Studied how the hard-fork combinator handles forecasting at era transitions, and [improved our documentation](https://github.com/input-output-hk/ouroboros-consensus/pull/89).\\n- Determined that the simplest candidate rule we had considered will work for the Genesis window at era transitions, at least for the MVP.\\n- Elaborated concrete proposal for the Genesis State Machine.\\n- Met with the Networking Team and advised/co-designed how to implement the stop gap usage of public trusted root peers before Genesis is released (it\'s similar to the Genesis State Machine).\\n\\nThe team is currently re-analyzing the Limit on Patience, which can be less aggressive now that we\'ve re-introduced the Genesis State Machine."},{"id":"2023-05-17-mithril","metadata":{"permalink":"/cardano-updates/2023-05-17-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-17-mithril.md","source":"@site/blog/2023-05-17-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-05-17T00:00:00.000Z","formattedDate":"May 17, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.555,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-05-17-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-05-17-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-05-17-performance-and-tracing"}},"content":"## High level overview\\nThe Mithril team released a new [`2318.0`](https://github.com/input-output-hk/mithril/releases/tag/2318.0) distribution that implements the last migration phase of the aggregator stores and embeds a bug fix for the signer registration. They also completed the implementation of the interfaces defined to provide certification for the immutable full snapshot of Cardano files and Mithril stake distribution. They finalized the implementation of the framework to sign generic types of data in the aggregator and the signer nodes. They also updated the runtime of the aggregator to handle open messages associated with the available types, and evolved the REST API of the aggregator to deliver the artifacts for these types. Additionally, they have upgraded the network explorer in order to display the artifacts and certificates for these different types.\\n\\nFinally, the team started designing an on-chain decentralized signer registration process, and started implementing the new stake distribution computation available from Cardano node `8.0.0` (along with the backward compatibility for previous `1.35.x` versions).\\n\\n## Low level overview\\n- Worked on the epic that designs and implements generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the handling of multiple types of signed entity in the aggregator runtime [#907](https://github.com/input-output-hk/mithril/issues/907)\\n  - Completed the adaptation of the signer runtime to use the signable builder service [#854](https://github.com/input-output-hk/mithril/issues/854)\\n  - Completed the adaptation of the aggregator runtime to use the artifact builder service [#869](https://github.com/input-output-hk/mithril/issues/869)\\n  - Completed the appending of the next AVK to all protocol messages [#888](https://github.com/input-output-hk/mithril/issues/888)\\n  - Completed the adaptation of the aggregator REST API to retrieve the list/details of the artifacts produced [#893](https://github.com/input-output-hk/mithril/issues/893)\\n  - Completed the adaptation of the explorer to handle new artifact routes of the aggregator [#927](https://github.com/input-output-hk/mithril/issues/927)\\n- Worked on the epic that implements the computation of the stake distribution for `mainnet` [#880](https://github.com/input-output-hk/mithril/issues/880):\\n  - Completed the implementation of the new stake distribution computation in the chain observer [#919](https://github.com/input-output-hk/mithril/issues/919)\\n  - Worked on upgrading the Cardano node to `8.0.0` [#920](https://github.com/input-output-hk/mithril/issues/920)"},{"id":"2023-05-17-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-05-17-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-17-performance-and-tracing.md","source":"@site/blog/2023-05-17-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-05-17T00:00:00.000Z","formattedDate":"May 17, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":3.21,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-05-17-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-05-17-mithril"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-05-12-crypto"}},"content":"## High level summary\\n\\n* Benchmarking: We\'re preparing our model cluster to perform GHC9.2 benchmarks, as well as experimenting with increased dataset sizes.\\n* New tracing: After optimization work on the new tracing system, another cycle of validation and documentation is due.\\n* Analysis pipeline: First steps on implementing incremental analysis have been untertaken.\\n* Open Sourcing: Exhaustive dataflow charts for both our analysis tool `locli` and our `workbanch` have been merged to `master`\\n* Nomad backend: The first set of CI-centric workbench profiles have been adjusted and run on the nomad backend; currently we\'re porting the definition of our model cluster.\\n* P&T Meetup: We had a very productive personal meetup in Lugano, Switzerland.\\n* Offboarding: Sadly, we have to say goodbye to our team lead. Currently, we\'re busy with the handover.\\n\\n## Low level overview\\n\\n### Benchmarking\\n\\nAs a compiler switch to GHC 9.2.7 for `cardano-node`\'s default build environment is around the corner, we\'re setting up our benchmarking cluster to\\nhandle the new version. Special attention is given to the fact that we might need more flexibility in switching compiler versions in the future. This\\nalso involves choosing a reliable baseline as reference point for inter-version comparisons.  \\n\\nAdditionally we\'ve been working on refining our model cluster: by increasing UTxO and delegation map sizes to closer match those of current mainnet,\\nwe strive to have a more accurate model - and thus be able to make more detailed predictions regarding performance. However, this still needs to\\nbe balanced against resource demand for all our cluster\'s nodes.\\n\\n### Tracing\\n\\nFor our new tracing system, we\'re currently validating the behaviour of the system after optimizations have been applied. Furthermore, some\\nquality-of-life details that have changed required us to revision the system documentation.\\n\\n### Analysis\\n\\nAs a mid-term goal, we aim to provide incremental analysis of our benchmarking metrics. While currently, we can only reliably process runs that have been\\nnormally (or abnormally) terminated, we see the possibility of incrementally analysing ongoing runs, or any data source yielding our key metrics, as a\\nhuge opportunity to increase our operational flexibility. All in all, this approach entails building completely new features for our pipeline. A first effort to accomodate incrementally incoming data points has been undertaken. \\n\\n### Open Sourcing\\n\\nA very involved and exhaustive documentation and visualization effort has been undertaken to make the data flow through our key benchmarking\\ncopmonents more accessible. As a result, detailed charts for both our LogObject CLI `locli` and our `workbench` have been merged to `master`. \\n\\n### Nomad backend\\nWhile our Nomad backend is reaching completion, and hardware setup is being implemented in collaboration with SRE, we\'ve been adjusting\\nthose profiles of our `workbench` that target CI-oriented workloads to the new backend. Those profiles should demonstrate the full functionality\\nof the nomad cloud backend.  \\n\\nAdditionally, we\'re porting a first deployable version of our model cluster to nomad cloud, which will form the basis for validation of our actual key metrics with regard to those from the existing cluster.\\n\\n### Performance & Tracing Meetup\\n\\nWe held a personal team meetup in Lugano, Switzerland. In an amazing location, and with a great seminar room to focus, we had 2 very productive\\ndays together. Being able to discuss live and in colour, we could effectively synchronize on where the team is at, and how we want to develop in the future.\\nAlso, it was a great opportunity to finally meet in person.\\n\\n### Offboarding\\n\\nLast not least we regret that our team lead is leaving at the end of May. Currently, he\'s handing over all his obligations, which requires reorganisation\\nof team structure, and responsabilities of team members for specific tasks. Serge, we all want to thank you for your excellent and reliable lead; we very much enjoyed the time with you, and wish you all the best for your future endeavours!"},{"id":"2023-05-12-crypto","metadata":{"permalink":"/cardano-updates/2023-05-12-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-12-crypto.md","source":"@site/blog/2023-05-12-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.095,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-05-12-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-05-17-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-05-12-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* cardano-base: Include final tests for BLS signature. Further adaptations for KES agent. \\n* Sidechains: Implement BLS and JubJub using upstream\'s macros to merge these curves in halo2curves.\\n## Low level summary\\n### cardano-base\\n* RawBearer API in ouroboros-network-framework (https://github.com/input-output-hk/ouroboros-network/pull/4395); this is needed for KES Agent. Review ongoing.\\n* Facilitate BLS test vectors in Haskell test suite (https://github.com/input-output-hk/cardano-base/pull/408)\\n* Add the SignKeyWithKES type to cardano-base (https://github.com/input-output-hk/cardano-base/pull/389)\\n* Restructuring and simplifying the MLocking code in cardano-base (https://github.com/input-output-hk/cardano-base/pull/404, https://github.com/input-output-hk/cardano-base/pull/405), getting rid of the purpose-built MonadMLock etc. typeclasses in the process\\n* Merging the DSIGN and DSIGNM APIs such that the same phantom type can be used to select both the pure and mlocked versions of the same DSIGN algorithm (https://github.com/input-output-hk/cardano-base/pull/411)\\n* Simplifying the KES API into a single KESAlgorithm typeclass, merging the KESSignAlgorithm class into it (this is possible due to the simplifications from #404). (Same PR as above: https://github.com/input-output-hk/cardano-base/pull/411).\\n* Update CIP-0381 with new plutus built-in functions, [#506](https://github.com/cardano-foundation/CIPs/pull/506). In particular hash_to_curve now takes as input a secon input for the Domain Separation Tag (DST), and we limit to have a maximu size of 255 bytes. \\n### Sidechains\\n* Opened PR in halo2curves to include BLS12-381 and JubJub, [#38](https://github.com/privacy-scaling-explorations/halo2curves/pull/38)\\n* Addition constraint over JubJub merged [#10](https://github.com/input-output-hk/sidechains-zk/pull/10)"},{"id":"2023-05-12-goedel","metadata":{"permalink":"/cardano-updates/2023-05-12-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-12-goedel.md","source":"@site/blog/2023-05-12-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.445,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-05-12-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-05-12-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-05-12-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team had two paper accepted for ICE 2023\\n(https://www.discotec.org/2023/ice). The event will be held in Lisbon\\non 19th June 2023. The papers will be published in EPTCS.\\n\\n## Details\\n\\n* Application layer for Praos formalisation in review.\\n\\n* Participating in interactive peer review process for ICE 2023.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-05-12-hydra","metadata":{"permalink":"/cardano-updates/2023-05-12-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-12-hydra.md","source":"@site/blog/2023-05-12-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.145,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-05-12-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-05-12-goedel"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-05-12-network"}},"content":"## High-level summary\\n\\nThis week, the Hydra team achieved a number of milestones, including the release\\nof the first mainnet compatible version. Besides this they also addressed\\ninconsistencies in rollback handling, added an architecture page to the website,\\nreducing the size of logs using event IDs. They also had productive discussions\\nwith researchers on plans for incremental commits/decommits and had a whiteboard\\nsession on DeFi and lending protocols. The goals for next week include\\ncompleting the validation of the timed transactions feature, exploring stateless\\nobservation, refining the Hydra explorer ticket, writing ops instructions and\\ntroubleshooting, and implementing the first end-to-end journey for external\\ncommits.\\n\\n## What did the team achieve this week\\n\\n-   Released first mainnnet compatible version [0.10.0](https://github.com/input-output-hk/hydra/releases/tag/0.10.0)\\n-   Addressed inconsist handling of rollbacks [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Added [architecture page](https://hydra.family/head-protocol/core-concepts/architecture/) and fixed haddock links on our website [#838](https://github.com/input-output-hk/hydra/pull/838)\\n-   Opened a new hydra head on mainnet\\n-   Talked with researchers on initial plan for incremental commits/decommits\\n-   Had a Whiteboard session on DeFi and lending protocols\\n-   Reduced size of logs using event ids [#859](https://github.com/input-output-hk/hydra/pull/859)\\n-   Published the [monthly report for April](https://hydra.family/head-protocol/monthly/2023-04)\\n\\n## What are the goals of next week\\n\\n-   Complete validation of timed transactions feature [#196](https://github.com/input-output-hk/hydra/issues/196)\\n-   Explored stateless observation and refined hydra explorer ticket [#696](https://github.com/input-output-hk/hydra/issues/696)\\n-   Write &ldquo;ops&rdquo; instructions and troubleshooting [#569](https://github.com/input-output-hk/hydra/issues/569) and improve logs\\n-   Have a first end-to-end journey for external commits implemented [#215](https://github.com/input-output-hk/hydra/issues/215)"},{"id":"2023-05-12-network","metadata":{"permalink":"/cardano-updates/2023-05-12-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-12-network.md","source":"@site/blog/2023-05-12-network.md","title":"Network Team Update","description":"High level summary","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":1.79,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-05-12-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-05-12-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-05-05-ledger"}},"content":"## High level summary\\n\\nWe started working on a new way to switch between root & ledger peers (see\\nbelow).  We continued to work on `eclipse-evasion`.  We merged changes to\\nHandshake contributed by Galois Inc.  We made improvements to our tests (fixed\\na flaky test, added cddl specs for `NodeToNodeVersionData` and\\n`NodeToClientVersionData`).  We improved our CI and automated the process of\\nreleasing new package version to `CHaP`.\\n\\n## Detailed summary\\n\\nWe continued to work on testing `eclipse-evasion`.\\n\\nWe came up with an idea to limit how full node wallets relay on root peers\\n(currently operated by IOG, in future also CF and Emurgo).  We designed\\na switch to use ledger peers if the node tip is close enough to the current\\ntime.  For more details see [#4530].\\n\\nWe merged changes to the handshake mini-protocol which allow one to query\\nserver\'s `node-to-node` / `node-to-client` parameters.  We are grateful to\\nGalois Inc. for implementing it, [#4256] and [#4538].  We published new version\\nof packages to CHaP [chap-#253].\\n\\nWe added `DiffusionError` wrapper.  Thanks to it, `ouroboros-consensus` will\\nnot duplicate diffusion errors messages in the log, [#4537].\\n\\nWe fixed an issue which caused one of our tests to be flaky, [#4515].\\n\\nWe added cddl tests for `NodeToNodeVersionData` and `NodeToClientVersionData`:\\n[#4540], [#4544] (in review).\\n\\nWe wrote scripts which will help us release packages as well as verify that we\\nreleased all the package necessary to build the newest set of packages,\\n[#4542].\\n\\nWe renamed the consensus startup tracer and make sure it doesn\'t log\\n`ExitSuccess` exceptions, [consensus-#71].\\n\\nWe reviewed PR which adds `RawBearer` API, [#4395].\\n\\nWe made series of improvements to our CI:\\n* [#4539]: we don\'t need to install cryptographic libraries in CI;\\n* [#4545]: Javier Sagredo (consensus) cleaned up CI after `consensus` moved\\n  to a new repo;\\n* [#4546]: we switched to use [GitHub merge queues][mq];\\n* [#4549]: we made it possible to trigger building haddocks manually;\\n* [#4553]: we fixed and enhanced caching of building dependencies.\\n\\n[#4256]: https://github.com/input-output-hk/ouroboros-network/issues/4256\\n[#4395]: https://github.com/input-output-hk/ouroboros-network/issues/4395\\n[#4515]: https://github.com/input-output-hk/ouroboros-network/issues/4515\\n[#4530]: https://github.com/input-output-hk/ouroboros-network/issues/4530\\n[#4537]: https://github.com/input-output-hk/ouroboros-network/issues/4537\\n[#4538]: https://github.com/input-output-hk/ouroboros-network/issues/4538\\n[#4539]: https://github.com/input-output-hk/ouroboros-network/issues/4539\\n[#4540]: https://github.com/input-output-hk/ouroboros-network/issues/4540\\n[#4542]: https://github.com/input-output-hk/ouroboros-network/issues/4542\\n[#4544]: https://github.com/input-output-hk/ouroboros-network/issues/4544\\n[#4545]: https://github.com/input-output-hk/ouroboros-network/issues/4545\\n[#4546]: https://github.com/input-output-hk/ouroboros-network/issues/4546\\n[#4549]: https://github.com/input-output-hk/ouroboros-network/issues/4549\\n[#4553]: https://github.com/input-output-hk/ouroboros-network/issues/4553\\n\\n[chap-#253]: https://github.com/input-output-hk/cardano-haskell-packages/pull/253\\n\\n[consensus-#71]: https://github.com/input-output-hk/ouroboros-consensus/pulls/71\\n\\n[mq]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue"},{"id":"2023-05-05-ledger","metadata":{"permalink":"/cardano-updates/2023-05-05-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-05-ledger.md","source":"@site/blog/2023-05-05-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-05-05T00:00:00.000Z","formattedDate":"May 5, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.235,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-05-05-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-05-12-network"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-05-05-node-cli-api"}},"content":"## High level summary\\n\\nThe ledger team focused mainly on the conway ledger era and node integration.\\nFor conway, we completed a large structural change that now allows\\nfor delegation certificates to be parameterized by era, and introducing\\nnew certificates for the first time since Shelley.\\nWe also continue to build out our contraint based generators that we will\\nuse to property test the conway era.\\nIn particular, we can now generate an entire ledger state and a\\ntransaction which is balanced with respect to the ledger state.\\n\\n## Low level summary\\n\\n## Conway certificates\\n\\nCertificiates are now abstracted as a type family in the ledger codebase.\\nMoreover, there are new certificates in the Conway era to support CIP-1694,\\nand MIR certificates have been removed.\\n\\n* [pull-3387]\\n\\n## Constraint based testing\\n\\nOur plan for property testing in the conway era is to no longer use the trace generators,\\nbut instead generate ledger states and transactions based on constraints.\\nWe hit a milestone this week, namely the ability to generate a balanced transaction in the context\\nof a ledger state, all based on our ever growing constaint language.\\n\\n* [pull-3374]\\n* [pull-3386]\\n\\n## Integration work\\n\\n* [pull-3393] - Performance improvements\\n* [pull-3395] - Conway instances\\n* [pull-3398] - Fix mint translation in the script context\\n\\n## Technical debt\\n\\n* [pull-3389] - Reduce github pages size\\n* [pull-3390] - Reinstate the tickf optimizations\\n\\n[pull-3374]: https://github.com/input-output-hk/cardano-ledger/pull/3374\\n[pull-3398]: https://github.com/input-output-hk/cardano-ledger/pull/3398\\n[pull-3395]: https://github.com/input-output-hk/cardano-ledger/pull/3395\\n[pull-3393]: https://github.com/input-output-hk/cardano-ledger/pull/3393\\n[pull-3390]: https://github.com/input-output-hk/cardano-ledger/pull/3390\\n[pull-3389]: https://github.com/input-output-hk/cardano-ledger/pull/3389\\n[pull-3386]: https://github.com/input-output-hk/cardano-ledger/pull/3386\\n[pull-3387]: https://github.com/input-output-hk/cardano-ledger/pull/3387"},{"id":"2023-05-05-node-cli-api","metadata":{"permalink":"/cardano-updates/2023-05-05-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-05-node-cli-api.md","source":"@site/blog/2023-05-05-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-05-05T00:00:00.000Z","formattedDate":"May 5, 2023","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.81,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-05-05-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-05-05-ledger"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-05-04-mithril"}},"content":"# 2023-05-05 - 2023-05-23\\n\\n## High level summary\\n- Golden tests for cardano-cli command help output were added.\\n- Documentation was updated with new libsodium installation instructions.\\n- There were several updates for the cardano-cli:\\n    - Deletion of the deprecated shelley command group.\\n    - Addition of golden tests for CLI help.\\n    - An improvement to avoid bare IO in tests, allowing better error reporting in failed tests.\\n    - Generation of UTCTime test values without leap seconds (avoids erroneous test failures)\\n    - Support for signing transactions with GenesisDelegateSigningKey_ed25519_bip32.\\n- The cardano-api underwent multiple refinements:\\n    - Implementing deposit handling when balancing transactions (necessary for Conway)\\n    - Cleaning up socket file path code.\\n- Several changes were made to the cardano-testnet:\\n    - Adding golden tests for cardano-testnet help.\\n    - Removing all hardcoded yaml files in cardano-testnet\\n    - Improving cardano-testnet help output.\\n    - Parameterizing default yaml configuration value, allowing for easier hardforking to the era of choice.\\n\\n### docs\\n- [Update libsodium installation instructions](https://github.com/input-output-hk/cardano-node/pull/5181) \\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Delete deprecated `shelley` command group](https://github.com/input-output-hk/cardano-node/pull/5264) \\n- [Add golden tests for CLI help](https://github.com/input-output-hk/cardano-node/pull/5206) \\n- [Avoid bare IO in tests](https://github.com/input-output-hk/cardano-node/pull/5201) \\n- [Split `cardano-cli` test files into separate directories](https://github.com/input-output-hk/cardano-node/pull/5200) \\n- [Make UTCTime test generator generate values without leap seconds](https://github.com/input-output-hk/cardano-node/pull/5198) \\n- [Add support with signing transactions with `GenesisDelegateSigningKey_ed25519_bip32`](https://github.com/input-output-hk/cardano-node/pull/5189) \\n- [Rename --signed-tx-file argument to --tx-file argument in verify-poll command](https://github.com/input-output-hk/cardano-node/pull/5184) \\n- [Simplify socket path code](https://github.com/input-output-hk/cardano-node/pull/5120) \\n\\n### cardano-api\\n- [refactor: make renderScriptWitnessIndex output more explicit](https://github.com/input-output-hk/cardano-node/pull/5221) \\n- [Implement deposit handling when balancing transactions](https://github.com/input-output-hk/cardano-node/pull/5218) \\n- [Replace remaining `FilePath` use in `cardano-api`](https://github.com/input-output-hk/cardano-node/pull/5217) \\n- [Cleanup socket file path code](https://github.com/input-output-hk/cardano-node/pull/5215) \\n- [Delete `readEnvSocketPath` function](https://github.com/input-output-hk/cardano-node/pull/5207) \\n- [IO functions for reading. Remove PoolMetadataFile type](https://github.com/input-output-hk/cardano-node/pull/5194) \\n- [Expose config reader](https://github.com/input-output-hk/cardano-node/pull/5191) \\n- [Golden tests for `cardano-api` errors](https://github.com/input-output-hk/cardano-node/pull/5188) \\n- [Fix `toEraInMode` for conway](https://github.com/input-output-hk/cardano-node/pull/5175) \\n- [Use machine readable output for ToJSON ScriptWitnessIndex](https://github.com/input-output-hk/cardano-node/pull/5168) \\n- [Expose LocalTxSubmissionClient data constructor](https://github.com/input-output-hk/cardano-node/pull/5096) \\n- [Use cardano-api from separate repository](https://github.com/input-output-hk/cardano-node/pull/5047) \\n- [[cardano-api] Export fromConsensusPointHF](https://github.com/input-output-hk/cardano-node/pull/4684) \\n\\n### cardano-node\\n- [Provide orphan `ToJSON` instances for `HardForkNodeToClientVersion` and `HardForkNodeToNodeVersion`](https://github.com/input-output-hk/cardano-node/pull/5022) \\n\\n### cardano-testnet\\n- [Add golden test for `cardano-testnet` help](https://github.com/input-output-hk/cardano-node/pull/5254) \\n- [Remove all hardcoded yaml files from cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/5242) \\n- [Fix cardano-testnet help](https://github.com/input-output-hk/cardano-node/pull/5234) \\n- [Parameterize default yaml configuration value in cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/5211) \\n- [Freeze callstack in integration and integrationRetryWorkspace functions](https://github.com/input-output-hk/cardano-node/pull/5165) \\n- [Create defaultYamlValue for cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/5128)"},{"id":"2023-05-04-mithril","metadata":{"permalink":"/cardano-updates/2023-05-04-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-04-mithril.md","source":"@site/blog/2023-05-04-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-05-04T00:00:00.000Z","formattedDate":"May 4, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.56,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-05-04-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-05-05-node-cli-api"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-05-03-consensus"}},"content":"## High level overview\\nThe Mithril team completed the implementation of the new certifier service of the aggregator, which is in charge of producing certificates for multi-signatures. They also finished implementing the interfaces defined to provide certification for the full immutable Cardano files snapshot and the Mithril stake distribution. Additionally, they have completed the refactoring of the multi-signer in the aggregator. The team also fixed the bug in the signer registration that was responsible for gaps during the signature phase for some signers, and they upgraded the Cardano node used in the Mithril testnets and devnet to version `1.35.7`.\\n\\nFinally, they have worked on designing a decentralized registration for the signers that takes place on the Cardano chain.\\n\\n## Low level overview\\n- Worked on the epic that designs and implements generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the implementation of the `Certifier` service in the aggregator [#850](https://github.com/input-output-hk/mithril/issues/850)\\n  - Completed the implementation of the signable builder for the `Mithril Stake Distribution` [#851](https://github.com/input-output-hk/mithril/issues/851)\\n  - Completed the implementation of the artifact builder for the `Mithril Stake Distribution` [#870](https://github.com/input-output-hk/mithril/issues/870)\\n  - Completed the implementation of the signable builder for the `Full Immutables Snapshot` [#852](https://github.com/input-output-hk/mithril/issues/852)\\n  - Completed the implementation of the artifact builder for the `Full Immutables Snapshot` [#871](https://github.com/input-output-hk/mithril/issues/871)\\n  - Completed the adaptation of the aggregator runtime to use the signable builder service [#853](https://github.com/input-output-hk/mithril/issues/853)\\n  - Worked on the adaptation of the signer runtime to use the signable builder service [#854](https://github.com/input-output-hk/mithril/issues/854)\\n  - Completed the definition of the entity service interface for verification/restoration [#868](https://github.com/input-output-hk/mithril/issues/868)\\n  - Completed the refactoring of the `OpenMessage` type [#878](https://github.com/input-output-hk/mithril/issues/878)\\n- Completed the epic that simplifies the multi-signer in the aggregator [#398](https://github.com/input-output-hk/mithril/issues/398):\\n  - Completed the extraction of the single signature registration from the multi-signer [#643](https://github.com/input-output-hk/mithril/issues/643)\\n- Completed the upgrade of the Cardano node to version `1.35.7` [#881](https://github.com/input-output-hk/mithril/issues/881)\\n- Fixed the bug that created a discrepancy of the signer verification keys between signers and aggregators [#873](https://github.com/input-output-hk/mithril/issues/873)"},{"id":"2023-05-03-consensus","metadata":{"permalink":"/cardano-updates/2023-05-03-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-03-consensus.md","source":"@site/blog/2023-05-03-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-05-03T00:00:00.000Z","formattedDate":"May 3, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":1.755,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-05-03-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-05-04-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-05-03-performance-and-tracing"}},"content":"## High level summary\\n\\nDuring the past two weeks we made some important progress in the Genesis design.\\nIt seems the `BlockFetch` logic need not be modified for Genesis, although this\\nneeds to be confirmed. We started a DoS mitigation handbook and updated our\\nconceptual component diagram to guide the Genesis design. We engaged with the\\nIOG researchers to work on the Limit on Patience attack vector, work in this\\narea is still ongoing. We sketched a design to decouple the CPU load of the node\\nfrom its responsiveness to the socket. Finally, we discussed with Networking our\\napproach to lower the performance impact of the BlockFetch decision logic, and\\ngot green light from them.\\n\\nWe migrated the consensus code to a [new\\nrepository](https://github.com/input-output-hk/ouroboros-consensus), splitting\\nit from the `ouroboros-network` repository, and released version 0.6 of\\nConsensus.\\n\\nWe also merged the mempool fairness improvement to main branch.\\n\\nAnother significant enhancement to our documentation was the addition of an\\nexplanation of the hardfork combinator forecast horizon.\\n\\nSee the sections below for more details.\\n\\n## Genesis\\n\\nWe reviewed the `BlockFetch` design documentation, and added some source-code\\ncomments that emphasize certain properties of the decisions the `BlockFetch`\\nlogic makes that are helping us confirm that Genesis does not require any\\nchanges to `BlockFetch`. We are waiting on input from our former system\\narchitect to verify this.\\n\\nWe migrated and updated the conceptual component diagram in the `ouroboros-consensus`\\nrepository which helps us situate the Genesis design and argument.\\n\\nWe engaged with the IOG researchers about the Genesis design. We sketched out a\\nway to address the concern that the Limit on Patiente (LoP) attack vector duty\\ncycle is indeed low, but it\'s still non-trivial to ultimately conclude it\'s\\nsufficiently low.\\n\\nWe also sketched a design to decouple the CPU load of the node from its\\nresponsiveness to the socket, since the LoP is a relatively tight timeout, and\\nnode performance bugs inducing seconds-worth of latency are unfortunately\\nfamiliar phenomena.\\n\\n## Fostering collaboration\\n\\nWe [added an\\nexplanation](https://github.com/input-output-hk/ouroboros-consensus/pull/62) of\\na question that we had to explain many times about the exact behavior of the\\nhardfork combinator forecast horizon."},{"id":"2023-05-03-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-05-03-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-03-performance-and-tracing.md","source":"@site/blog/2023-05-03-performance-and-tracing.md","title":"Performance & tracing update","description":"* Benchmarking: The benchmarks and performance investigations for the new 8.0 release branch are ongoing.","date":"2023-05-03T00:00:00.000Z","formattedDate":"May 3, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":1.76,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-05-03-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-05-03-consensus"},"nextItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-05-01-db-sync"}},"content":"* Benchmarking: The benchmarks and performance investigations for the new `8.0` release branch are ongoing.\\n* New tracing: Performance optimization of the new tracing system is paying off and we could notably shrink its resource footprint.\\n* Analysis pipeline: An exhaustive documentation and dataflow diagram for our analyses is being worked on.\\n* Infrastructure: The `plutus-apps` flake input for `cardano-node` has finally been removed.\\n* Nomad backend: A PR implementing placement of benchmarking clusters has been merged.\\n  \\n# Benchmarking\\n\\nThe performance investigations on the `8.0` release branch have lead to pinpointing and addressing incosistent behaviour. For that,\\nwe created yet another local reproduction with the workbench\'s `forge-stress` benchmark.  \\n\\nCurrently we\'re working on scaling up the dataset size (UTxO and delegations) on the AWS cluster to gain further insight into `8.0` and\\nsubsequent releases.  \\n\\nAdditionally, we\'ve refined the `trace-bench` family of profiles that target benchmarking our own new tracing system. \\n\\n# Tracing\\n\\nOptimization of the tracing system has identified several locations where inefficient serializations were used; those were not originally\\nintended to run on a performance-critical codepath. We\'ve worked on improving those, as well as eliminating cases of redundant\\nconversion between different serialization formats. This has brought down both memory and CPU impact of the tracing system.\\n\\n# Infrastructure & Analysis\\n\\n### Dataflow documentation\\nThe LogObject CLI `locli` is at the heart of our analysis and reporting pipeline. To increase its accessibility and facilitate\\nfurther development, we\'re creating a detailed and illustrated documentation of all dataflows that happen during analysis and reporting. \\n\\n### Remove redundant Plutus flake input\\nThis step is the conclusion of porting Plutus benchmarking scripts to our own library. By finally removing the now unnecessary flake input,\\nwe simplify the dependency graph for `cardano-node`, as well as enable immediate feedback when developing Plutus benchmarks.\\n\\n### Nomad backend\\nSophisticated placement of nodes across various regions of the globe is a cornerstone of the model cluster we use for benchmarking.\\nThis capability has now been added to the Nomad backend and can be controlled with Nomad job descriptions. A PR with this, along\\nwith various quality-of-life improvements, has been merged to `master`."},{"id":"2023-05-01-db-sync","metadata":{"permalink":"/cardano-updates/2023-05-01-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-05-01-db-sync.md","source":"@site/blog/2023-05-01-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-05-01T00:00:00.000Z","formattedDate":"May 1, 2023","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":0.515,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-05-01-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-05-03-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-04-28-crypto"}},"content":"## High level summary\\n\\n\\n\\n## Lower level summary\\n- Prepared a schema change which is expected to speed up queries and help clients\\n[#1389](https://github.com/input-output-hk/cardano-db-sync/pull/1389).\\n- Ran a big number of benchmarks on the above to evaluate if this change is reasonable.\\n- Performance optimization related to rewards\\n[#1382](https://github.com/input-output-hk/cardano-db-sync/pull/1382)\\n- Using the cache in more places to reduce recourses usage\\n[#1380](https://github.com/input-output-hk/cardano-db-sync/pull/1380)\\n- Evaluated risks related to UTXO-HD integration\\n- Worked on a feauture request to split the `tx_out` to an address table\\n[#1396](https://github.com/input-output-hk/cardano-db-sync/pull/1396)\\n- Worked on another feauture request to prune the consumed entries from the `tx_out` table\\n[#1398](https://github.com/input-output-hk/cardano-db-sync/pull/1398)\\n- Prepared for CIP-1694 integration"},{"id":"2023-04-28-crypto","metadata":{"permalink":"/cardano-updates/2023-04-28-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-28-crypto.md","source":"@site/blog/2023-04-28-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-04-28T00:00:00.000Z","formattedDate":"April 28, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.26,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-04-28-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-05-01-db-sync"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-04-28-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* cardano-base: New KES structure finally merged. Included additional tests to BLS, and including test vectors created with zkcrypto\'s library.\\n* KES agent: Reaching state of MVP. Rewriting KES agent networking code to use the Snockets abstraction.\\n* Sidechains: Started implementing ECC chip of JubJub over BLS12-381.\\n## Low level summary\\n### cardano-base\\n* [#255](https://github.com/input-output-hk/cardano-base/pull/255) finally merged :tada:\\n* Additional tests for BLS bindings [#384](https://github.com/input-output-hk/cardano-base/pull/384)\\n* Open PR for including test vectors created with [zkscrypto](https://github.com/zkcrypto/bls12_381)\'s library, [PR#397](https://github.com/input-output-hk/cardano-base/pull/397)\\n### KES agent\\n* Introducing the SignKeyWithPeriodKES wrapper type, which bundles a KES key with its corresponding KES period [PR#389](https://github.com/input-output-hk/cardano-base/pull/389).\\n* Introducing the DirectSerialise API into cardano-base, which allows us to write mlocked memory directly to a file descriptor, without going through intermediate encodings stored on the GHC heap (which is a no-no due to secure forgetting requirements) [#317](https://github.com/input-output-hk/cardano-base/pull/317).\\n* Figuring out how to generalize the KES, DSIGN, and mlocking code in cardano-base such that it can run in IOSim\\n* Rewriting KES agent networking code to use the Snockets abstraction, which gives us a platform-independent sockets layer (i.e., it will also work on Windows), and also allows us to run networked code in IOSim for testing purposes\\n* Refactor MonadSodium into MonadMLock [PR#388](https://github.com/input-output-hk/cardano-base/pull/388).\\n### Sidechains\\n* Started working on ECC chip for JubJub over BLS (problems still with the multiplication constraint)\\n* Use macros used by PSE library to try and merge our fork of halo2curves into PSE\'s repo"},{"id":"2023-04-28-goedel","metadata":{"permalink":"/cardano-updates/2023-04-28-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-28-goedel.md","source":"@site/blog/2023-04-28-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-04-28T00:00:00.000Z","formattedDate":"April 28, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.375,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-04-28-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-04-28-crypto"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-04-28-network"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThe team is working on porting an existing formalisation of Ouroboros\\nPraos to a newer foundation.\\n\\n## Details\\n\\n* The team worked on documentation.\\n\\n* The team worked on an application layer for the Praos formalisation.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/"},{"id":"2023-04-28-network","metadata":{"permalink":"/cardano-updates/2023-04-28-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-28-network.md","source":"@site/blog/2023-04-28-network.md","title":"Network Team Update","description":"High level summary","date":"2023-04-28T00:00:00.000Z","formattedDate":"April 28, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":1.21,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-04-28-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-04-28-goedel"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-04-27-hydra"}},"content":"## High level summary\\n\\nThe networking team has released the following packages to `Hackage`:\\n\\n* [`io-classes`],\\n* [`io-classes-mtl`]\\n* [`io-sim`],\\n* [`strict-stm`],\\n* [`strict-mvar`]\\n\\nWe published an announcement [blog post][io-sim-blog-post].  We made progress\\nalso on another blog post which will describes the design of the P2P networking\\nlayer.\\n\\nAfter moving `ouroboros-consensus` to its own repository, we made\\n`ouroboros-network` compatible with `GHC` `9.4` and `9.6`.\\n\\nWe made `cardano-client` library independent of\\n`ouroboros-consensus-diffusion`.\\n\\nWe prepared release of network packages for `cardano-node-8.0`.\\n\\n## Detailed log\\n\\n### Ouroboros-Network\\n\\n* Compatibility with `io-classes-1.1.0.0`: [ouroboros-network#4281].\\n* Compatibility with `GHC` `9.4` and `9.6`: [ouroboros-network#4527].\\n* `cardano-client` independent of `ouroboros-cosnensus-diffusion`: [ouroboros-network#4526].\\n* Release new versions of packages for `cardano-node-8.0`: [ouroboros-network#4532].\\n* Galois Inc, has been making progress towards merging [ouroboros-network#4256].\\n\\n### IO-Sim\\n\\n* `io-classes-1.0.0.0`, and following up releases: `1.0.0.1` (`ghc-9.6`\\n  support), `1.1.0.0` (documentation fix).\\n* Fixed timeouts and delays in `io-sim` in a series of PRs: [io-sim#81],\\n  [io-sim#82], [io-sim#86], [io-sim#87].\\n* Renamed a module: [io-sim#88].\\n* Fixed a failing `registerDelayCancellable` test: [io-sim#80].\\n* Use GitHub merge queue in `io-sim` repository.\\n* CI: download `stylish-haskell`: [io-sim#83].\\n\\n### Typed Protocols\\n\\n* Released `typed-protocols-0.1.0.4` which support `io-classes-1.1.0.0`:\\n  [typed-protocols#227].\\n* Use GitHub merge queue in `typed-protocols`: [typed-protocols#30].\\n* CI: download `stylish-haskell`: [typed-protocols#29].\\n\\n\\n[`io-classes`]: https://hackage.haskell.org/package/io-classes\\n[`io-classes-mtl`]: https://hackage.haskell.org/package/io-classes-mtl\\n[`io-sim`]: https://hackage.haskell.org/package/io-sim\\n[`strict-stm`]: https://hackage.haskell.org/package/strict-stm\\n[`strict-mvar`]: https://hackage.haskell.org/package/strict-mvar\\n[io-sim-blog-post]: https://engineering.iog.io/2023-04-14-io-sim-annoucement\\n\\n[io-sim#81]: https://github.com/input-output-hk/io-sim/pull/81\\n[io-sim#82]: https://github.com/input-output-hk/io-sim/pull/82\\n[io-sim#83]: https://github.com/input-output-hk/io-sim/pull/83\\n[io-sim#86]: https://github.com/input-output-hk/io-sim/pull/86\\n[io-sim#87]: https://github.com/input-output-hk/io-sim/pull/87\\n[io-sim#88]: https://github.com/input-output-hk/io-sim/pull/88\\n[io-sim#90]: https://github.com/input-output-hk/io-sim/pull/90\\n\\n[ouroboros-network#4256]: https://github.com/input-output-hk/ouroboros-network/pull/4256\\n[ouroboros-network#4281]: https://github.com/input-output-hk/ouroboros-network/pull/4281\\n[ouroboros-network#4526]: https://github.com/input-output-hk/ouroboros-network/pull/4526\\n[ouroboros-network#4527]: https://github.com/input-output-hk/ouroboros-network/pull/4527\\n[ouroboros-network#4532]: https://github.com/input-output-hk/ouroboros-network/pull/4532\\n\\n[typed-protocols#29]: https://github.com/input-output-hk/typed-protocols/pull/29\\n[typed-protocols#30]: https://github.com/input-output-hk/typed-protocols/pull/30\\n[typed-protocols#227]: https://github.com/input-output-hk/cardano-haskell-packages/pull/227"},{"id":"2023-04-27-hydra","metadata":{"permalink":"/cardano-updates/2023-04-27-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-27-hydra.md","source":"@site/blog/2023-04-27-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-04-27T00:00:00.000Z","formattedDate":"April 27, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-04-27-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-04-28-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-04-21-hydra"}},"content":"## High-level summary\\n\\nThis week, the Hydra team held their Monthly review meeting and drafted the\\nreport which likely is published next week. They put the spec into the\\nrepository and website, addressed a user issue and fixed the TUI peer list.\\nFurthermore, they updated dependencies, conducted a Twitter space on Auctions\\nuse cases, covered the rollback bug with tests and implemented a solution.\\nLooking ahead, their goals for next week include releasing 0.10.0, implementing\\ntimed transactions support, writing a Query API ADR, and grooming work items\\nlike off-chain benchmarks.\\n\\n## What did the team achieve this week\\n\\n-   Held the Monthly review meeting and drafted the report (to be published next week)\\n-   Added the spec into the repository\\n    [#693](https://github.com/input-output-hk/hydra/issues/693) and published on\\n    [the\\n    website](https://hydra.family/head-protocol/unstable/core-concepts/specification)\\n-   Groom and addressed user issue [#823](https://github.com/input-output-hk/hydra/issues/823)\\n-   Covered the rollback bug with tests and implemented a solution (to be reviewed) [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Fixed the TUI peer list\\n-   Updated dependencies to match `cardano-node` master\\n-   Conducted a twitter space on Auctions use cases\\n\\n## What are the goals of next week\\n\\n-   Release 0.10.0\\n-   Support timed transactions solution drafted and validated API with users\\n-   Write Query API ADR and groom a concrete step\\n-   Groom and solve `PostTxOnChainFailed` UX problem [#832](https://github.com/input-output-hk/hydra/issues/832)\\n-   Groom off-chain benchmarks idea [#186](https://github.com/input-output-hk/hydra/issues/186) and turn it into a &ldquo;feature&rdquo;"},{"id":"2023-04-21-hydra","metadata":{"permalink":"/cardano-updates/2023-04-21-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-21-hydra.md","source":"@site/blog/2023-04-21-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-04-21T00:00:00.000Z","formattedDate":"April 21, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.26,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-04-21-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-04-27-hydra"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-04-21-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team worked on several fronts, including fixing state\\nmachine continuity on-chain, discussing voting project solutions, exploring\\nadding Hydra support to kupo, and improving API navigation with a sidebar. The\\nteam also updated dependencies and fixed issues in their test suites. Moving\\nforward, the team plans to hold the next monthly review meeting, address a user\\nissue, prepare for the 0.10.0 release, and work on a dirt road fix for the\\nrollbacks issue with proper test coverage.\\n\\n## What did the team achieve this week\\n\\n-   Fixed scripts to enforce state machine continuity on-chain [#777](https://github.com/input-output-hk/hydra/pull/777).\\n-   Took part in a twitter space on [&ldquo;Scaling Cardano&rdquo;](https://twitter.com/thepizzaknight_/status/1647833904282320896).\\n-   Joined a CBIA meeting to discuss Cardano network protocols & how to specify them.\\n-   Discussed potential solutions of ensuring vote uniqueness in the voting project.\\n-   Updated dependencies to match `cardano-node` master to prepare for upcoming releases and hard-forks\\n-   Explored adding Hydra [support to kupo](https://github.com/CardanoSolutions/kupo/pull/117), a lightweight Cardano chain indexer - some more work required.\\n-   Improved navigation of the API Reference with a sidebar, see [unstable API version](https://hydra.family/head-protocol/unstable/api-reference/).\\n-   Fixed two things in our test suites (random port conflicts and an arithmetic underflow in smoke test)\\n\\n## What are the goals of next week\\n\\n-   Monthly review meeting (join via [Discord](https://discord.gg/inputoutput?event=1097863746216538194) or [AddEvent](https://www.addevent.com/event/ck16794110)) & report\\n-   Dirt road fix for rollbacks [#784](https://github.com/input-output-hk/hydra/issues/784) properly covered by a test.\\n-   Groom and ideally address user issue [#823](https://github.com/input-output-hk/hydra/issues/823).\\n-   Put the spec into the repo [#693](https://github.com/input-output-hk/hydra/issues/693) and prepare release 0.10.0."},{"id":"2023-04-21-ledger","metadata":{"permalink":"/cardano-updates/2023-04-21-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-21-ledger.md","source":"@site/blog/2023-04-21-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-04-21T00:00:00.000Z","formattedDate":"April 21, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":0.905,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-04-21-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-04-21-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-04-20-mithril"}},"content":"## High level summary\\n\\nWe continued to make progress on CIP-1694 and the conway ledger era.\\nIn particular, the conway era now supports Plutus V3.\\nFinally, we made small improvements to the ledger API and now host\\nour Haskell code documentation (haddocks) on github pages.\\n\\n\\n## Low level summary\\n\\n### Conway ledger era\\n\\n* [[pull-3365]] - Support for Plutus V3.\\n* [[pull-3368]] - Conway genesis fix.\\n* [[pull-3369]] - Added some governance ledger state.\\n* [[pull-3372]] - Work on the conway delegation certificates.\\n* [[pull-3384]] - Rename.\\n\\n### Haddocks hosted on github pages\\n\\n* [[pull-3385]] \\n\\n### Small improvements to the API\\n\\n* [[pull-3366]]\\n\\n### Technical Debt\\n\\n* [[pull-3367]] Fix cost model json instances.\\n* [[pull-3371]] UMap cleanup.\\n* [[pull-3373]] Upgrade to ghc 9.2.7 and cabal 3.10.1.\\n* [[pull-3375]] Sadly, we had to revert the `TICKF` optimizations. There was a regression we do not yet understand.\\n* [[pull-3377]] Fix cabal warnings.\\n* [[pull-3383]] Fix multi-asset test.\\n\\n[pull-3365]: https://github.com/input-output-hk/cardano-ledger/pull/3365\\n[pull-3366]: https://github.com/input-output-hk/cardano-ledger/pull/3366\\n[pull-3367]: https://github.com/input-output-hk/cardano-ledger/pull/3367\\n[pull-3368]: https://github.com/input-output-hk/cardano-ledger/pull/3368\\n[pull-3369]: https://github.com/input-output-hk/cardano-ledger/pull/3369\\n[pull-3371]: https://github.com/input-output-hk/cardano-ledger/pull/3371\\n[pull-3372]: https://github.com/input-output-hk/cardano-ledger/pull/3372\\n[pull-3373]: https://github.com/input-output-hk/cardano-ledger/pull/3373\\n[pull-3375]: https://github.com/input-output-hk/cardano-ledger/pull/3375\\n[pull-3377]: https://github.com/input-output-hk/cardano-ledger/pull/3377\\n[pull-3383]: https://github.com/input-output-hk/cardano-ledger/pull/3383\\n[pull-3384]: https://github.com/input-output-hk/cardano-ledger/pull/3384\\n[pull-3385]: https://github.com/input-output-hk/cardano-ledger/pull/3385"},{"id":"2023-04-20-mithril","metadata":{"permalink":"/cardano-updates/2023-04-20-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-20-mithril.md","source":"@site/blog/2023-04-20-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-04-20T00:00:00.000Z","formattedDate":"April 20, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.245,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-04-20-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-04-21-ledger"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-04-20-node-cli-api"}},"content":"## High level overview\\nThe Mithril team released a new [`2315.0`](https://github.com/input-output-hk/mithril/releases/tag/2315.0) distribution that implements the first part of the migration of the aggregator stores along with minor improvements and bug fixes. They finished the migration of the aggregator stores to a relational design by completing the adaptation and migration of the signed entity, signer and single signature stores. They also created a new tick service that provides beacons to other services of the aggregator. Additionally, they started implementing the new new certifier service of the aggregator that is in charge of producing certificates for multi-signatures.\\n\\nFinally, they completed the design and definition of the interfaces that must be implemented to provide certification for a new type of data in a Mithril network.\\n\\n\\n## Low level overview\\n- Released the new distribution [`2315.0`](https://github.com/input-output-hk/mithril/releases/tag/2315.0)\\n- Completed the epic that implements a relational store in the aggregator [#779](https://github.com/input-output-hk/mithril/issues/779):\\n  - Completed the migration/adaptation of the `signed_entity` table [#816](https://github.com/input-output-hk/mithril/issues/816)\\n  - Completed the creation of the `signer` table [#814](https://github.com/input-output-hk/mithril/issues/814)\\n  - Completed the migration/adaptation of the `single_signature` table [#829](https://github.com/input-output-hk/mithril/issues/829)\\n- Worked on the epic that designs and implement generic signing/verification of entity services [#780](https://github.com/input-output-hk/mithril/issues/780):\\n  - Completed the definition of the interface of the generic entity service for signing [#847](https://github.com/input-output-hk/mithril/issues/847)\\n  - Worked on the implementation of the `Certifier` service in the aggregator [#850](https://github.com/input-output-hk/mithril/issues/850)\\n  - Completed the extension of the `SignedEntityType` type [#848](https://github.com/input-output-hk/mithril/issues/848)\\n  - Completed the implementation of the `Tick` service in the aggregator [#849](https://github.com/input-output-hk/mithril/issues/849)\\n  - Worked on implementing the signable builder for the `Mithril Stake Distribution` [#851](https://github.com/input-output-hk/mithril/issues/851)"},{"id":"2023-04-20-node-cli-api","metadata":{"permalink":"/cardano-updates/2023-04-20-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-20-node-cli-api.md","source":"@site/blog/2023-04-20-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-04-20T00:00:00.000Z","formattedDate":"April 20, 2023","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":0.4,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-04-20-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-04-20-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-04-19-consensus"}},"content":"# 2023-04-20 - 2023-05-04\\n\\n## High level summary\\n- Various fixes and improvements\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Modify golden test functions to automatically create parent directories](https://github.com/input-output-hk/cardano-node/pull/5136) \\n- [SPO on-chain poll commands adjustments](https://github.com/input-output-hk/cardano-node/pull/5132) \\n- [New environment variable CARDANO_NODE_NETWORK_ID](https://github.com/input-output-hk/cardano-node/pull/5119) \\n\\n### cardano-api\\n- [`--out-file` option for governance commands](https://github.com/input-output-hk/cardano-node/pull/5172) \\n- [UTC Time to slots conversion function](https://github.com/input-output-hk/cardano-node/pull/5130) \\n\\n### cardano-node\\n- [Update CHaP to get latest ledger with performance fix](https://github.com/input-output-hk/cardano-node/pull/5157) \\n- [Integration with Peer Sharing](https://github.com/input-output-hk/cardano-node/pull/4854) \\n\\n### cardano-testnet"},{"id":"2023-04-19-consensus","metadata":{"permalink":"/cardano-updates/2023-04-19-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-19-consensus.md","source":"@site/blog/2023-04-19-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-04-19T00:00:00.000Z","formattedDate":"April 19, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":0.77,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-04-19-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-04-20-node-cli-api"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-04-19-performance-and-tracing"}},"content":"## High level summary\\n\\nThis week the consensus team continued working on the improved DB lock mechanism\\nfor UTxO-HD, and modifications to the mempool benchmarks that this prototype\\nrequires.\\n\\nOn the Genesis front we validated that the fragment size calculation in\\n`BlockFetch` is a major performance sink for ChainSync Jumping. By removing it\\nwe will get performance that is acceptably close to that of the baseline. We\\nalso started investigating a performance fix that does not alter the existing\\nbaseline behavior too much. In addition we reviewed our Genesis attack vector\\ncalculations.\\n\\nOn the support front we released Consensus 0.4, and we are working on improving\\nour release process, to support the Cardano-wide efforts in this area. We also\\nperformed an analysis on the number of file descriptors that consensus use. This\\ninformation can be used by the node operators to check if the number of file\\ndescriptors they want to support are enough."},{"id":"2023-04-19-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-04-19-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-19-performance-and-tracing.md","source":"@site/blog/2023-04-19-performance-and-tracing.md","title":"Performance & tracing update","description":"* Benchmarking: We performed a series of benchmarks aimed at the new 8.0 release branch and built a timeline from the 1.35 releases to that branch.","date":"2023-04-19T00:00:00.000Z","formattedDate":"April 19, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":2.575,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-04-19-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-04-19-consensus"},"nextItem":{"title":"Incident Report","permalink":"/cardano-updates/2023-04-17-ledger"}},"content":"* Benchmarking: We performed a series of benchmarks aimed at the new `8.0` release branch and built a timeline from the `1.35` releases to that branch.\\n* New tracing: Work on safeguarding the new tracing system performance-wise is ongoing. A practical use case for data points is being tackled with Galois.\\n* Analysis pipeline: We\'re working on automatically obtaining a detailed manifest for each run.\\n* Infrastructure: The library for benchmarking Plutus scripts has been merged. Also, we\'ve laid the ground for including GHC profiling data into our workbench.\\n* Nomad backend: The first iteration of a distributed / multi-client Nomad cluster has been merged.\\n  \\n# Benchmarking\\n\\nWe have performed various cluster runs targeting the `8.0` release branch. That way we were able to catch an inconsistency in behaviour early on. This led to the creation of a specialized workbench profile `epoch-transition` for local reproduction of what we observed on the benchmarking cluster.  \\n\\nFurthermore, we bridged the gap between the run data from the `1.35.x` releases to the the new `8.0.x` release branch. This included walking the\\n`master` branch backwards and pinpointing the order, as well as the dates and commits of all relevant component bumps. This timeline is absolutely crucial\\nin locating possible regressions for the new release branch, as it provides the exact points in history we would need to target with a comprehensive set of\\nbenchmarks.\\n\\n# Tracing\\n\\nIn-depth performance analysis of the new tracing system has already yielded results and helped us smoothing some rough edges. However, this work is still\\nongoing.  \\n\\nIn coordination with Galois, who are developing a system assurance service by observing a number of `cardano-node`s, we\'re working with the implementation\\nof data points which the node provides during runtime. While making the view on data points expressive enough for the external service, the computational\\nburden inside the node needs to be kept to an absolute minimum. We\'re currently in ideation about whether `cardano-tracer` could be extended with a richer\\nfeature set to that end.\\n\\n# Infrastructure & Analysis\\n\\n### Detailed manifest\\nA run manifest documents, among other things, the component dependencies that were used for a specific build the run has been performed with.\\nThese dependencies come from different package sources, have different versioning policies, and an identical package version might provide different\\nperformance characteristics depending on the exact commit used for the build. This manifest will greatly increase insight into where changes in measured behaviour might have originated\\nby making all component bumps visible and accessible.\\n\\n### GHC profiling inside workbench\\nThe workbench has been equipped with a new `-profnix` profile flavour. This enforces a `-fprof-auto` build for all node-related packages. The type of\\nprofiling data generated by the GHC runtime can be customized and will enter statistical analysis. The relevant PR for this new feature has already\\nbeen merged to `master`.\\n\\n### Nomad backend\\nThe added feature for a multi-client Nomad cluster greatly enhances how jobs are organized by the backend and mapped within specific instances.\\nThis results in great maintainability while not giving up on flexibility. However, work on that feature is still ongoing."},{"id":"2023-04-17-ledger","metadata":{"permalink":"/cardano-updates/2023-04-17-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-17-incident.md","source":"@site/blog/2023-04-17-incident.md","title":"Incident Report","description":"Incident reporting: Cardano block production temporary outage","date":"2023-04-17T00:00:00.000Z","formattedDate":"April 17, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.38,"hasTruncateMarker":false,"authors":[{"name":"Kevin Hammond","title":"Head of Software Engineering, Cardano Core","url":"https://github.com/kevinhammond","imageURL":"https://github.com/kevinhammond.png","key":"kevinhammond"}],"frontMatter":{"title":"Incident Report","slug":"2023-04-17-ledger","authors":"kevinhammond","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-04-19-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-04-14-goedel"}},"content":"## Incident reporting: Cardano block production temporary outage\\n\\nOn Sunday, January 22, 2023, an incident occurred resulting in block production pausing for a brief period of time (approximately two minutes, similar to the usual pause at an epoch boundary). Around 50% of block-producing nodes and relays restarted during this period. Having restarted, nodes continued to produce blocks without failure. While the network continued to operate, the issue did have the potential to affect network integrity, so was flagged as a \u2018critical\u2019 incident, thus warranting immediate response and investigation by IOG engineers.\\nThe investigation (with SPO & Cardano Foundation collaboration) quickly revealed the cause of the issue \u2013 a complex bug in data structure handling code related to the precise order of insertion/deletion of multi-asset tokens into the internal ledger record. Input Output Global (IOG) engineers, along with SPOs and DApp developers, collectively identified how to reproduce the issue as a unit test that could be included in the standard Cardano node test suite. \\nFollowing successful testing, this led to a bug fix being implemented, tested, benchmarked, and deployed as a hotfix in the node v.1.35.5 release on Friday, January 27, 2023. Care was taken not to highlight the exact cause of the bug during this process so that it could not be exploited prior to SPOs deploying this new node version.\\nWith the fix deployed, the Cardano SPO and developer community have not seen any further instances of this issue.\\n\\n### Further Details\\n\\nYou can read more details on the incident and how it was managed from SundaeSwap\u2019s Pi Lanningham [here](https://www.314pool.com/post/cardano-post-mortem-1). Thanks again to all the community for its support in identifying and fixing this bug."},{"id":"2023-04-14-goedel","metadata":{"permalink":"/cardano-updates/2023-04-14-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-14-goedel.md","source":"@site/blog/2023-04-14-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-04-14T00:00:00.000Z","formattedDate":"April 14, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.415,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-04-14-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Incident Report","permalink":"/cardano-updates/2023-04-17-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-04-14-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has submitted two papers for publication, carried\\nout consultancy with other teams and has an opening for an intern.\\n\\n## Details\\n\\n* Finalised and submitted two papers to ICE 2023\\n\\n* Studying Praos paper.\\n\\n* The team is hiring a performance engineering intern - https://apply.workable.com/io-global/j/BFEC5B0AFF/\\n\\n* Design exploration for congestion management."},{"id":"2023-04-14-hydra","metadata":{"permalink":"/cardano-updates/2023-04-14-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-14-hydra.md","source":"@site/blog/2023-04-14-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-04-14T00:00:00.000Z","formattedDate":"April 14, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.98,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-04-14-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-04-14-goedel"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-04-07-hydra"}},"content":"## High-level summary\\n\\nThis week, the Hydra team focused on improving the smoke test, fixing developer\\ntooling, and improving the API for voting use cases. They reviewed progress on\\nauction, payments, and voting projects and made worked on reproducing a bug with\\nhandling rollbacks. Moving forward, the team plans to update dependencies,\\nimplement a dirt road fix for the rollbacks bug, and explore adding Hydra\\nsupport to kupo.\\n\\n## What did the team achieve this week\\n\\n-   Reviewed progress on auction, payments and voting projects\\n-   Improved smoke tests so they can run on mainnet\\n-   Fixed a regression in the development environment and updated cardano-node\\n    used in tests\\n-   Improved API with more configurability to unblock voting use case\\n    -   Exclude utxo in `SnapshotConfirmed` outputs [#808](https://github.com/input-output-hk/hydra/pull/808)\\n    -   Addressed a user request by only sending `Greetings` once [#813](https://github.com/input-output-hk/hydra/issues/813)\\n-   Reproduced the rollback bug by improving our model-based test suite [#784](https://github.com/input-output-hk/hydra/issues/784)\\n\\n## What are the goals of next week\\n\\n-   Update dependencies to match `cardano-node` master\\n-   Dirt road fix for rollbacks [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Update Hydraw to maintain state locally\\n-   Explore adding Hydra support to kupo\\n-   Put disclaimer texts and closing mainnet compatibility feature [#713](https://github.com/input-output-hk/hydra/issues/713)"},{"id":"2023-04-07-hydra","metadata":{"permalink":"/cardano-updates/2023-04-07-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-07-hydra.md","source":"@site/blog/2023-04-07-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-04-07T00:00:00.000Z","formattedDate":"April 7, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.875,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-04-07-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-04-14-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-04-06-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team published the monthly report for March, created\\nseparate links for different versions of documentation, and clarified potential\\nsolutions for the Rollbacks bug. The team also discussed Query API requests for\\nthe Hydra Voting project and met with community members to answer questions\\nabout Hydra. Moving forward, the team plans to integrate the specification into\\nthe repository, implement a short-term fix for the Rollbacks issue, and draft a\\nQuery API ADR.\\n\\n## What did the team achieve this week\\n\\n-   Published monthly reports on [website](https://hydra.family/head-protocol/monthly/2023-03)\\n-   Separate last released and latest versions of docs (e.g. normal [released](https://hydra.family/head-protocol/core-concepts/behavior/#replay-of-past-server-outputs) vs. [/unstable](https://hydra.family/head-protocol/unstable/core-concepts/behavior/#replay-of-past-server-outputs))\\n-   Discussed Query API concerns from Hydra Voting project ([link](https://github.com/input-output-hk/hydra/discussions/797))\\n-   Clarified rollbacks bug and defined possible solutions (short and long term) [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Met with community members to answer questions about Hydra\\n\\n## What are the goals of next week\\n\\n-   Finally get the docs integrated into the repository [#693](https://github.com/input-output-hk/hydra/issues/693)\\n-   Dirt road fix for rollbacks [#784](https://github.com/input-output-hk/hydra/issues/784)\\n-   Disclaimer text and detail known issues about mainnet compatibility\\n    [#713](https://github.com/input-output-hk/hydra/issues/713)"},{"id":"2023-04-06-mithril","metadata":{"permalink":"/cardano-updates/2023-04-06-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-06-mithril.md","source":"@site/blog/2023-04-06-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-04-06T00:00:00.000Z","formattedDate":"April 6, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.075,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-04-06-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-04-07-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-04-05-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2313.0`](https://github.com/input-output-hk/mithril/releases/tag/2313.0) distribution that implements minor improvements and bug fixes. They continued implementing the migration of the aggregator stores to a relational design. They finished adaptating and migrating the certificate, epoch settings, signed entity type, signer registration and open message stores. Additionally, they completed the refactoring of the dependency injector of the aggregator and simplified its multi-signer in order for it to sign multiple concurrent messages.\\n\\nFinally, the team has worked on designing the new architecture of the network to support signing multiple types of data and upgraded the version of the Cardano node used in the Mithril testnets and devnet to `1.35.6`.\\n\\n## Low level overview\\n- Released the new distribution [`2313.0`](https://github.com/input-output-hk/mithril/releases/tag/2313.0)\\n- Worked on the epic that implements a relational store in the aggregator [#779](https://github.com/input-output-hk/mithril/issues/779):\\n  - Completed the migration/adaptation of the `epoch_settings` table [#813](https://github.com/input-output-hk/mithril/issues/813)\\n  - Completed the migration/adaptation of the `signed-entity-type` table [#815](https://github.com/input-output-hk/mithril/issues/815)\\n  - Completed the migration/adaptation of the `certificate` table [#817](https://github.com/input-output-hk/mithril/issues/817)\\n  - Completed the migration/adaptation of the `open_message` table [#827](https://github.com/input-output-hk/mithril/issues/827)\\n  - Completed the migration/adaptation of the `signer_registration` table [#828](https://github.com/input-output-hk/mithril/issues/828)\\n- Completed the refactoring of the dependency injection of the aggregator [#823](https://github.com/input-output-hk/mithril/issues/823)\\n- Completed the cleanup of the multi-signer of the aggregator [#824](https://github.com/input-output-hk/mithril/issues/824)\\n- Completed the upgrade of the Cardano node to `1.35.6` [#843](https://github.com/input-output-hk/mithril/issues/843)"},{"id":"2023-04-05-consensus","metadata":{"permalink":"/cardano-updates/2023-04-05-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-05-consensus.md","source":"@site/blog/2023-04-05-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-04-05T00:00:00.000Z","formattedDate":"April 5, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":0.66,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-04-05-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-04-06-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-04-05-node-cli-api"}},"content":"## High level summary\\n\\nThis week the consensus team finished the UTxO-HD prototype refactoring. We are\\nnow working on improving the DB lock mechanism to improve performance. We also\\nintroduced several improvements to the file system abstraction and simulation\\nlayer (`fs-sim`), which culminated in the release of `fs-sim-0.1.0.0` and\\n`fs-api-0.1.0.0` to `CHaP`.\\n\\nOn the Genesis front we distributed the updated Genesis design document,\\nsoliciting feedback from Networking Team and IOG Researchers. We also opened up\\na PR for the adversarial leader schedule `QuickCheck` generator, which is being\\nreviewed.\\n\\nOn the support front, we got a new Consensus version that can use different\\nfundamental VRF crypto primitives for Babbage and Conway eras.\\n\\nOn the tech debt front we fixed an bug in the followers logic, which was\\ndiscovered by our `QuickCheck` property tests."},{"id":"2023-04-05-node-cli-api","metadata":{"permalink":"/cardano-updates/2023-04-05-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-05-node-cli-api.md","source":"@site/blog/2023-04-05-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-04-05T00:00:00.000Z","formattedDate":"April 5, 2023","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.315,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-04-05-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-04-05-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-04-05-performance-and-tracing"}},"content":"# 2023-04-05 - 2023-04-19\\n\\n## High level summary\\n- Introduce new governance commands create, answer and verify. This allows us to have onchain polls.\\n- Begin making changes in cardano-api to accomodate for CIP-1694\\n- Rename `TestEnableDevelopmentHardForkEras` to `ExperimentalHardForksEnabled` and `TestEnableDevelopmentNetworkProtocols` to `ExperimentalProtocolsEnabled`\\n- Various bug fixes and improvements \\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Add new interim governance commands: {create, answer, verify}-poll](https://github.com/input-output-hk/cardano-node/pull/5112) \\n- [Remove --stake-address option from stake-address build](https://github.com/input-output-hk/cardano-node/pull/5061) \\n- [Frozen callstack for checkTextEnvelopeFormat function](https://github.com/input-output-hk/cardano-node/pull/5059) \\n- [#5052 Remove reading protocol parameters from Shelley genesis file](https://github.com/input-output-hk/cardano-node/pull/5053) \\n- [Move parsers to reusable location](https://github.com/input-output-hk/cardano-node/pull/5046) \\n- [New --socket-path cli option](https://github.com/input-output-hk/cardano-node/pull/4910) \\n\\n### cardano-api\\n- [CIP-1694 make space for DRep certificates](https://github.com/input-output-hk/cardano-node/pull/5108) \\n- [File type to track the content and direction of files](https://github.com/input-output-hk/cardano-node/pull/5105) \\n- [Fix import warning](https://github.com/input-output-hk/cardano-node/pull/5087) \\n- [Expose UsingRawBytes et al types](https://github.com/input-output-hk/cardano-node/pull/5086) \\n- [Expose SerialiseAsRawBytesError in Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/5085) \\n- [Introduce new AnyShelleyBasedEra type and simplify CDDL tests.](https://github.com/input-output-hk/cardano-node/pull/5072) \\n- [New genCardanoKeyWitness function](https://github.com/input-output-hk/cardano-node/pull/5071) \\n- [Replace roundtripCBOR with trippingCbor](https://github.com/input-output-hk/cardano-node/pull/5069) \\n- [Remove non-round-trippable value TxInsReferenceNone for babbage onwards in generator](https://github.com/input-output-hk/cardano-node/pull/5064) \\n- [Improve roundtrip functions to report annotations on callsite](https://github.com/input-output-hk/cardano-node/pull/5063) \\n- [Define Functor instance for FileError](https://github.com/input-output-hk/cardano-node/pull/5057) \\n- [Split serialisation from IO](https://github.com/input-output-hk/cardano-node/pull/5049) \\n\\n### cardano-node\\n- [Master build failure fixes](https://github.com/input-output-hk/cardano-node/pull/5115) \\n- [Allow renamed fields to exist if values the same](https://github.com/input-output-hk/cardano-node/pull/5106) \\n- [workbench: updates](https://github.com/input-output-hk/cardano-node/pull/5091) \\n- [Delete duplicate packages sort packages and imports](https://github.com/input-output-hk/cardano-node/pull/5084) \\n- [Rename TestEnableDevelopmentHardForkEras and TestEnableDevelopmentNetworkProtocols](https://github.com/input-output-hk/cardano-node/pull/4341) \\n\\n### cardano-testnet\\n- [Additional check for not-leader slots in LeadershipSchedule tests](https://github.com/input-output-hk/cardano-node/pull/5110) \\n- [Fix epochLength and securityParam to conform to the formula 10 * k / f](https://github.com/input-output-hk/cardano-node/pull/5099) \\n- [Ergonomic directory creation code in tests](https://github.com/input-output-hk/cardano-node/pull/5083) \\n- [Default Cardano.Testnet to NodeLoggingFormatAsJson](https://github.com/input-output-hk/cardano-node/pull/5036) \\n- [Integrate latest ledger dependencies](https://github.com/input-output-hk/cardano-node/pull/5013)"},{"id":"2023-04-05-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-04-05-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-04-05-performance-and-tracing.md","source":"@site/blog/2023-04-05-performance-and-tracing.md","title":"Performance & tracing update","description":"* Benchmarking: We worked on adjusting our infrastructure to the new 8.0 release branch and performed a (very) early run.","date":"2023-04-05T00:00:00.000Z","formattedDate":"April 5, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":2.33,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-04-05-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-04-05-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-03-31-crypto"}},"content":"* Benchmarking: We worked on adjusting our infrastructure to the new `8.0` release branch and performed a (very) early run.\\n* New tracing: We\'re profiling the new tracing system for minimizing its resource footprint and guarantee high throughput.\\n* Analysis pipeline: Variance analysis both for reporting and for serving as a point of comparison has been merged.\\n* Infrastructure: A library for Plutus scripts will be integrated in our tooling and benchmarking profiles. Also, a profile family aimed at the tracing systems has been added.\\n* Nomad backend: Various specializations of the backend are currently being implemented, along with streamlining credentials management.\\n  \\n# Benchmarking\\n\\nWe have adapted our benchmarking cluster to the requirements of the `8.0` release branch. Testing runs of a very early feature branch for `8.0`\\nhelped us localize an important issue in collaboration with the other teams. We look forward to gathering preliminary metrics for `8.0` soon.\\n\\n# Tracing\\n\\nAnalysis of resource usage profiles of both the legacy and new tracing system, with and without trace forwarding, have lead us to gather very\\ndetailed profiling data for each possible setup. This is to ensure we keep resource usage within the node to an absolute minimum, while still providing\\nthe highest possible throughput of data for forwarding to `cardano-tracer`.   \\n\\nAdditionally, we\'ve worked on a very practically-oriented document targeted at end users of the new tracing system. It provides tested step-by-step instructions\\nfor tunneling trace forwarding from a node to `cardano-tracer` via an easy to manage system service, which will match the production setup of most users.\\n\\n# Infrastructure & Analysis\\n\\n### General\\nVariance analysis as a full-fledged entity in our tooling has been merged. Not only is this type of analysis now part of our reporting pipeline - variance\\nanalysis can be fed back and serve as an additional point of comparison.\\n\\nFurthermore, we\'ve created a profile family for the workbench that\'s specifically aimed at measuring and comparing tracing system configurations.\\n\\n### Plutus library\\nWe opened a PR containing a new package for benchmarking - an extendable library that holds all Plutus scripts we use in our benchmarking profiles.\\nThis will enable us in the future to iteratively work on customizing any given script, and the way is called in the context of a specific profile.\\nIt is a refinement of current affairs, where we have additional build inputs solely to generate a static script file tied to an external commit.\\n\\n### Nomad backend\\nThe nomad backend is being specialized in three ways: using a podman driver locally, using nomad agents supporting nix installables, and using nomad cloud agents. This supports having a common surface independent of the actual backend driver being used. In addition, vault retrieval and management of cloud access credentials is\\nbeing improved to minimize any friction for the backend user."},{"id":"2023-03-31-crypto","metadata":{"permalink":"/cardano-updates/2023-03-31-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-31-crypto.md","source":"@site/blog/2023-03-31-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-03-31T00:00:00.000Z","formattedDate":"March 31, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.105,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-03-31-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-04-05-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-03-31-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: Started looking into full-node verifier\\n* cardano-base: BLS12-381\'s PR merged. Creating test-vectors for verifying basic pairing properties.\\n* KES agent: Blockers overcome. Reaching a first MVP level of the KES-agent.  \\n* Sidechains: Included BLS12-381 & JubJub to halo2curves\\n* MuSig2: Final modifs to C version.\\n## Low level summary\\n### Mithril\\n* Started designing how a full-node verifier would work. Issue comming in the next couple of weeks. \\n### cardano-base\\n* BLS12-381 branch merged [PR#266](https://github.com/input-output-hk/cardano-base/pull/266). \\n* Testing strategy for BLS bindings:\\n    * Test-vectors for Groth16, and simple BLS signatures ready.\\n    * Test-vectors with different library, and created by different engineer. \\n### KES agent\\n* Resolved issues of circular dependency\\n* Got rid of separate DSIGN and DSIGNM, we now have DSIGN over mlocked keys, but the phantom type is the same.  \\n* Opened a PR for raw bearer branch in ouroboros network [PR4395](https://github.com/input-output-hk/ouroboros-network/pull/4395)\\n* Resolved a bug where the agent node did not properly closed connections\\n* Updated version of [IOSim](https://github.com/input-output-hk/io-sim/pull/70) allowed us to finish a first version of KES agent.\\n### Sidechains\\n* Included [BLS12-381](https://github.com/iquerejeta/halo2curves/commit/1ccf987b772dcfaa3c1e3439a4a28f23fcf07c7a) curve to our branch of halo2curves\\n* Included [JubJub](https://github.com/iquerejeta/halo2curves/commit/3f20edb2ed112733a0a0986b0a0386c1b9bc439f) to our branch of halo2curves \\n### MuSig2\\n* Minor reorg [PR#42](https://github.com/input-output-hk/musig2/pull/42)\\n* Started including fuzz testing for deserialisation [PR#](https://github.com/input-output-hk/musig2/pull/43)"},{"id":"2023-03-31-goedel","metadata":{"permalink":"/cardano-updates/2023-03-31-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-31-goedel.md","source":"@site/blog/2023-03-31-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-03-31T00:00:00.000Z","formattedDate":"March 31, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.455,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-03-31-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-03-31-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-31-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on final drafts of two papers\\nfor internal review and planning next steps of analysis of consensus\\ndesign refiniments.\\n\\n## Details\\n\\n* Preparing final draft of DeltaQSD algebra paper for internal review\\n\\n* Preparing final draft of verifying design refinements for\\n  distributed system design for internal review\\n\\n* Planning next phase of consensus design refinement analysis"},{"id":"2023-03-31-hydra","metadata":{"permalink":"/cardano-updates/2023-03-31-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-31-hydra.md","source":"@site/blog/2023-03-31-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-31T00:00:00.000Z","formattedDate":"March 31, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.82,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-31-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-03-31-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-03-31-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra continued work on finishing mainnet compatibility. The\\nsemi-automated smoke tests and some missing documentation is still preventing\\nfrom calling that fully done. They fixed smaller issues and made a step in the\\nHead protocol more robust. Besides development, they met with interested people\\nfrom the community who want to get started collaborating on communication and\\nmarketing materials.\\n\\n## What did the team achieve this week\\n\\n-   Groomed and followed-up on `GetUTxO` user request discussion [#797](https://github.com/input-output-hk/hydra/discussions/797)\\n-   Fixed `hydra-node` crashes after forks [#560](https://github.com/input-output-hk/hydra/issues/560)\\n-   Made `collectCom` more robust and aligned with spec [#786](https://github.com/input-output-hk/hydra/pull/786)\\n-   Completed configurable API feature [#380](https://github.com/input-output-hk/hydra/issues/380)\\n-   Met potential contributors about Hydra communication and marketing materials\\n-   Versioned documentation: we have a `unstable` bleeding edge version available as well now, seperate from the last released version\\n\\n## What are the goals of next week\\n\\n-   Follow-up backlog and roadmap clean-up\\n-   Complete mainnet compatibility feature [#713](https://github.com/input-output-hk/hydra/issues/713) (documentation updates)\\n-   Integrate Hydra specification into repository [#693](https://github.com/input-output-hk/hydra/issues/693)"},{"id":"2023-03-31-ledger","metadata":{"permalink":"/cardano-updates/2023-03-31-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-31-ledger.md","source":"@site/blog/2023-03-31-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-03-31T00:00:00.000Z","formattedDate":"March 31, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.97,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-03-31-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-31-hydra"},"nextItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2023-03-27-system-test"}},"content":"## High level summary\\n\\nWe are still heavily involved in work related to preparing the next release.\\nThe other main thing we have worked on is experimentation about how we will\\nhandle the DRep stake distribution for CIP-1694 in the conway ledger era.\\nLastly, we merged a fix for\\n[node-4826](https://github.com/input-output-hk/cardano-node/issues/4826)\\ninto our main branch (there will be a post-mortem shortly).\\n\\n## Low level summary\\n\\n### Support for the next release\\n\\n* [pull-3363] - Fix problems relating to Arbitrary instances used by consensus.\\n* [pull-3361] - Remove the alonze genesis from the conway genesis.\\n* [pull-3360] - Translate bad pointer addresses to valid ones in conway.\\n* [pull-3357] - Fix a bug relating to zero valued ADA in the script context.\\n* [pull-3356] - Added needed instances (Arbitrary and Serialization) for conway integration.\\n* [pull-3345] - Added helper functions for the CLI.\\n* [pull-3342] - Fix a bug with a CLI helper function (having to do with deposit tracking).\\n\\n### Experiments for DRep stake distribution\\n\\nAdding another stake distribution to the ledger state presents some new challenges.\\nWe would like to be able to use the current stake distribution at the epoch boundary\\nfor DRep voting so that people can always vote themselves in time for any proposal.\\nTo this end, we have a prototype of an incremental computation based on the incremental\\nlambda calculus, together with tests and benchmarks (which are very promising).\\nSee [pull-3344].\\n\\nAdditionally, more of the ledger state is going to need to be rearranged to accomodate\\nthe new incremental computations.\\nWe have two draft PRs up for possibles solution.\\nSee [pull-3353] and [pull-3364].\\n\\n### Technical debt and bug fixes\\n\\n* [pull-3343] - A fix [node-4826](https://github.com/input-output-hk/cardano-node/issues/4826).\\n* [pull-3333] - Moving more code out of the shelley packages. \\n* [pull-3347] - Bug fix for the multi-asset generators.\\n* [pull-3341] - Removal of code duplication.\\n\\n### Documentation changes\\n\\n* [pull-3354] - Rename \\"optional datums\\" with \\"supplemental datums\\" in the alonzo spec.\\n* [pull-3352] - Add a section to the Shelly errata about the individual deposit tracking.\\n* [pull-3351] - Further clarify the details regarding the script integrity hash.\\n* [pull-3350] - Some cleanup of the Babbage spec.\\n\\n\\n[pull-3363]: https://github.com/input-output-hk/cardano-ledger/pull/3363\\n[pull-3361]: https://github.com/input-output-hk/cardano-ledger/pull/3361\\n[pull-3360]: https://github.com/input-output-hk/cardano-ledger/pull/3360\\n[pull-3357]: https://github.com/input-output-hk/cardano-ledger/pull/3357\\n[pull-3356]: https://github.com/input-output-hk/cardano-ledger/pull/3356\\n[pull-3345]: https://github.com/input-output-hk/cardano-ledger/pull/3345\\n[pull-3342]: https://github.com/input-output-hk/cardano-ledger/pull/3342\\n[pull-3344]: https://github.com/input-output-hk/cardano-ledger/pull/3344\\n[pull-3353]: https://github.com/input-output-hk/cardano-ledger/pull/3353\\n[pull-3364]: https://github.com/input-output-hk/cardano-ledger/pull/3364\\n[pull-3343]: https://github.com/input-output-hk/cardano-ledger/pull/3343\\n[pull-3333]: https://github.com/input-output-hk/cardano-ledger/pull/3333\\n[pull-3347]: https://github.com/input-output-hk/cardano-ledger/pull/3347\\n[pull-3341]: https://github.com/input-output-hk/cardano-ledger/pull/3341\\n[pull-3354]: https://github.com/input-output-hk/cardano-ledger/pull/3354\\n[pull-3352]: https://github.com/input-output-hk/cardano-ledger/pull/3352\\n[pull-3351]: https://github.com/input-output-hk/cardano-ledger/pull/3351\\n[pull-3350]: https://github.com/input-output-hk/cardano-ledger/pull/3350"},{"id":"2023-03-27-system-test","metadata":{"permalink":"/cardano-updates/2023-03-27-system-test","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-27-system-test.md","source":"@site/blog/2023-03-27-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2023-03-27T00:00:00.000Z","formattedDate":"March 27, 2023","tags":[{"label":"system-test","permalink":"/cardano-updates/tags/system-test"}],"readingTime":0.785,"hasTruncateMarker":false,"authors":[{"name":"Martin Kourim","title":"System Test Engineer","url":"https://github.com/mkoura","imageURL":"https://github.com/mkoura.png","key":"mkoura"}],"frontMatter":{"title":"System Test Team Update","slug":"2023-03-27-system-test","authors":"mkoura","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-03-31-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-24-hydra"}},"content":"## High level summary\\nSince the last update (2023-1-13) we did more improvements on our Test Framework, added more automated tests, kept analyzing and fixing nightly jobs failures, tested the _1.35.5_ and _1.35.6_ releases (and their predecessing release candidates) and ran tests on branch with the _UTxO-HD_ functionality.\\n\\n## Workstreams\\n\\n### Framework improvements:\\n- improvements in searching for unexpected error messages in log files during test run\\n- added support for UTxO-HD testing\\n- added support for the new P2P topology format\\n- added local cluster variant that has the same properties as mainnet (epoch length, fees, etc.)\\n- added preliminary support for the Conway era\\n- added support for running tests on the _Preview_ testnet\\n\\n[Full list of closed PRs](https://github.com/input-output-hk/cardano-node-tests/pulls?q=is%3Apr+is%3Aclosed+updated%3A2023-01-13..2023-03-26)\\n\\n### Node:\\n- ran tests on node branch with the UTxO-HD functionality\\n- tested the [1.35.5](https://input-output-hk.github.io/cardano-node-tests/test_results/node/tag_1_35_5.html) release\\n- tested the [1.35.6](https://input-output-hk.github.io/cardano-node-tests/test_results/node/tag_1_35_6.html) release\\n\\n### DB-Sync:\\n- improvements in db-sync sync tests\\n- improvements in db-sync functional tests"},{"id":"2023-03-24-hydra","metadata":{"permalink":"/cardano-updates/2023-03-24-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-24-hydra.md","source":"@site/blog/2023-03-24-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-24T00:00:00.000Z","formattedDate":"March 24, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.95,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-24-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2023-03-27-system-test"},"nextItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-03-23-db-sync"}},"content":"## High-level summary\\n\\nThis week, the Hydra had a team workshop and conducted the monthly review\\nmeeting for March. They demonstrated a Hydra Head on mainnet, which was running\\nthe hydraw demo application. While this marks an important milestone, they also\\nemphasized that more features are still to be added as needed for applications\\nto run on Hydra. Besides this, the roadmap is getting cleaned up to encourage\\ndiscussions and provide more space for user requests.\\n\\n## What did the team achieve this week\\n\\n-   Monthly review meeting [slides](https://docs.google.com/presentation/d/1yZ4AqUQ8OBMG9ARMYvj3IOjaIAqglf7kZei4vsLMrbs/edit#slide=id.g1f87a7454a5_0_1392)/[recording](https://drive.google.com/file/d/1krzM8VN-gpKTtpVdC2JQx-lGti-4gKQS/view?ts=641b3c1c), full report of March next week\\n    -   Opened a head on mainnet with hydraw demonstration\\n    -   Hydra pay updates\\n-   Team workshop in Austria\\n    -   Hydra presentation at the Cardano Foundation in Zurich\\n    -   In-person grooming session, marked many items as candidates to be rather :idea: dicussions\\n    -   Improved head protocol [#786](https://github.com/input-output-hk/hydra/pull/786) and investigated a potential bug in rollback handling [#784](https://github.com/input-output-hk/hydra/issues/784)\\n    -   Team building and retrospective\\n\\n## What are the goals of next week\\n\\n-   Follow-up on backlog and roadmap clean-up\\n-   Complete mainnet compatibility feature (documentation updates)\\n-   Make API more configurable [#380](https://github.com/input-output-hk/hydra/issues/380)\\n-   Integrate Hydra specification into repository [#693](https://github.com/input-output-hk/hydra/issues/693)"},{"id":"2023-03-23-db-sync","metadata":{"permalink":"/cardano-updates/2023-03-23-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-23-db-sync.md","source":"@site/blog/2023-03-23-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-03-23T00:00:00.000Z","formattedDate":"March 23, 2023","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":0.755,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-03-23-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-24-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-03-23-mithril"}},"content":"## High level summary\\n\\nThe DBSync team worked in performance enhancements issues, on providing new db-sync options and on\\ntechnical debt and bug fixing. The DBSync team also on boarded a new member.\\n\\n## Low level summary\\n- Worked on an issue which causes `ada_pots` tables to include the values related not only to an\\nepoch, but also the first epoch of the last epoch.\\n[#1367](https://github.com/input-output-hk/cardano-db-sync/pull/1367)\\n- Fixed an issue where the `epoch` table didn\'t rollback and caused wrong values\\n[#1370](https://github.com/input-output-hk/cardano-db-sync/pull/1370)\\n- Fixed an issue were users with `disable-ledger` option had to provide the state dir option, even\\nthough it was never used. Also refactored the no ledger part of the codebase.\\n[#1378](https://github.com/input-output-hk/cardano-db-sync/pull/1378)\\n- Improved the perforance by using the cache more. Also provided many new options which enables or\\ndisables parts of db-sync. In addition a new `--turbo` mode is enables which allows db-sync to sync\\nmainnet in hours.\\n[#1379](https://github.com/input-output-hk/cardano-db-sync/pull/1379)"},{"id":"2023-03-23-mithril","metadata":{"permalink":"/cardano-updates/2023-03-23-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-23-mithril.md","source":"@site/blog/2023-03-23-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-03-23T00:00:00.000Z","formattedDate":"March 23, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.615,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-03-23-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-03-23-db-sync"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-03-22-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2310.0`](https://github.com/input-output-hk/mithril/releases/tag/2310.0) distribution that activates the era switch mechanism. They also kept implementing the migration of the aggregator stores to a relational design with the first adaptation of the stake pool store, and then the adaptation of the epoch settings & signed entity type stores. They have implemented the handling of the network API version from the Open API specifications and its automatic switch at era transition. Additionally, they optimized the stake distribution computation that now happens only once per epoch, and also enhanced the client multi-platform workflow to test the Docker images.\\n\\nFinally, they have successfully completed the tests to create certificates and snapshots on a network running on the Cardano `mainnet` and they have fixed some bugs. \\n\\n## Low level overview\\n- Completed the epic that implements eras behavior switch [#707](https://github.com/input-output-hk/mithril/issues/707):\\n  - Completed handling the API version switch at era transition [#727](https://github.com/input-output-hk/mithril/issues/727)\\n- Worked on the epic that implements a relational store in the aggregator [#779](https://github.com/input-output-hk/mithril/issues/779):\\n  - Completed on the migration/adaptation of the `stake_pool` table [#787](https://github.com/input-output-hk/mithril/issues/787)\\n  - Worked on the migration/adaptation of the `epoch_settings` table [#813](https://github.com/input-output-hk/mithril/issues/813)\\n  - Worked on the migration/adaptation of the `signed-entity-type` table [#815](https://github.com/input-output-hk/mithril/issues/815)\\n  - Completed the creation of a stake distribution service [#799](https://github.com/input-output-hk/mithril/issues/799)\\n- Completed the testing of Mithril with Cardano `mainnet` network [#777](https://github.com/input-output-hk/mithril/issues/777)\\n- Completed qualifying the computation of the stake distribution [#810](https://github.com/input-output-hk/mithril/issues/810)\\n- Completed the testing of the Docker client in the `Mithril Client multi-platform test` workflow [#794](https://github.com/input-output-hk/mithril/issues/794)\\n- Worked on bugs and optimizations:\\n  - Fixed a bug that made computation of the stake distribution occur multiple times during an epoch [#804](https://github.com/input-output-hk/mithril/issues/804)\\n  - Fixed a bug that created deadlocks on the SQLite connection [#807](https://github.com/input-output-hk/mithril/issues/807)\\n  - Optimized the error message and the behavior of the signer node when KES keys have expired [#820](https://github.com/input-output-hk/mithril/issues/820)\\n  - Upgraded the infrastructure of the `testing-preview` and `pre-release-preview` networks [#801](https://github.com/input-output-hk/mithril/issues/801)\\n  - Re-genesis of the `testing-preview` network [#803](https://github.com/input-output-hk/mithril/issues/803)\\n  - Re-genesis of the `pre-release-preview` network [#818](https://github.com/input-output-hk/mithril/issues/818)"},{"id":"2023-03-22-consensus","metadata":{"permalink":"/cardano-updates/2023-03-22-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-22-consensus.md","source":"@site/blog/2023-03-22-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-03-22T00:00:00.000Z","formattedDate":"March 22, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":0.63,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-03-22-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-03-23-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-03-22-node-cli-api"}},"content":"## High level summary\\n\\nThis week the consensus team continued working on the refactoring of the UTxO HD\\nprototype, and design and testing of Genesis. We also extracted the `fs-sim`\\npackage, which provides a file-system abstraction layer that can be used for\\ntesting and simulation. This makes the Consensus code base smaller, while\\nproviding a package that the community can reuse and contribute to. We also\\nfixed a failing property test related to iterators. We are also working on\\nmempool and VRF improvements.\\n\\n\\n## Low-level details\\n\\n- Extraction of `fs-sim` code from `ouroboros-network`:\\n    - https://github.com/input-output-hk/ouroboros-network/pull/4425\\n    - https://github.com/input-output-hk/fs-sim/pull/1\\n    - https://github.com/input-output-hk/fs-sim/pull/2\\n    - https://github.com/input-output-hk/ouroboros-network/pull/4460\\n- Smaller changes in `fs-sim` code (some required by `UTxO-HD`):\\n    - https://github.com/input-output-hk/fs-sim/pull/5\\n    - https://github.com/input-output-hk/fs-sim/pull/6\\n    - https://github.com/input-output-hk/fs-sim/pull/7\\n    - https://github.com/input-output-hk/fs-sim/pull/8\\n- Released cardano-lmdb-simple-0.6.0.0\\n    - https://github.com/input-output-hk/lmdb-simple/pull/20\\n    - https://github.com/input-output-hk/cardano-haskell-packages/pull/150"},{"id":"2023-03-22-node-cli-api","metadata":{"permalink":"/cardano-updates/2023-03-22-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-22-node-cli-api.md","source":"@site/blog/2023-03-22-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-03-22T00:00:00.000Z","formattedDate":"March 22, 2023","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":0.645,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-03-22-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-03-22-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-03-22-performance-and-tracing"}},"content":"# 2023-03-22 - 2023-04-05\\n\\n## High level summary\\n\\n- Added new cardano-cli ping command which allows users to ping remote cardano-nodes.\\n- The `transaction build` command now can automatically balance multiassets\\n- New combinators for constructing transaction bodies. This allows us to construct transaction bodies in a composable manner.\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Remove unused error constructors](https://github.com/input-output-hk/cardano-node/pull/5041) \\n- [Fix qKesKesKeyExpiry to not always be null](https://github.com/input-output-hk/cardano-node/pull/4909) \\n- [New cardano-cli ping command.](https://github.com/input-output-hk/cardano-node/pull/4664) \\n\\n### cardano-api\\n- [Remove use of AcquireFailure type](https://github.com/input-output-hk/cardano-node/pull/5040) \\n- [Simplify implementation of executeQueryAnyMode](https://github.com/input-output-hk/cardano-node/pull/5038) \\n- [Script data serialisation](https://github.com/input-output-hk/cardano-node/pull/5002) \\n- [Guard against overflows in Shelley TxIns](https://github.com/input-output-hk/cardano-node/pull/4956) \\n- [Combinators for TxBodyContent and related types](https://github.com/input-output-hk/cardano-node/pull/4941) \\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450) \\n\\n### cardano-node\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values.](https://github.com/input-output-hk/cardano-node/pull/5011) \\n- [Re-enable kes-period-info test.](https://github.com/input-output-hk/cardano-node/pull/4879)"},{"id":"2023-03-22-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-03-22-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-22-performance-and-tracing.md","source":"@site/blog/2023-03-22-performance-and-tracing.md","title":"Performance & tracing update","description":"* Benchmarking: We performed benchmarks for the new tracing system, and started benchmarking for varying GHC RTS configurations.","date":"2023-03-22T00:00:00.000Z","formattedDate":"March 22, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":2.5,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-03-22-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-03-22-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-03-21-network"}},"content":"* Benchmarking: We performed benchmarks for the new tracing system, and started benchmarking for varying GHC RTS configurations.\\n* New tracing: Backwards compatibility with legacy tracer nomenclature has been merged; we\'re currently improving documentation and creating setup guidelines for end users.\\n* Analysis pipeline: Our refined metrics PR has been merged. We\'re working on including variance analysis to our reporting machinery.\\n* Infrastructure: Support for Conway genesis in our workbench has been merged. At the moment, we\'re laying the groundwork for enabling GHC 9.2 in our benchmarks.\\n* Open Sourcing: The API demo has reached prototype phase; work on documenting the API and providing exemplifying use cases is ongoing.\\n* Nomad backend: The nomad-exec based task driver has been merged. The backend has been equipped with the capability for genesis distribution via S3 bucket.\\n\\n# Performance\\n\\n### New tracing\\nThe new tracing system has undergone various benchmarking runs with variance analysis, and comparison to a baseline using legacy tracing. We could observe\\na slight shift in the resource usage profile from memory to CPU, but no regressions in block propagation metrics. Variance was observed to be notably smaller, which gives the new system a much better predictability. From this angle, we consider the new system fit for production use.\\n\\n### GHC RTS parametrization\\nWe\'re currently prerforming various runs on the cluster to explore the space of different GHC RTS settings for running nodes. The main focus lies\\non different configurations for the garbage collector, as well as increasing the number of CPU cores the node may use.\\n\\n### Open Sourcing\\nOur API demo has reached prototype stage, and operates on live data from the production database. Making use of the experience gained, we\'re refining version 1 of the API to provide optimized usability, and creating documentation that both is descriptive of the API endpoints, and focuses on practical, exemplary use cases.\\n\\n# Tracing\\nFor the new tracing system we\'re currently undertaking an effort to multi-layered documentation: a condensed version, as well\\nas a setup guide with pragmatical focus, will be provided alongside the in-depth documentation. This effort should cater to different audiences, and provide distinct entry points\\nfor users of the new system, depending on their wants and needs. \\n\\n# Infrastructure & Analysis\\n\\n### General\\nHaving included Conway genesis in the workbench, as a next step in future-proofing out benchmarking infrastructure, we\'re laying the foundation for a switch in compiler version to GHC 9.2. Additionally, we considered variance analysis of our runs to merit inclusion into our reporting pipeling - which will\\nincrease confidence in specific metrics.\\n\\n### Nomad backend\\nWe have implemented an appropriate mechanism for genesis distribution: Only after a benchmarking cluster has been deployed successfully, genesis\\nis patched and uploaded to an AWS S3 bucket for the nodes to retrieve - as a final step before initiating the actual run. We\'re confident that this deferred approach will provide clearer evidence for genesis patches, as well as minimize startup time for all runs by factoring in deployment re-tries."},{"id":"2023-03-21-network","metadata":{"permalink":"/cardano-updates/2023-03-21-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-21-network.md","source":"@site/blog/2023-03-21-network.md","title":"Network Team Update","description":"High level summary","date":"2023-03-21T00:00:00.000Z","formattedDate":"March 21, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":1.315,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-03-21-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-03-22-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-03-17-crypto"}},"content":"## High level summary\\n\\nIn the last spring we released `cardano-node-1.35.6` with dynamic P2P\\nfunctionality.\\n\\nWe received reports from some SPOs who encountered problems with their non\\nP2P block producing nodes not being able to connect to their P2P relay.  Karl\\nKnutsson (from Cardano Foundation) reproduced this issue between two nodes (a\\nnon P2P and a P2P one) on mainnet.  Karl and the IOG Networking Team analysed\\nit and found a bug in the legacy non p2p code.  The bug is only possible to\\ntrigger with a P2P node which is binding its outbound connection port to\\na fixed IP address and port (default in p2p).  A possible solution was found.\\nFor more information see [#4465].\\n\\nWe released `cardano-ping-0.1.0.0` package to `CHaP`.  `cardano-ping` is no\\nlonger available as a standalone binary, but instead it will become part of\\n`cardano-cli` (see [#4664])\\n\\nWe are testing `cardano-node` with peer sharing functionality ([#4019]).\\n\\nWe are working on _eclipse evasion_.  We added new class of peers: big ledger\\npeers to the outbound governor, implemented tests and fixed found issues\\n([#4462]).  We also made the information if a given peer plays the role of\\na big ledger peer to the mini-protocols.  This will allow to modify\\nmini-protocol applications for such peers.   As part of this functionality we\\nrefactored some core types in the network code which simplifies exposed API.\\n\\nTogether with Moritz Angerman we started to update `io-sim` to `ghc-9.6.1` (see\\n[#73]).\\n\\nWe merged a fix of configuration of accepted connections limit in\\n`cardano-node` (see [#4902]).\\n\\n\\n[#4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[#4462]: https://github.com/input-output-hk/ouroboros-network/pull/4462\\n[#4465]: https://github.com/input-output-hk/ouroboros-network/issues/4465\\n[#4664]: https://github.com/input-output-hk/cardano-node/pull/4664\\n[#73]: https://github.com/input-output-hk/io-sim/pull/73\\n[#4902]: https://github.com/input-output-hk/cardano-node/pull/4902"},{"id":"2023-03-17-crypto","metadata":{"permalink":"/cardano-updates/2023-03-17-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-17-crypto.md","source":"@site/blog/2023-03-17-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-03-17T00:00:00.000Z","formattedDate":"March 17, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.255,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-03-17-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-03-21-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-17-hydra"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: RFP finished. Code ready for audit.\\n* cardano-base: BLS12-381\'s PR approved, only blocker is Windows\' CI. Preparing extensive testing strategy together with Plutus and Testing teams.\\n* KES agent: Working on a desing on how to use IO sim in order to allow for proper network simulation testing.\\n* Sidechains: Preparing proving system to use the curves needed for main-net PoC.  \\n## Low level summary\\n### Mithril\\n* Merged [PR#783](https://github.com/input-output-hk/mithril/pull/783)\\n* RFP for crypto audit ready.\\n### cardano-base\\n* BLS12-381 branch approved [PR#266](https://github.com/input-output-hk/cardano-base/pull/266). Blocker is Windown\'s CI. Working on it\\n* Testing strategy for BLS bindings:\\n    * Preparing test-vectors for Groth16, and simple BLS signatures\\n    * Finding community projects to help write their use cases\\n    * Designing AC, and expected tests for higher levels of development (Plutus team, E2E tests, etc)\\n* Wrote [blogpost](https://github.com/input-output-hk/blogpost_breaking_ed25519_vrf/blob/main/blog.md) on how using the same key for ed25519 and VRF completely breaks the security of both systems \\n### KES agent\\n* Started integration of sockets interface used in consensus\\n* Use that for de/ser\\n* Resolving problems with block memory in IOSim. Can\'t use withForeignPtr in IOSim\\n* Results in having to parametrise for IOSim in KES and DSIGN for testing\\n### Sidechains\\n* Prepared an API for proof generation in sidechains, with it\'s C API for integration with JVM languages.\\n* Design document and start interacting with researchers for concrete instantiation of SNARK-based ATMS.\\n* EdDSA over JubJub ready"},{"id":"2023-03-17-hydra","metadata":{"permalink":"/cardano-updates/2023-03-17-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-17-hydra.md","source":"@site/blog/2023-03-17-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-17T00:00:00.000Z","formattedDate":"March 17, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.015,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-17-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-03-17-crypto"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-03-17-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has continued work on the mainnet compatibility of the\\nhydra-node. They added a golden test suite for `hydra-plutus` scripts, added\\nsome detection of `hydra-node` misconfiguration, established a limit of 100 ADA\\nper commit and other smaller tasks to prepare for a mainnet beta release.\\n\\nNext week there will be a small team workshop to push for demonstrating a Hydra\\nHead on the Cardano mainnet, ideally just in time for the monthly review\\nmeeting. See the hydra channels on the IOG Technical Community discord server\\nfor details.\\n\\n## What did the team achieve this week\\n\\n-   Implement a 100 ADA hard-coded commit limit in the hydra-node\\n    [#763](https://github.com/input-output-hk/hydra/pull/763)\\n-   Pay back funds to faucet after smoke-test run\\n    [#773](https://github.com/input-output-hk/hydra/pull/773)\\n-   Setup custom github runner for smoke-tests on mainnet\\n    [#775](https://github.com/input-output-hk/hydra/pull/775)\\n-   Created golden tests to assure the script hash stays the same between\\n    changes [#772](https://github.com/input-output-hk/hydra/pull/772)\\n-   Removed hardcoded error codes in plutus scripts\\n    [#768](https://github.com/input-output-hk/hydra/pull/768)\\n-   Detect misconfiguration of a hydra-node given persistent state\\n    [#767](https://github.com/input-output-hk/hydra/pull/767)\\n-   Met with potential users for hydra-pay\\n-   Prepared hydra workshop\\n\\n## What are the goals of next week\\n\\n-   Hydra monthly meeting\\n-   Open a multi-party head on mainnet\\n-   Complete mainnet compatibility feature"},{"id":"2023-03-17-ledger","metadata":{"permalink":"/cardano-updates/2023-03-17-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-17-ledger.md","source":"@site/blog/2023-03-17-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-03-17T00:00:00.000Z","formattedDate":"March 17, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.415,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-03-17-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-17-hydra"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-03-16-goedel"}},"content":"## High level summary\\n\\nWe made further progress on the conway ledger era.\\nIn particular, we expanded the ledger API significantly, including lots of governance features.\\nWe also made progress on the specification and corresponding work in the Haskell implementation.\\n\\nWe also continued to integrate the latest ledger packages into cardano node and addressed\\ntechnical debt.\\n\\n## Low level summary\\n\\n### Expanded ledger API\\n\\nThe ledger API was significantly expanded to include:\\n* a lot of protocol parameter support\\n* versioning support (type level ledger eras and protocol versions)\\n* auxiliary data support\\n* many new lenses\\n* support for witnesses\\n* support for conway governance\\n\\nSee [pull-3328].\\n\\n### Conway ledger rules\\n\\nWe have made progress on the formal ledger specification for the Conway era.\\nMoreover, the corresponding Haskell updates were also completed:\\n\\n* See [pull-3339]\\n* See [pull-3326]\\n* See [pull-3330]\\n\\n### Incremental SPO/DRep stake distribution computation\\n\\nWe have a working (and correct) proof of concept for how to use the incremental lambda calculus\\nto maintain several of the stake distributions incrementally.\\nFor the per-SPO distribution, this is a performance improvement.\\nFor the (conway) per-DRep distribution, this is will allow those who have delegated their votes\\nto a DRep to have time to react to any votes that they disapprove of.\\n(Sorry, no code to share just yet, more to come.)\\n\\n### Technical debt\\n\\n* Improved CBOR testing facilities [pull-3332]\\n* GitHub actions improvement [pull-3320]\\n* Move ToJSON orphans from cardano-node [pull-3323] [pull-3338]\\n* Minor OCert improvements [pull-3327]\\n* Remove duplication [pull-3341]\\n* Enforce unique elements in CBOR sets [pull-3331] \\n\\n[pull-3320]: https://github.com/input-output-hk/cardano-ledger/pull/3320\\n[pull-3323]: https://github.com/input-output-hk/cardano-ledger/pull/3323\\n[pull-3326]: https://github.com/input-output-hk/cardano-ledger/pull/3326\\n[pull-3327]: https://github.com/input-output-hk/cardano-ledger/pull/3327\\n[pull-3328]: https://github.com/input-output-hk/cardano-ledger/pull/3328\\n[pull-3330]: https://github.com/input-output-hk/cardano-ledger/pull/3330\\n[pull-3331]: https://github.com/input-output-hk/cardano-ledger/pull/3331\\n[pull-3332]: https://github.com/input-output-hk/cardano-ledger/pull/3332\\n[pull-3338]: https://github.com/input-output-hk/cardano-ledger/pull/3338\\n[pull-3339]: https://github.com/input-output-hk/cardano-ledger/pull/3339\\n[pull-3341]: https://github.com/input-output-hk/cardano-ledger/pull/3341"},{"id":"2023-03-16-goedel","metadata":{"permalink":"/cardano-updates/2023-03-16-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-16-goedel.md","source":"@site/blog/2023-03-16-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-03-16T00:00:00.000Z","formattedDate":"March 16, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.55,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-03-16-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-03-17-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-10-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on drafts of two papers\\nimproving the deltaQ tutorial, consulting on performance design, and\\nthe final version of the Djed paper.\\n\\n## Details\\n\\n* Preparing draft of DeltaQSD algebra paper for ICE 2023\\n\\n* Successful outcome of Marlowe consultancy leading to substantial\\n  improvement in performance\\n\\n* Preparing sections on the communication language and bisimulation\\n  proofs for draft paper about verifying design refinements for\\n  distributed system design\\n\\n* Camera ready version of Djed paper under preparation"},{"id":"2023-03-10-hydra","metadata":{"permalink":"/cardano-updates/2023-03-10-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-10-hydra.md","source":"@site/blog/2023-03-10-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-10T00:00:00.000Z","formattedDate":"March 10, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.825,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-10-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-03-16-goedel"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-03-09-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team addressed issues with committing complex UTxOs into a\\nHydra Head, prepared the `hydra-node` to be run on mainnet (soon) and improved\\nthe test suite of the `hydra-plutus` scripts. The specification is constantly\\ngetting improved upon reviewer feedback on overleaf - this week the graphical\\nnotation was refined to be more transaction-focused.\\n\\n## What did the team achieve this week\\n\\n-   Clarified &ldquo;bug&rdquo; of committing UTxOs with reference scripts to a Hydra head [#737](https://github.com/input-output-hk/hydra/issues/737)\\n-   Prepare usage of `hydra-node` on mainnet by updating command line options [#715](https://github.com/input-output-hk/hydra/pull/715)\\n-   Improved our mutation test suite to all expected errors [#705](https://github.com/input-output-hk/hydra/issues/705)\\n-   Re-opened our persistent hydraw demo head on `preprod` using version `0.9.0`\\n-   Updated on-chain graphs to be more transaction-focused in the specification\\n\\n## What are the goals of next week\\n\\n-   Complete mainnet compatibility feature\\n-   Prepare the Hydra workshop\\n-   Address all todo\u2019s in the Hydra specification\\n-   Unblock the auctions project with &ldquo;commit from script&rdquo; a solution"},{"id":"2023-03-09-mithril","metadata":{"permalink":"/cardano-updates/2023-03-09-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-09-mithril.md","source":"@site/blog/2023-03-09-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-03-09T00:00:00.000Z","formattedDate":"March 9, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.42,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-03-09-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-10-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-03-08-consensus"}},"content":"## High level overview\\nThe Mithril team worked on deploying the era activation mechanism to their test networks and preparing the upgrade procedure to be implemented on the signer nodes run by the SPOs. They also refactored the state machines of the aggregator and signer nodes so that they can better handle critical errors, which lead to node panic, from recoverable errors. Additionally, the team continued the deployment of a new test network that runs on the Cardano `mainnet` and computes the stake distribution with the optimized unreleased Cardano CLI command.\\n\\nFinally, they have designed the certification of generic types of data by a Mithril network and they have started implementing its first phase. Also they fixed a bug that made the client Docker image crash at startup.\\n\\n## Low level overview\\n- Worked on the epic that implements eras behavior switch [#707](https://github.com/input-output-hk/mithril/issues/707):\\n  - Completed the deployment of the era behavior switch to the test networks [#752](https://github.com/input-output-hk/mithril/issues/752)\\n  - Completed the enhancement of datum generation for era markers [#786](https://github.com/input-output-hk/mithril/issues/786)\\n  - Worked on handling the API version with an era switch [#727](https://github.com/input-output-hk/mithril/issues/727)\\n- Worked on the epic that implements a relational store in the aggregator [#779](https://github.com/input-output-hk/mithril/issues/779):\\n  - Worked on the migration/adaptation of the `stake_pool` table [#787](https://github.com/input-output-hk/mithril/issues/787)\\n- Completed the refactoring of errors in the signer and aggregator state machines [#665](https://github.com/input-output-hk/mithril/issues/665)\\n- Worked on testing Mithril with a `mainnet` Cardano network [#777](https://github.com/input-output-hk/mithril/issues/777)\\n- Worked on fixing bugs with the Docker client image:\\n  - Fixed a bug that made the Docker client container crash at startup [#769](https://github.com/input-output-hk/mithril/issues/769)\\n  - Fixed a bug that prevented the restoration of a snapshot with a Docker client [#791](https://github.com/input-output-hk/mithril/issues/791)\\n  - Worked on testing the Docker client in the `Mithril Client multi-platform test` workflow [#794](https://github.com/input-output-hk/mithril/issues/794)"},{"id":"2023-03-08-consensus","metadata":{"permalink":"/cardano-updates/2023-03-08-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-08-consensus.md","source":"@site/blog/2023-03-08-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-03-08T00:00:00.000Z","formattedDate":"March 8, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":2.46,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-03-08-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-03-09-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-03-08-node-cli-api"}},"content":"## High level summary\\n\\nThe Consensus team continued working on refactoring and improving the UTxO-HD\\nprototype, and introducing improvements to the `lmdb` related packages. In\\nparticular we identified an opportunity to gain performance by handling locks in\\na more optimal way.\\n\\nOn the Genesis front, we sketched a mitigation for an issue that `PNSol` and\\nResearchers caught. We also came op with a road map for not only testing the\\nGenesis prototypes, but also for enriching the tests we already have.\\n\\nRegarding technical debt, next to some minor improvements, we created\\ncomponent-level micro-benchmarks for adding transactions to the mempool. The\\nresults of these benchmarks will be published in the `ouroboros-consensus` [web\\npage][oc-web-page].\\n\\nWe also finished moving the Consensus documentation to the `ouroboros-consensus`\\nrepository, released `ouroboros-consensus` `0.3.0.0`, and reduced the time\\nGitHub actions take in `ouroboros-network`.\\n\\n## Workstreams\\n\\n### UTxO HD Prototype\\n\\nWe continued working on refactoring and improving the UTxO-HD prototype. As a\\nresult of the first round of sytem-level benchmarks, we identified an\\nopportunity to optimise the way we handle locks to improve performance\\n([#4393][issue-4393]).\\n\\nAlso, we introduced several improvements to the `lmdb` related packages:\\n- [New tests][pull-19] for read-only transaction handles.\\n- [New functions][pull-18] and [data types][pull-13].\\n- [Updates][pull-11] to support improved type safety and smaller constraints in\\n  the UTxO HD prototype.\\n- Windows and MacOS [CI support][pull-8].\\n\\n### Genesis\\n\\nWe sketched out a mitigation of the issue that `PNSol` and Researchers caught in\\nthe Genesis design.\\n\\nWe came up with a road map for testing the Genesis prototypes, including early\\nmilestones that are applicable to today\'s master branch, ie tests that are\\nuseful before Genesis, and that will be nicely enriched when we do add Genesis.\\n\\nWe developed the aforementioned tests, specifically a `QuickCheck` generator for\\nthe Honest leader schedule and one as-aggressive-as-possible Adversarial\\nleader schedule that together satisfy the Praos properties that the Consensus\\ndesign takes as invariants.\\n\\nWe investigated why the improved `ChainDB` queueing implementation behaves\\ndifferently in the baseline compared to the prototype, and we are close to\\nhaving a full picture of how the Consensus components interact during bulk sync.\\n\\n### Technical debt\\n\\nWe [created][pull-4400] component-level micro-benchmarks for adding transactions\\nto the mempool. We plan on extending this to more mempool actions and different\\ntypes of blocks. We [store][pull-4422] the benchmark data to make it available\\nto the GitHub action that [publishes][pull-12] the benchmarks results.\\n\\nOther minor improvements include:\\n\\n- [Removal][pull-4429] of `Test.Util.Classify` in favour of `Test.StateMachine.Labelling`.\\n- [Addition][pull-4423] of `-Wunused-packages` to the default `ghc-options` for Consensus\\n  packages.\\n\\n### Fostering collaboration\\n\\nWe finished moving the Consensus documentation [from][pull-4374]\\n`ouroboros-network` [to][pull-8] `ouroboros-consensus`, in preparation for\\nmigrating the code to the latter repository.\\n\\n### Support\\n\\nWe [released][pull-4412] ouroboros-consensus 0.3.0.0.\\n\\nWe [reduced][pull-4421] the load in the `ouroboros-network` GitHub actions,\\nthereby reducing the time CI jobs take.\\n\\n[issue-4393]: https://github.com/input-output-hk/ouroboros-network/issues/4393\\n[pull-19]: https://github.com/input-output-hk/lmdb-simple/pull/19\\n[pull-18]: https://github.com/input-output-hk/lmdb-simple/pull/18\\n[pull-13]: https://github.com/input-output-hk/lmdb-simple/pull/13\\n[pull-11]: https://github.com/input-output-hk/lmdb-simple/pull/11\\n[pull-8]: https://github.com/input-output-hk/haskell-lmdb/pull/8\\n[pull-4400]: https://github.com/input-output-hk/ouroboros-network/pull/4400\\n[pull-4422]: https://github.com/input-output-hk/ouroboros-network/pull/4422\\n[pull-12]: https://github.com/input-output-hk/ouroboros-consensus/pull/12\\n[pull-4429]: https://github.com/input-output-hk/ouroboros-network/pull/4429\\n[pull-4423]: https://github.com/input-output-hk/ouroboros-network/pull/4423\\n[pull-4374]: https://github.com/input-output-hk/ouroboros-network/pull/4374\\n[pull-8]: https://github.com/input-output-hk/ouroboros-consensus/pull/8\\n[pull-4412]: https://github.com/input-output-hk/ouroboros-network/pull/4412\\n[pull-4421]: https://github.com/input-output-hk/ouroboros-network/pull/4421\\n[oc-web-page]: https://input-output-hk.github.io/ouroboros-consensus/"},{"id":"2023-03-08-node-cli-api","metadata":{"permalink":"/cardano-updates/2023-03-08-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-08-node-cli-api.md","source":"@site/blog/2023-03-08-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-03-08T00:00:00.000Z","formattedDate":"March 8, 2023","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":0.795,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-03-08-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-03-08-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-03-08-performance-and-tracing"}},"content":"# 2023-03-08 - 2023-03-21\\n\\n## High level summary\\n\\nGeneral bug fixes and some refactoring \\n## Completed\\n\\n### docs\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Remove error calls in Cardano.CLI.Shelley.Run.Transaction](https://github.com/input-output-hk/cardano-node/pull/4958) \\n- [Detect invalid counter and certificate](https://github.com/input-output-hk/cardano-node/pull/4880) \\n\\n### cardano-api\\n- [Add missing imports](https://github.com/input-output-hk/cardano-node/pull/5003) \\n- [Add LedgerStateBabbage and LedgerStateConway pattern synonyms](https://github.com/input-output-hk/cardano-node/pull/5001) \\n- [Remove unnecessary functions](https://github.com/input-output-hk/cardano-node/pull/4967) \\n- [Remove duplicate scripts when building transaction body for Mary, Alonzo and Babbage](https://github.com/input-output-hk/cardano-node/pull/4953) \\n- [Reduce number of calls to toLedgerPParams](https://github.com/input-output-hk/cardano-node/pull/4903) \\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763) \\n- [Add ToJSON/FromJSON instances for ChainPoint](https://github.com/input-output-hk/cardano-node/pull/4686) \\n- [Derive Eq instance for AcquiringFailure](https://github.com/input-output-hk/cardano-node/pull/4683) \\n- [Export `fromShelleyBasedScript` from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4682) \\n- [Remove unnecessary validation of Data](https://github.com/input-output-hk/cardano-node/pull/4344) \\n- [Remove hint of \\"string\\" support for ScriptData](https://github.com/input-output-hk/cardano-node/pull/3775) \\n\\n### cardano-node\\n- [Conway hard forks on prot-ver 9](https://github.com/input-output-hk/cardano-node/pull/4988) \\n- [Reinstate -Werror for cardano-node and fix errors](https://github.com/input-output-hk/cardano-node/pull/4968) \\n- [Take all dependencies from Hackage or CHaP](https://github.com/input-output-hk/cardano-node/pull/4921) \\n- [Less verbose node-to-client and node-to-node version logging](https://github.com/input-output-hk/cardano-node/pull/4911) \\n- [Get AcceptedConnectionsLimit from the configuration](https://github.com/input-output-hk/cardano-node/pull/4902) \\n\\n### cardano-testnet\\n- [fix cardano-testnet Babbage genesis.json](https://github.com/input-output-hk/cardano-node/pull/4729)"},{"id":"2023-03-08-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-03-08-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-08-performance-and-tracing.md","source":"@site/blog/2023-03-08-performance-and-tracing.md","title":"Performance & tracing update","description":"* Release benchmarking: We again performed benchmarks for the next 1.35.6 release candidate.","date":"2023-03-08T00:00:00.000Z","formattedDate":"March 8, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":1.805,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-03-08-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-03-08-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-03-03-crypto"}},"content":"* Release benchmarking: We again performed benchmarks for the next 1.35.6 release candidate.\\n* New tracing: Backwards compatibility with legacy tracer nomenclature is being implemented to smoothe the transition for end users.\\n* Analysis pipeline: A major refinement of benchmarking metrics has been realized, along with a structural improvementents regarding metrics denomination.\\n* Open Sourcing: Work on going live with our benchmarking data has begun, as well as creating an API demo and documentation.\\n* Nomad backend: The backend was adapted to a major refactoring in workbench and is being equipped with a nomad-exec based task driver.\\n\\n\\n# Performance\\n\\n### 1.35.6 release\\nBenchmarking the second release candidate for 1.35.6 could again attest to a perfectly clean bill of health.\\n\\n### Analysis pipeline\\nOur analysis pipeline has seen an introduction of additional metrics, especially when focusing on the block producing node. They allow us to better\\ndifferentiate the timing of ledger ticking and mempool snapshotting in the forging loop - a feature that promises much deeper insight into UTxO-HD performance.\\nAdditionally, a restructuring of metrics names has been undertaken along with improvements in their data dictionary; a measure that will make benchmarking\\ndata more easily accessible.\\n\\n### Open Sourcing\\nAs a prerequisite for going live with our benchmarking data, we\'re currently working on consolidation of existing analyses, such as to provide a common foundation when accessing them externally. Additionally, we\'ve begun working on a small visualization demo and interactive API documentation. Those will enable \\nthird parties to make use of that data much more easily, by having reliable guidelines and a working example.\\n\\n# Tracing\\nThe new tracing system is being outfitted with a comprehensive mapping of its structure to the legacy tracer nomenclature. This feature will make\\nthe switch to the new system as smooth as possible for end users, allowing them to gradually adapt their tooling without breaking any functionality in the process.\\n\\n# Infrastructure\\n\\n### Nomad backend\\nThe Nomad backend was adapted to the latest major refactoring in workbench. Work was done on making stateful Nomad clients more autonomous, which will greatly facilitate any automation building on that backend. A task driver based on nomad-exec is currently being implemented."},{"id":"2023-03-03-crypto","metadata":{"permalink":"/cardano-updates/2023-03-03-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-03-crypto.md","source":"@site/blog/2023-03-03-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-03-03T00:00:00.000Z","formattedDate":"March 3, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.155,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-03-03-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-03-08-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-03-03-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: Updated KES crate to force user to allocate buffer of bytes for the key. Include proper testing for batch mtree opening and STM batch verify. Progressed with RFP for audit.\\n* cardano-base: BLS branch is now ready for review. We are workign forward its merge. \\n* KES agent: time off of part of the team, but in general continuing with the adaptation of the KES agent with consensus codebase.\\n* Sidechains: We are exploring and starting discussion on how sidechains could leverage BLS12-381 bindings for SNARKs\\n## Low level summary\\n### Mithril\\n* Bumped to version [0.2.0](https://crates.io/crates/kes-summed-ed25519/0.2.0) the implementation of KES. Redesigned the representation of the secret key to allow user to allocate a buffer using `mlock`.\\n* Opened [PR#783](https://github.com/input-output-hk/mithril/pull/783) to update dependency\\n* Improved testing for batch opening of mtree, [PR#773](https://github.com/input-output-hk/mithril/pull/773)\\n* Improved testing for batch verification of STM sigs [PR#774](https://github.com/input-output-hk/mithril/pull/774)\\n* RFP for crypto audit almost ready.\\n### cardano-base\\n* BLS12-381 branch finally ready for review [PR#266](https://github.com/input-output-hk/cardano-base/pull/266)\\n### KES agent\\nTeam off for one week. Other progress:\\n- Learning about raw direct-bearer abstraction. An interface for sockets in consensus.\\n- use that for direct ser/deser\\n- written those syntaxes for ouroboros (coming PR)\\n- the kes agent will depend on that. \\t\\n### Sidechains\\nProgress with familiarisation of Halo2 library to write circuits."},{"id":"2023-03-03-goedel","metadata":{"permalink":"/cardano-updates/2023-03-03-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-03-goedel.md","source":"@site/blog/2023-03-03-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-03-03T00:00:00.000Z","formattedDate":"March 3, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.815,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-03-03-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-03-03-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-03-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on drafts of two papers and one\\ntechnical report, improving the deltaQ tutorial, consulting on\\nperformance design, and the Djed paper has been accepted for\\npublication.\\n\\n## Details\\n\\n* Preparing draft of DeltaQSD algebra paper for FORTE 2023\\n\\n* Extending the technical report on which the above paper is based\\n\\n* Consulting with an external company on performance engineering of Plutus contracts\\n\\n* Planning improvements and collecting material for the deltaQ\\n  tutorial based on experience with systems that manage risk at\\n  multiple timescales\\n\\n* Preparing sections on the communication language and idempontency\\n  laws for draft paper about verifying design refinements for\\n  distributed system design\\n\\n* Studying Cardano chain sync protocol\\n\\n* \\"Djed: A Formally Verified Crypto-Backed Autonomous Stablecoin\\n  Protocol\\" has been accepted for publication at IEEE ICBC 2023"},{"id":"2023-03-03-hydra","metadata":{"permalink":"/cardano-updates/2023-03-03-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-03-hydra.md","source":"@site/blog/2023-03-03-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-03-03T00:00:00.000Z","formattedDate":"March 3, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.19,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-03-03-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-03-03-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-03-03-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team released version\\n[0.9.0](https://github.com/input-output-hk/hydra/releases/tag/0.9.0) - a version\\nof the `hydra-node` with fully specified behavior of on-chain scripts and\\noff-chain head-logic, decreased costs for opening/closing a Head and scalable\\ncontestation deadline semantics. Check out the full release notes for details.\\n\\nFurthermore, they published the [monthly\\nreport](https://hydra.family/head-protocol/monthly/2023-03) of the Hydra project\\nand conducted a review meeting with an increasingly wider audience. The team\\nplans to extend invitations through the new Hydra\\n[#announcements](https://discord.gg/Bwdy2jNdm2) discord channel for the next\\nmonths, stay tuned!\\n\\n## What did the team achieve this week\\n\\n-   Monthly review meeting with report published [on website](https://hydra.family/head-protocol/monthly/2023-03)\\n-   Fixed smoke tests [#726](https://github.com/input-output-hk/hydra/pull/726)\\n-   Reduced the cost of opening/closing a Head (error codes [#748](https://github.com/input-output-hk/hydra/pull/748) + head reference script [#701](https://github.com/input-output-hk/hydra/pull/701))\\n-   Released version [0.9.0](https://github.com/input-output-hk/hydra/releases/tag/0.9.0)\\n-   Conducted a first experiment on mainnet compatibility [#713](https://github.com/input-output-hk/hydra/issues/713)\\n-   New discord category with [#announcements](https://discord.gg/Bwdy2jNdm2) channel\\n-   Received a demo about the Hydra for Voting project\\n-   Lightning talk on mutation-based testing (to be shared)\\n-   New [themes view](https://github.com/orgs/input-output-hk/projects/21/views/26) in on our roadmap and some rearranging as we align it with high-level objectives\\n-   Clarified things with researchers, but mostly identified action items for them\\n\\n## What are the goals of next week\\n\\n-   Redraw transaction graphs and address TODOs specification\\n-   Run hydraw with 0.9.0 on preprod\\n-   Make smoke tests on mainnet possible\\n-   Groom the explorer item\\n-   Unblock the auctions projecth with &ldquo;commit from script&rdquo; a solution"},{"id":"2023-03-03-ledger","metadata":{"permalink":"/cardano-updates/2023-03-03-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-03-ledger.md","source":"@site/blog/2023-03-03-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-03-03T00:00:00.000Z","formattedDate":"March 3, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.57,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-03-03-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-03-03-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-03-02-network"}},"content":"## High level summary\\n\\nWe have focused the last two weeks on CIP-1694, integration of the last several months of ledger\\nwork into consensus and node, and testing infrastrutcture that we will use in the conway ledger era.\\n\\n## Low level summary\\n\\n### Conway rules\\n\\nWe made a major update to the conway era so that the implementation is now in sync with the spec\\nwith respect to the ratification and enactment logic.\\n\\nSee the notes in [pull-3291] for more details.\\n\\n### Constraint based generators\\n\\nThis week we hit a major milestone in our efforts to build out better property based testing\\nsupport for the main ledger properties.\\nThe new constraint based generators can now generate full ledger states with what is probably\\nvery close to the real constraints (if anything, it is under constrained).\\nNext we will work on generating a transaction in the context of a ledger state, which would allow\\nus to actually start using these generators for real tests.\\n\\nSee [pull-3219].\\n\\n### Preparing a release, now with proper versioning\\n\\nAfter quite some time, we are ready to release a version of ledger that will work with a new\\nversion of consensus, using CHaPs.\\n\\nSee [pull-3308].\\n\\n### Technical debt\\n\\n* We cleaned up the redeemer serialization code (to prevent future mistakes). See [pull-3269].\\n* We added a note to the Alonzo spec, specifying that the transaction inputs are\\n  lexicographically ordered in the Plutus script context. See [pull-3306].\\n* We fixed a problem with the address deserialiazation\\n  (we mistakenly fixed a bug in the Babbage era which cannot be fixed until Conway).\\n  See [pull-3307].\\n* We fixed a problem with our nix build. See [pull-3311].\\n* We fixed a problem with our `NoThunks` tests. See [pull-3310].\\n* We improved our nightly tests. See [pull-3316].\\n\\n[pull-3219]: https://github.com/input-output-hk/cardano-ledger/pull/3219\\n[pull-3269]: https://github.com/input-output-hk/cardano-ledger/pull/3269\\n[pull-3291]: https://github.com/input-output-hk/cardano-ledger/pull/3291\\n[pull-3306]: https://github.com/input-output-hk/cardano-ledger/pull/3306\\n[pull-3307]: https://github.com/input-output-hk/cardano-ledger/pull/3307\\n[pull-3308]: https://github.com/input-output-hk/cardano-ledger/pull/3308\\n[pull-3310]: https://github.com/input-output-hk/cardano-ledger/pull/3310\\n[pull-3311]: https://github.com/input-output-hk/cardano-ledger/pull/3311\\n[pull-3316]: https://github.com/input-output-hk/cardano-ledger/pull/3316"},{"id":"2023-03-02-network","metadata":{"permalink":"/cardano-updates/2023-03-02-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-03-02-network.md","source":"@site/blog/2023-03-02-network.md","title":"Network Team Update","description":"High level summary","date":"2023-03-02T00:00:00.000Z","formattedDate":"March 2, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":1.85,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-03-02-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-03-03-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-02-24-hydra"}},"content":"## High level summary\\n\\nIn the current sprint the networking team focused on fixing bugs and pushing\\nforward implementation of eclipse evasion.  We also found a bug in our\\nsimulation testing setup (in integration of test node).  We also overviewed the\\nwork on extending handshake protocol which is delivered by Galois Inc.\\n\\nWe published `ouroboros-network-0.4.0.1` and\\n`ouroboros-network-protocols-0.3.0.0` to [CHaP][PR #147].\\n\\nWe also fixed a bug in `cardano-node` which results in not being able to\\nconfigure inbound connection limits, see [PR #4902].\\n\\nTogether with Karl Knutsson (CF) we realised an issue in `cardano-cli`: it\'s\\nvalidation of DNS names, IP address & ports when registering a stake pool\\nshould be more strict to protect against common mistakes which we identified on\\nthe chain.  See [issue #4929].\\n\\n## Detailed work log\\n\\nIn [PR #4385] we fixed two bugs in peer state actions.  First one results in\\na busy loop if demotion from hot to warm times outs.  This busy loop is\\neventually exited when mux exits (we reported this in our previous report).\\nThis fix made it to `1.35.6` release as well.\\n\\nIn addition the [PR #4385] also fixes another bug which results in `hot -> warm\\n-> hot` demotion / promotion busy loop.\\n\\nThe [PR #4385] also fixed a bug in a node only used in simulation which\\nresulted in not using `chain-sync` or `block-fetch` mini-protocols.  In the\\nreview process, we realised that the header-body split in the simulated node\\nrequires further work (see [PR #4419], which is under review).\\n\\nThe [PR #4385] also extend our generators, which together with the above fix,\\ncover the `hot -> warm -> hot` demotion / promotion busy loop.\\n\\nIn [PR #4419] we introduce a `ChainDB` for our simulation node, which plays\\nsimilar role to `ChainDB` in the `ouroboros-consensus`: a persistent (across\\nsimulated restarts) store of blocks which does chain selection.  This ensures\\nthat the simulated node is using `block-fetch` to download blocks announced by\\n`chain-sync` mini-protocol.\\n\\nWe also made progress with reviewing [PR #4019] - peer sharing.\\n\\nWe also fixed [issue #4370] - a connection manager test failure, see [PR #4384].\\n\\n[PR #147]: https://github.com/input-output-hk/cardano-haskell-packages/pull/147\\n[PR #4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[PR #4384]: https://github.com/input-output-hk/ouroboros-network/pull/4384\\n[PR #4385]: https://github.com/input-output-hk/ouroboros-network/pull/4385\\n[PR #4419]: https://github.com/input-output-hk/ouroboros-network/pull/4419\\n[PR #4902]: https://github.com/input-output-hk/cardano-node/pull/4902\\n[issue #4370]: https://github.com/input-output-hk/ouroboros-network/issues/4370\\n[issue #4929]: https://github.com/input-output-hk/cardano-node/issues/4929"},{"id":"2023-02-24-hydra","metadata":{"permalink":"/cardano-updates/2023-02-24-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-24-hydra.md","source":"@site/blog/2023-02-24-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-02-24T00:00:00.000Z","formattedDate":"February 24, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.93,"hasTruncateMarker":false,"authors":[{"name":"Franco Testagrossa","title":"Hydra Software Engineer","url":"https://github.com/ffakenz","imageURL":"https://github.com/ffakenz.png","key":"ffakenz"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-02-24-hydra","authors":"ffakenz","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-03-02-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-02-23-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team continue closing many gaps and aligning the\\nimplementation with the specification. More over, they have groomed a plan to\\nmake Hydra Mainnet compatible. Also, they continue moving forward with the\\ninternal auditing and have published some auditing guidelines to receive\\ncontributions from the community.\\n\\n## What did the team achieve this week\\n\\n- Completed [#452](https://github.com/input-output-hk/hydra/issues/452) (what is\\n  remaining in there)\\n- Aligned the Head protocol logic implementation with the specification\\n- Completed full minting policy implementation and spec\\n  [#720](https://github.com/input-output-hk/hydra/issues/720)\\n- Clarified message authentication with researchers\\n- Groomed what is left to do for Mainnet compatibility\\n  [#713](https://github.com/input-output-hk/hydra/issues/713) and drafted a\\n  0.10.0 version\\n- Added a tutorial by [@perturbing](https://github.com/perturbing/) to the\\n  website [LINK](https://hydra.family/head-protocol/docs/tutorial/)\\n- Published auditing guidelines\\n  [LINK](https://hydra.family/head-protocol/audit-guidelines)\\n- Made hydra-node work for macos\\n  [#746](https://github.com/input-output-hk/hydra/issues/746) and added support\\n  for building on aarch64\\n  [#673](https://github.com/input-output-hk/hydra/issues/673)\\n- Met with a potential customer of Hydra for Payments\\n\\n## What are the goals of next week\\n\\n- Have the monthly review meeting incl. the report\\n- Have smoke tests fixed and running regularly\\n- Release 0.9.0 with updated scripts\\n- Redraw transaction graphs for specification"},{"id":"2023-02-23-mithril","metadata":{"permalink":"/cardano-updates/2023-02-23-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-23-mithril.md","source":"@site/blog/2023-02-23-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-02-23T00:00:00.000Z","formattedDate":"February 23, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.47,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-02-23-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-02-24-hydra"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-02-23-performance-and-tracing"}},"content":"## High level overview\\nThe Mithril team released a new [`2306.0`](https://github.com/input-output-hk/mithril/releases/tag/2306.0) distribution that implements minor fixes and updates and completes the wiring of the era activation markers reader into the signer and aggregator nodes. They also designed an event store in the aggregator and completed its implementation as a monitoring solution to provide figures for deployment rates of versions on signer nodes before activating an era switch. Additionally, the team created a dedicated command on their nodes\u2019 CLI that allows generating and signing an era marker\u2019s payload to be stored on the Cardano chain, as well as creating dynamic cases for the end-to-end tests they run on the CI.\\n\\n## Low level overview\\n- Released the new distribution [`2306.0`](https://github.com/input-output-hk/mithril/releases/tag/2306.0)\\n- Completed the epic that implements signer versions deployment monitoring [#718](https://github.com/input-output-hk/mithril/issues/718):\\n  - Completed the implementation an event producer/consumer via channel [#738](https://github.com/input-output-hk/mithril/issues/738)\\n  - Completed the creation of a database and its configuration to save the events on the consumer side [#740](https://github.com/input-output-hk/mithril/issues/740)\\n  - Completed the creation of events and sending them on the channel on the producer side [#741](https://github.com/input-output-hk/mithril/issues/741)\\n  - Completed the creation of the signer registration event [#742](https://github.com/input-output-hk/mithril/issues/742)\\n  - Completed the creation a query to extract the node versions stakes distribution [#743](https://github.com/input-output-hk/mithril/issues/743)\\n- Worked on the epic that implements eras behavior switch [#707](https://github.com/input-output-hk/mithril/issues/707):\\n  - Completed the loading of era reader adapters from config in the signer and the aggregator [#732](https://github.com/input-output-hk/mithril/issues/732)\\n  - Completed the implementation of an era cli command in the aggregator [#755](https://github.com/input-output-hk/mithril/issues/755)\\n  - Completed the implementation of a dynamic matrix of cases in CI end to end tests [#760](https://github.com/input-output-hk/mithril/issues/760)\\n- Fixed some bugs:\\n  - Fixed the unsupported `unixepoch()` function [#757](https://github.com/input-output-hk/mithril/issues/757)\\n  - Fixed the problem that prevented some signers from signing on the `testing-preview` network [#730](https://github.com/input-output-hk/mithril/issues/730)\\n  - Update SQLite version to `3.40` in aggregator infrastructure [#765](https://github.com/input-output-hk/mithril/issues/765)"},{"id":"2023-02-23-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-02-23-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-23-performance-and-tracing.md","source":"@site/blog/2023-02-23-performance-and-tracing.md","title":"Performance & tracing update","description":"* SECP benchmarking: we concluded our benchmarking runs and analyses of the new SECP primitives for the Valentine hard-fork.","date":"2023-02-23T00:00:00.000Z","formattedDate":"February 23, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":2.245,"hasTruncateMarker":false,"authors":[{"name":"Michael Karg","title":"Performance and Tracing Team Lead","url":"https://github.com/mgmeier","imageURL":"https://github.com/mgmeier.png","key":"mgmeier"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-02-23-performance-and-tracing","authors":"mgmeier","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-02-23-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-02-22-consensus"}},"content":"* SECP benchmarking: we concluded our benchmarking runs and analyses of the new SECP primitives for the Valentine hard-fork.\\n* Release benchmarking: we performed a round of benchmarks for the 1.35.6 release.\\n* UTxO-HD benchmarking: we performed first runs for UTxO-HD and are currently refining the benchmarking setup.\\n* New tracing: for better accessibility, the new tracing system is being outfitted with introspective capabilities.\\n* Infrastructure: with the Nomad cloud workbench backend we were able to perform our first test cluster runs successfully on SRE infrastructure.\\n* Infrastructure: the initial NixOps workbench backend has been completed; a PR containing this work, along with many quality-of-life improvements of our tooling, got merged.\\n\\n# Performance\\n\\n### SECP\\n1. For SECP, we settled on a fixed tx count per block, while simultaneously spending as much as possible of the block budget. Thus we were able to minimize the impact of per-SC-call overhead.\\n2. The final runs were performed with various fractions, e.g. half, of the current block budget to ascertain how these workloads would fare compared to a value-only run.\\n3. The SECP machinery and profiles are currently being generalized into an approach to aim for very specific aspects of a smart contract for benchmarking. \\n\\n### UTxO-HD\\n1. After analyzing initial UTxO-HD runs, it turned out that mempool snapshotting had to be throttled for benchmarking; it affects a lock that UTxO-HD had to introduce into the forging loop.\\n2. We\'re currently adapting the benchmark setup to that, and will then perform a new combination of baseline and UTxO-HD runs.\\n\\n### 1.35.6 release\\nBenchmarking the 1.35.6 release candidate could attest to a perfectly clean bill of health.\\n\\n# Tracing\\nWork on the new tracing system\'s introspective capabilites is ongoing: Immediate use cases of the new API include being able to statically validate generated tracer documentation, as well as providing information of a specific tracing setup in the node via traces themselves. These features will make the new system both more robust, and more accessible.\\n\\n# Infrastructure\\n\\n### Nomad backend\\n1. Work on the cloud deployment capability of the Nomad workbench backend continued; for testing we can automate multiple Nomad clients.\\n2. Locality assumptions were removed and job monitoring was refactored.\\n3. To facilitate directly-executable derivations, Nomad Job specification files are now self contained with GitHub references and configs needed to run a cluster.\\n4. We\'re currently evaluating different options for genesis distribution in said cluster.\\n\\n### NixOps backend\\nThe NixOps workbench backend has reached an initial functional stage. Consequently, the relevant PR was merged. It also contained many improvements to our analysis tooling, as well as a structural overhaul of workbench itself. We consider this an important step of future-proofing our benchmarking machinery."},{"id":"2023-02-22-consensus","metadata":{"permalink":"/cardano-updates/2023-02-22-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-22-consensus.md","source":"@site/blog/2023-02-22-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-02-22T00:00:00.000Z","formattedDate":"February 22, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":2.45,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-02-22-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-02-23-performance-and-tracing"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-02-22-node-cli-api"}},"content":"## High level summary\\n\\nDuring the past two weeks we got the results from the system level benchmarks\\nfor UTxO HD. They showed a substantial performance regression, so we spent some\\ntime analyzing the results. We found out the frequency at which ledger snapshots\\nwere taken was too high, so we requested the benchmarking team a new run with a\\nmore realistic snapshotting policy. We continued refactoring and improving the\\nprototype, and we released UTxO-HD related packages to CHaP.\\n\\nWe met with IOG researchers and networking specialists to discuss the Genesis\\ndesign, which was well received. We continued working on testing and\\nbenchmarking different Genesis prototypes.\\n\\nWe are also working on solving a test failure related to iterators. This work\\nderived in several improvements such as better documentation, a framework for\\nwriting unit (and regression) tests, and the possibility of debugging\\n`QuickCheck` counter examples in the REPL.\\n\\nFinally, we released `ouroboros-consensus` 0.2.0.0 and\\n`ouroboros-consensus-cardano` 0.3.0.0 to CHaP\\n\\n## Workstreams \\n\\n### UTxO HD Prototype \\n\\nWe got the results of the first system level benchmarks for UTxO HD. They seemed\\nto indicate a significant regression in performance. After looking into the\\nbenchmark logs we found that the benchmark runs took ledger state snapshots too\\noften, due to the default snapshotting policy depending on `k`, and `k` being so\\nsmall in the benchmark runs. Therefore, the next step is to re-run the\\nbenchmarks with a snapshotting policy that more closely resembles the one from\\nmainnet.\\n\\nAt the same time, we continued refactoring and cleaning up the prototype. \\n\\nAlso, we prepared the `anti-diff` packages (`fingertree-rm`, `diff-containers`,\\n`simple-semigroupoids`) and the `lmdb` related packages (`cardano-lmdb` and\\n`cardano-lmdb-simple`) to [CHaP][chap].\\n\\n### Genesis\\n\\nThe Genesis design was presented to the IOG researchers and Peter Thompson from\\nNSol. It was well received. They pointed out one blindspot, but we think it\'ll\\nbe relatively simple to mitigate.\\n\\nIn parallel, we continued developing test and benchmarks for the Genesis\\nprototypes. I particular we tested and implemented a potential fix for\\n[increased ChainDB dequeue timings][increased-dequeue-timings], which partly\\nbehaved as we expected, but still needs further investigation. Also we obtained\\n[new benchmarking data][new-bench-data] for the prototype.\\n\\n### Technical debt\\n\\nRelated to [#4183][pull-4183], we developed a [DSL][pull-4379] for specifying\\n`ChainDB` unit tests. This will allow us to better understand the\\ncounter-examples returned by QuickCheck tests, and to write [regression\\ntests][pull-4383] for them. Also, we [added a module][pull-4358] to enable\\nQuickCheck counter-examples to be run on the REPL, allowing for faster debugging\\nfeedback. Also, we improved the documentation related to followers\\n([#4372][pull-4372]).\\n\\nWe are also working on a design for optimizing the way we handle blocks from the\\nfuture.\\n\\n### Support\\n\\nWe released `ouroboros-consensus` 0.2.0.0 and `ouroboros-consensus-cardano`\\n0.3.0.0 to CHaP. Remember that we decided to split the packages related to\\nConsensus into two bundles, one with the core functionality, Cardano-agnostic\\ncode, and another bundle with instantiations specific to Cardano.\\n\\n[new-bench-data]: https://github.com/input-output-hk/ouroboros-network/issues/4037#issuecomment-1434745031\\n[increased-dequeue-timings]: https://github.com/input-output-hk/ouroboros-network/issues/4037#issuecomment-1439708022\\n[chap]: https://github.com/input-output-hk/cardano-haskell-packages\\n[pull-4358]: https://github.com/input-output-hk/ouroboros-network/pull/4358\\n[pull-4183]: https://github.com/input-output-hk/ouroboros-network/issues/4183\\n[pull-4372]: https://github.com/input-output-hk/ouroboros-network/pull/4372\\n[pull-4379]: https://github.com/input-output-hk/ouroboros-network/pull/4379\\n[pull-4383]: https://github.com/input-output-hk/ouroboros-network/pull/4383"},{"id":"2023-02-22-node-cli-api","metadata":{"permalink":"/cardano-updates/2023-02-22-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-22-node-cli-api.md","source":"@site/blog/2023-02-22-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-02-22T00:00:00.000Z","formattedDate":"February 22, 2023","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.385,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-02-22-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-02-22-consensus"},"nextItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-02-21-db-sync"}},"content":"# 2023-02-22 - 2023-03-07\\n\\n## High level summary\\n\\nGeneral bug fixes \\n\\n## Completed\\n\\n### docs\\n- [Fix some markdown links](https://github.com/input-output-hk/cardano-node/pull/4882)\\n- [Update changelog with PR4788 changes](https://github.com/input-output-hk/cardano-node/pull/4881)\\n\\n### CI & project maintenance\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Fix bug in hash computation in cardano-cli genesis create-cardano](https://github.com/input-output-hk/cardano-node/pull/4761)\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)\\n- [BUGFIX] - [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Export SubmitResult from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4753)\\n\\n### cardano-api\\n- [Remove pattern Tx](https://github.com/input-output-hk/cardano-node/pull/4901)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n## Documentation\\n- [Fix path to mkfiles.sh script in documentation](https://github.com/input-output-hk/cardano-node/pull/4949)\\n\\n## CI & project mainteance\\n- [New build complete job](https://github.com/input-output-hk/cardano-node/pull/4932)\\n- [Update ouroboros-network](https://github.com/input-output-hk/cardano-node/pull/4764)\\n\\n### cardano-cli\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Better error message for query utxo on oops](https://github.com/input-output-hk/cardano-node/pull/4777)\\n- [New --node-socket-path cli option](https://github.com/input-output-hk/cardano-node/pull/4910)\\n- [Fix qKesKesKeyExpiry to not always be null](https://github.com/input-output-hk/cardano-node/pull/4909)\\n- [Detect invalid counter and certificate](https://github.com/input-output-hk/cardano-node/pull/4880)\\n- [Straight line code for tx commands](https://github.com/input-output-hk/cardano-node/pull/4823)\\n- [New cardano-cli ping command.](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Move cardano-ping from ouroboros-network to cardano-node project](https://github.com/input-output-hk/cardano-node/pull/4655)\\n\\n### cardano-api\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763)\\n- [Combinators for TxBodyCon\u017btent and related types](https://github.com/input-output-hk/cardano-node/pull/4941)\\n- [Reduce number of calls to toLedgerPParams](https://github.com/input-output-hk/cardano-node/pull/4903)\\n- [Better error message for query utxo without oops 2](https://github.com/input-output-hk/cardano-node/pull/4825)\\n\\n### cardano-node\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n- [Less verbose node-to-client and node-to-node version logging](https://github.com/input-output-hk/cardano-node/pull/4911)\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values](https://github.com/input-output-hk/cardano-node/pull/4845)\\n- [Re-enable kes-period-info test](https://github.com/input-output-hk/cardano-node/pull/4879)\\n- [Transaction debug script command](https://github.com/input-output-hk/cardano-node/pull/3783)"},{"id":"2023-02-21-db-sync","metadata":{"permalink":"/cardano-updates/2023-02-21-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-21-db-sync.md","source":"@site/blog/2023-02-21-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-02-21T00:00:00.000Z","formattedDate":"February 21, 2023","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":0.75,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-02-21-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-02-22-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-02-17-crypto"}},"content":"## High level summary\\n\\nThe db-sync team created a new tag `13.1.0.2` which is ready to release.\\nWe also investigated and had the first working UTxO-HD integration which is one\\nof the potential future risks for db-sync.\\n\\n## Low level summary\\n\\n- Integrated the UTxO-HD feauture branch in `kderme/utxo-hd-1`. This doesn\'t\\nuse the full on disk storage but keeps things in memory and the plan is to keep\\nit this way for the first iteration. The integration still has some performance\\nissues which we investigate\\n- Created tag `13.1.0.2` which upgrades the dependencies of db-sync\\n- Fixed an issue related to errors appearing in SMASH\\n[#1353](https://github.com/input-output-hk/cardano-db-sync/pull/1353)\\n- Continued with ghc-9.2 integration\\n[#1339](https://github.com/input-output-hk/cardano-db-sync/pull/1339)\\n- Worked on an new fixing procedure for\\n[#1348](https://github.com/input-output-hk/cardano-db-sync/issues/1348).\\nWe try to make these procedures work also on older schema version, without the\\nneed to migrate to newer schema, which can be very useful for fixing existing\\nsnapshots."},{"id":"2023-02-17-crypto","metadata":{"permalink":"/cardano-updates/2023-02-17-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-17-crypto.md","source":"@site/blog/2023-02-17-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.43,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-02-17-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-02-21-db-sync"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-02-17-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: Helper functions finished. Continue preparing a RFP for an audit of mithril\'s core library (decided to add audit of KES). Design proposal for viable registration.\\n* cardano-base: Praos to PraosBatchCompat ready. KES secure forgetting finished, but holding merge for delivery strategy (breaking changes). Tested real world SNARK verification on plutus.\\n* KES agent: using snockets and making things testable in IOSim\\n* MuSig2: started implementation in rust.\\n\\n## Low level summary\\n\\n### Mithril\\n* Transmute helpers merged [PR#722](https://github.com/input-output-hk/mithril/pull/722)\\n* We have progressed with the RFP document for the mithril-stm library. Progressing with description of octopus algorithm. Included KES in scope. \\n* We are working in a modification of KES to require caller to allocate the secret key buffer.\\n* Proposed a solution for signer registration of [Mithril](https://github.com/input-output-hk/mithril/wiki/Mithril-registration-procedure#cost).\\n### cardano-base\\n* Progressing with BLS12-381. Worked with plutus team to have a plutus script verifying a Groth16 [proof](https://github.com/input-output-hk/plutus/tree/kwxm/BLS12_381/prototype/plutus-benchmark/bls-benchmarks).\\n\\t* Results are promising, with using only 23% of the execution budget to verify a realistic proof. \\n\\t* Next step is to build a real world use case (and not use a dummy proof). Projects being considered are Sidechains, Hydra or Mithril.\\n* KES secure forgetting merge is being held off, due to breaking changes. We are considering handling several branches in cardano-base for this.\\n* Conversion finally merged [PR#344](https://github.com/input-output-hk/cardano-base/pull/344).\\n\\n### KES agent\\n* Figuring out how to use sockets to write directly into the file descriptor. Digging into the sockets implementation\\n* Figuring out how to go from fake file descriptor to write the raw bytes\\n\\n### MuSig2\\n* Started implementing MuSig2 in Rust using the Ristretto prime order group. Still experimental."},{"id":"2023-02-17-goedel","metadata":{"permalink":"/cardano-updates/2023-02-17-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-17-goedel.md","source":"@site/blog/2023-02-17-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.53,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-02-17-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-02-17-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-02-17-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been working on drafts of two papers and one\\ntechnical report, distributivity properties of deltaQ, and consulting\\non performance design with the Marlowe team.\\n\\n## Details\\n\\n* Processing reviews on performance engineering paper and planning\\n  paper revisions accordingly\\n\\n* Investigating distributivity properties of DeltaQ\\n\\n* Preparing sections on the thorn calculus and idempotency laws for\\n  draft paper about verifying design refinements for distributed\\n  system design\\n\\n* Consulting on performance design with Marlowe team"},{"id":"2023-02-17-hydra","metadata":{"permalink":"/cardano-updates/2023-02-17-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-17-hydra.md","source":"@site/blog/2023-02-17-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.75,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-02-17-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-02-17-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-02-17-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team completed work on dealing differently with contests\\nduring the contestation period. These will now always push out the deadline and\\nhence contestation periods are easier to pick (depending on the network a Head\\nruns on). Furthermore, they added an important acceptance test and completed\\ninternal refactoring of the protocol logic making future changes easier.\\n\\n## What did the team achieve this week\\n\\n-   Push contestation deadline on each contest [#716](https://github.com/input-output-hk/hydra/pull/716)\\n-   Wrote an acceptance (property) test &ldquo;can always close/fanout when collect is successful&rdquo;\\n-   Internal refactoring of our `HeadLogic`\\n-   Groomed remaining things from [#452](https://github.com/input-output-hk/hydra/issues/452) into dedicated features\\n\\n## What are the goals of next week\\n\\n-   Complete full minting policy [#720](https://github.com/input-output-hk/hydra/issues/720)\\n-   Release 0.9.0 with updated scripts\\n-   Plan mainnet milestone and a 0.10.0 version\\n-   Redraw transaction graphs for specification (upon feedback)\\n-   Have smoke tests fixed and running regularly"},{"id":"2023-02-17-ledger","metadata":{"permalink":"/cardano-updates/2023-02-17-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-17-ledger.md","source":"@site/blog/2023-02-17-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":2.33,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-02-17-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-02-17-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-02-17-network"}},"content":"## High level summary\\n\\nThis past two weeks saw many months worth of ledger changes integrated with the `cardano-base`\\nand `ouroboros-network` repositories.\\nThe vast majority of the effort involved all the changes to the ledger serialization libraries\\n(and the interplay with `cardano-base`) which now support proper versioning.\\nSupporting the conway ledger era, and in particular allowing the ledger state to transition\\nto a whole new system of governance, also played a noticeable part in the integration.\\n\\nBesides the integration work, the team continues to address technical debt, improve the\\ndocumentation, make our testing infrastructure better (such as experimenting with better\\nnightly tests), and formally specifying more parts of CIP-1694.\\n\\n## Lower level summary\\n\\n### Integration work\\n\\nBelow is all the integration work completed, which will enable a release to node from\\nthe current ledger master. Many thanks to\\n[Alexey](https://github.com/lehins) for this colossal undertaking!\\n\\n* [pull-3303]\\n* [pull-3302]\\n* [pull-3300]\\n* [pull-3299]\\n* [pull-3298]\\n* [pull-3297]\\n* [pull-3292]\\n* [pull-3289]\\n* [pull-3288]\\n* [pull-3279]\\n* [pull-3282]\\n* [pull-4349]\\n\\n### Technical debt\\n\\nStarting in major protocol version 9, zero-valued multi-assets will no longer be permitted\\nin the CBOR specification. See [pull-3241].\\n\\nWe now have our `.cabal` files being checked for a consistent formatting given by\\n`cabal format` in our CI. See [pull-3286].\\n\\nWe are still experimenting with better nightly tests for our long running\\nproperty based tests. See [pull-3276] and [pull-3296].\\n\\n### Small documentation improvements\\n\\nThe hand proofs of the preservation ADA property have been added back to the\\nShelley ledger specification. See [pull-3295].\\n\\nWe have clarified how the script integrity hash is computed in the CDDL description.\\nSee [pull-3290].\\n\\n### Specifying CIP-1694\\n\\nOur new formal specifications backed by Agda have seen a lot of progress!\\nUpgrading to Agda 2.6.3 fixed our main build infrastructure problems,\\nand we no longer have to rely on our custom fork. See [pull-50].\\n\\nOur progress on formally specifying CIP-1694 can be followed here:\\n* in Agda: [pull-40]\\n* the corresponding Haskell: [pull-3291]\\n\\n### Constraint based testing\\n\\nWe are still actively working on our new constraint based property testing framework.\\nWe have nearly all of the constraints for an entire ledger state\\nhooked into generators, and tests that the generators do indeed obey the constraints.\\nThe variable count in the constraints is over 100!\\nThere is still much work to do on shrinking, making the generators faster,\\nand writing actual property tests for the ledger, but the approach still seems viable and\\nwe are hopeful that it could replace our trace generators.\\nThe WIP can be followed here: [pull-3219].\\n\\n[pull-3241]: https://github.com/input-output-hk/cardano-ledger/pull/3241\\n[pull-3295]: https://github.com/input-output-hk/cardano-ledger/pull/3295\\n[pull-3290]: https://github.com/input-output-hk/cardano-ledger/pull/3290\\n[pull-3286]: https://github.com/input-output-hk/cardano-ledger/pull/3286\\n\\n[pull-3303]: https://github.com/input-output-hk/cardano-ledger/pull/3303\\n[pull-3302]: https://github.com/input-output-hk/cardano-ledger/pull/3302\\n[pull-3300]: https://github.com/input-output-hk/cardano-ledger/pull/3300\\n[pull-3299]: https://github.com/input-output-hk/cardano-ledger/pull/3299\\n[pull-3298]: https://github.com/input-output-hk/cardano-ledger/pull/3298\\n[pull-3297]: https://github.com/input-output-hk/cardano-ledger/pull/3297\\n[pull-3292]: https://github.com/input-output-hk/cardano-ledger/pull/3292\\n[pull-3289]: https://github.com/input-output-hk/cardano-ledger/pull/3289\\n[pull-3288]: https://github.com/input-output-hk/cardano-ledger/pull/3288\\n[pull-3279]: https://github.com/input-output-hk/cardano-ledger/pull/3279\\n[pull-3282]: https://github.com/input-output-hk/cardano-ledger/pull/3282\\n[pull-3291]: https://github.com/input-output-hk/cardano-ledger/pull/3291\\n[pull-3276]: https://github.com/input-output-hk/cardano-ledger/pull/3276\\n[pull-3296]: https://github.com/input-output-hk/cardano-ledger/pull/3296\\n[pull-3219]: https://github.com/input-output-hk/cardano-ledger/pull/3219\\n\\n[pull-50]: https://github.com/input-output-hk/formal-ledger-specifications/pull/50\\n[pull-40]: https://github.com/input-output-hk/formal-ledger-specifications/pull/40\\n\\n[pull-4349]: https://github.com/input-output-hk/ouroboros-network/pull/4349"},{"id":"2023-02-17-network","metadata":{"permalink":"/cardano-updates/2023-02-17-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-17-network.md","source":"@site/blog/2023-02-17-network.md","title":"Network Team Update","description":"High level summary","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":0.865,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-02-17-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-02-17-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-02-10-hydra"}},"content":"## High level summary\\n\\nRecently QA found a bug in P2P code, which results in busy loops.  We added one\\nfix to `1.35.6` release, another one will likely be part of next release.  The\\nfirst one is already included in `ouroboros-network-0.3.0.1` release.  These\\nbugs could only affect nodes which are out of sync and thus should not impose\\nrisk on well maintained nodes on mainnet.  We also advertise to deploy at most\\none of the relays as a P2P node, which shields from possible consequences.\\n\\nWe recently finished design phase of eclipse evasion and we started\\nimplementing it (see [issue #3886] for progress).\\n\\nGalois finished implementing Handshake extension which will allow to query\\nnetwork protocol versions (see [pr #4256]).\\n\\nWe also recently released a newer set of network packages to be integrated with\\n`cardano-node` `master` branch, this includes:\\n    * monoidal-synchronisation-0.1.0.2\\n    * cardano-client-0.1.0.2\\n    * network-mux-0.3.0.0\\n    * ouroboros-network-api-0.1.0.0\\n    * ouroboros-network-protocols-0.2.0.0\\n    * ouroboros-network-testing-0.2.0.1\\n    * ouroboros-network-mock-0.1.0.0\\n    * ouroboros-network-framework-0.3.0.0\\n    * ouroboros-network-0.4.0.0 (it doesn\'t not yet include the fix we included\\n      in `0.3.0.1`)\\n\\n[issue #3886]: https://github.com/orgs/input-output-hk/projects/19/views/16?pane=issue&itemId=19819205\\n[pr #4256]: https://github.com/input-output-hk/ouroboros-network/pull/4256"},{"id":"2023-02-10-hydra","metadata":{"permalink":"/cardano-updates/2023-02-10-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-10-hydra.md","source":"@site/blog/2023-02-10-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-02-10T00:00:00.000Z","formattedDate":"February 10, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.14,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-02-10-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-02-17-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-02-09-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team closed several gaps to align the Hydra scripts\\nimplementation further with the specification. This also resulted in a slight\\nimprovement on Hydra script size and costs. They consequently analysed the\\nasymptotic complexity of collect and fanout and how they relate. Also plutus-tx\\nprofiling toolchain was evaluated and set up for future improvements on Hydra\\non-chain performance. In discussions with researchers and internal auditors,\\nthey also uncovered next steps on further securing the Head protocl using a\\n\\"full\\" minting policy.\\n\\n## What did the team achieve this week\\n\\n-   Closed several gaps to align script implementation with specification [#452](https://github.com/input-output-hk/hydra/issues/452)\\n    -   Allow contest only once [#680](https://github.com/input-output-hk/hydra/pull/680)\\n    -   Optimization through head output at index 0 [#700](https://github.com/input-output-hk/hydra/pull/700)\\n    -   Value is preserved [#702](https://github.com/input-output-hk/hydra/pull/702) + optimized exact value equality [#709](https://github.com/input-output-hk/hydra/pull/709)\\n-   Analysed asymptotic complexity of some of our scripts and set up profiling toolchain to [#721](https://github.com/input-output-hk/hydra/pull/721)\\n    ![](https://user-images.githubusercontent.com/2621189/218124686-7a85b40d-12f7-4b00-ad16-128c99f5b707.png)\\n-   Fixed our tooling around the Haskell language server\\n-   Discussed full minting policy with researchers\\n-   Started grooming \u201cwhat we need for mainnet\u201d on [this](https://github.com/input-output-hk/hydra/issues/713) idea ticket and [milestone](https://github.com/input-output-hk/hydra/milestone/8)\\n\\n## What are the goals of next week\\n\\n-   Implement full minting policy\\n-   All remaining protocol discrepancies are implemented or groomed as individual features\\n-   Ideally release 0.9.0 with updated scripts\\n-   Discuss what we need for mainnet (milestone planning)\\n-   Redraw transaction graphs for specification (upon feedback)"},{"id":"2023-02-09-mithril","metadata":{"permalink":"/cardano-updates/2023-02-09-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-09-mithril.md","source":"@site/blog/2023-02-09-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-02-09T00:00:00.000Z","formattedDate":"February 9, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.01,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-02-09-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-02-10-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-02-08-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2304.1`](https://github.com/input-output-hk/mithril/releases/tag/2304.1) distribution that enables the backward/forward compatibility mechanism implemented for seamlessly rolling out soft updates to  Mithril networks. They completed the implementation of the era reader trait that powers the era switch behavior. The team finalized the development of the era reader adapter that retrieves era activation markers from transactions on the Cardano chain. They also completed the relational design of the aggregator store.\\n\\nFinally, they created new SPO nodes on the Mithril networks and upgraded the Cardano node to version `1.35.5` on their `devnet` and infrastructure.\\n\\n## Low level overview\\n- Released the new distribution [`2304.1`](https://github.com/input-output-hk/mithril/releases/tag/2304.1)\\n- Fixed a bug that prevented some signers to sign with `2304.0-prerelease` [#716](https://github.com/input-output-hk/mithril/issues/716)\\n- Completed the implementation of an `EraChecker` that checks if an era is active [#708](https://github.com/input-output-hk/mithril/issues/708)\\n- Completed the implementation of an `EraReader` that gathers era activation data [#709](https://github.com/input-output-hk/mithril/issues/709)\\n- Completed the implementation of an `EraReader` adapter with on chain transaction as source [#710](https://github.com/input-output-hk/mithril/issues/710)\\n- Completed the relational design of the aggregator store [#476](https://github.com/input-output-hk/mithril/issues/476)\\n- Completed adding a new SPO on the `testing-preview` network [#729](https://github.com/input-output-hk/mithril/issues/729)\\n- Completed the upgrade of the Cardano node to `1.35.5` [#725](https://github.com/input-output-hk/mithril/issues/725)\\n- Fixed flakiness in the CI [#734](https://github.com/input-output-hk/mithril/issues/734)"},{"id":"2023-02-08-consensus","metadata":{"permalink":"/cardano-updates/2023-02-08-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-08-consensus.md","source":"@site/blog/2023-02-08-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-02-08T00:00:00.000Z","formattedDate":"February 8, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":1.5,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-02-08-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-02-09-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-02-08-node-cli-api"}},"content":"## High level summary\\n\\nWe continue refactoring the UTxO HD prototype while we wait for the system level\\nbenchmarks. We have created a new repository that contains the `anti-diff`\\npackages used in this prototype.\\n\\nOn the Genesis front, we are preparing another meeting with the researchers to\\naudit the implementation design, and we continued working on basic tests and\\nsimplifications.\\n\\nDuring the past two weeks we also introduced two new tools. One for dumping CBOR\\nencoded blocks to JSON, and another to serve a local immutable DB.\\n\\n## Workstreams \\n\\n### UTxO HD Prototype \\n\\nWe are in the process of refactoring the UTxO HD prototype, while we wait for\\nthe system level benchmarks to confirm if the performance of the prototype is\\nsatisfactory.\\n\\nWe also set up a repository for the [`anti-diff`][anti-diff] package, which\\nrequired us to refactor the code, write documentation, and prepare a release to\\n[CHaP][chap].\\n\\n### Genesis\\n\\nWe worked on [basic tests][issue-4347] for the _Limit on Eagerness_ property of\\nGenesis. We also introduced further robustness and simplifications in the\\nGenesis Density governor. Finally, we developed a presentation to engage again\\nwith the researchers on our Genesis implementation design.\\n\\n### Technical debt\\n\\n### Fostering collaboration \\n\\nWe are in the process of [polishing][pull-6] the `ouroboros-consensus`\\ndocumentation site, which we will use a the entry point for Consensus related\\ndocumentation. The first version will not be complete, but we plan on\\nsystematically improving it.\\n\\n### Support\\n\\nWe [added a tool][pull-4335] to `ouroboros-consensus-cardano-tools` which allows\\nto dump the Chain DB blocks or any given CBOR encoded blocks as JSON.\\n\\nWe also added [another tool][pull-4339] that serves an existing immutable DB via\\nBlockFetch and ChainSync. This tool can help in assisting our local benchmarking\\nefforts (for instance Genesis\' ChainSync jumping prototype).\\n\\n\\n[pull-6]: https://github.com/input-output-hk/ouroboros-consensus/pull/6\\n[pull-4335]: https://github.com/input-output-hk/ouroboros-network/pull/4335\\n[pull-4339]: https://github.com/input-output-hk/ouroboros-network/pull/4339 \\n[issue-4347]: https://github.com/input-output-hk/ouroboros-network/issues/4347\\n[anti-diff]: https://github.com/input-output-hk/anti-diffs\\n[chap]: https://github.com/input-output-hk/cardano-haskell-packages"},{"id":"2023-02-08-node-cli-api","metadata":{"permalink":"/cardano-updates/2023-02-08-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-08-node-cli-api.md","source":"@site/blog/2023-02-08-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-02-08T00:00:00.000Z","formattedDate":"February 8, 2023","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.095,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-02-08-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-02-08-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-02-08-performance-and-tracing"}},"content":"# 2023-02-08 - 2023-02-21\\n\\n## High level summary\\nMore maintenance and resolving raised issues.\\n\\n## Completed\\n\\n### docs\\n\\n### CI & project maintenance\\n- [Remove use of multiline literals](https://github.com/input-output-hk/cardano-node/pull/4889)\\n- [Markdown links CI check](https://github.com/input-output-hk/cardano-node/pull/4775)\\n- [Date ranges for copyright](https://github.com/input-output-hk/cardano-node/pull/4755)\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Re-add support for decoding GenesisExtendedKey text envelope](https://github.com/input-output-hk/cardano-node/pull/4894)\\n- [Disallow empty cost model for create update proposal](https://github.com/input-output-hk/cardano-node/pull/4885)\\n- [Refactor code using onLeft and onNothing](https://github.com/input-output-hk/cardano-node/pull/4815)\\n\\n### cardano-api\\n- [Simplify SerialiseAsRawBytes type class](https://github.com/input-output-hk/cardano-node/pull/4876)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n## CI & project mainteance\\n\\n### cardano-cli\\n- [Fix bug in hash computation in cardano-cli genesis create-cardano](https://github.com/input-output-hk/cardano-node/pull/4761)\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)\\n- [BUGFIX] - [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Better error message for query utxo on oops](https://github.com/input-output-hk/cardano-node/pull/4777)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763)\\n- [Export SubmitResult from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4753)\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values](https://github.com/input-output-hk/cardano-node/pull/4845)"},{"id":"2023-02-08-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-02-08-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-08-performance-and-tracing.md","source":"@site/blog/2023-02-08-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-02-08T00:00:00.000Z","formattedDate":"February 8, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":2.445,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-02-08-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-02-08-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-02-03-crypto"}},"content":"## High level summary\\n\\n1. SECP benchmarking:  we ran several rounds of SECP benchmarks, refining the benchmark setup as we discovered the properties of the system.  After formulating an initial suggested change to the protocol parameters, we\'re currently running what we consider the final benchmark, to validate the underlying assumptions.\\n2. Release benchmarking:  we\'ve performed a round of benchmarks for the hotfix 1.35 release update and initiated the 1.35.6 benchmarks.\\n3. New tracing:  the improvement in the tracing API, with the underlying restructuring, was completed and merged into the node.\\n4. New tracing:  before going live, we\'re performing the documentation update, as well as reworking the end user migration guide.\\n5. Open sourcing:  the benchmarking data publishing has been completed and deployed.  After populating it with relevant benchmark data and providing basic user documentation we can go live.\\n6. Infrastructure:  the cloud workbench backend is progressing well, the networking aspects of multi-region deployment are currently being worked on.\\n7. Infrastructure:  the NixOps workbench backend is still being worked on, as part of migration from cardano-ops and benchmarking infrastructure unification.\\n\\n## Performance\\n\\nWe are approaching the end of a chain of SECP benchmarks, as we gradually eliminated deficiencies in the setup as we were discovering them and answering newly appearing questions:\\n\\n- we improved the tx/block filling strategy in the generator, to maximise the per-block utilisation of resources and so better approximate the worst-case,\\n- after a discovery of what looked like significant per-SC-call overhead, we again tweaked the the tx/block filling strategy,\\n- finally, we\'re redoing all benchmarks together with a value-only run against the backdrop of Mainnet-sized datasets, to balance the suggested adjustment.  That also ran into difficulties wrt. limitations of our benchmarking hardware.\\n\\nIn addition, we started benchmarks of the 1.35.6 release.\\n\\n## Tracing\\n\\nA rework of the new tracing system\'s internals and API was merged.  It extended the system with introspection, which enabled a range of improvements, some of which were implemented along the way.\\n\\nSpecifically, we were able to completely short-cut processing of messages generated by the tracers that were made provably ineffective by current tracing configuration.  Further, now ongoing work enabled by the introspection facilities, includes static validation of documentation and enhanced node state reporting.\\n\\n## Infrastructure\\n\\nOn the opensourcing/transparency front, the benchmark data publishing machinery was finally fully assembled and put online.  As resources permit, we\'ll work on populating it with benchmarking data, preparing basic documentation and engaging the stakeholders.\\n\\nThe work on the cloud deployment capability of the Nomad workbench backend continued with focus on setting up inter-node networking and removal of locality assumptions.  A major step besides those, was completion of a switch-over to the directly-executable derivations, which eliminate the need for creation and distribution of images -- thereby increasing the speed of deployment.\\n\\nThe Nixops workbench backend progressed steadily, reaching minimal deployment capability.  The remaining parts are proper shared configuration generation, and porting of the run control functionality from cardano-ops."},{"id":"2023-02-03-crypto","metadata":{"permalink":"/cardano-updates/2023-02-03-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-03-crypto.md","source":"@site/blog/2023-02-03-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-02-03T00:00:00.000Z","formattedDate":"February 3, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":2.47,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-02-03-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-02-08-performance-and-tracing"},"nextItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-02-03-goedel"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: We are creating helper functions to single out the usage of unsafe to facilitate auditing. We are also preparing a RFP for an audit of mithril\'s core library. Exploring future paths of mithril. \\n* cardano-base: Decision of whether to continue with BLS12-381 or switch curves. Conversion Praos to PraosBatchCompat ready, as well as KES secure forgetting.  \\n* KES agent: using snockets and making things testable in IOSim \\n* MuSig2: GH actions updated for checking the files whether they end with an empty line. Also, we reorganized the library.\\n\\n## Low level summary\\n\\n### Mithril\\n* Given that removing the usage of transmute really affects the benchmarks, we decided to group all unsafe functions to facilitate auditing [PR#722](https://github.com/input-output-hk/mithril/pull/722)\\n* We have progressed with the RFP document for the mithril-stm library. We are documenting the differences with respect with the original paper.\\n* We are exploring possible paths of how mithril could be used \'as-a-service\'. Other projects such as sidechains or Catalyst would benefit of such a service. We are at a very early stage of brainstorming how it could work.\\n### cardano-base\\n* There has been a very thorough discussion with potential users of the BLS12-381 bindings if that is the best curve. We have considered alternatives such as Pasta curves, Pluto-Eris or BLS12-377, and considering it\'s trade-offs. Seems that the most interesting curve to have on main-net is still 381. \\n* The team is gaining expertise in SNARKs to be able to experiment with them, and conclude whether the bindings will allow for SNARK verification on main-net in a timely manner.\\n* The update VRF [PR#341](https://github.com/input-output-hk/cardano-base/pull/341) is finally merged, and we are ready to merge [PR#344](https://github.com/input-output-hk/cardano-base/pull/344), which implements conversion functions from the compatible types between Praos and PraosBatchCompat.\\n\\n### KES agent\\n* Use of snockets to send the data directly from the socket to secure memory. \\n* We realized that in order for the DirectSerialise / DirectDeserialise classes to work against IOSim, we have to generalize a bunch of additional primitives\\n* Our plans are to: (1) Split up MonadSodium into separate typeclasses, each capturing a more sensible concern; (2) Rename those typeclasses to something that reflects their nature better.\\n\\n### MuSig2\\nThe GitHub Action [linelint](https://github.com/fernandrone/linelint) is used to check the files.\\n* A new job for linting is added to the file `/.github/workflows/ci.yml`. The rules are configured in the file `/.github/workflows/.linelint.yml`. Some files from the configuration of `libsecp` were failing, so in the rules in `.linelint.yml` the failing files are denoted to be ignored by the linter.\\n* Folders are reorganized. We created a folder to handle the example. This folder includes the `examplemusig2.c`, a distinct `config.h`, and `helper.c`. The example is enhanced by implementing the functions in the helper for the configuration given in `config.h`.  The number of messages is different than the tests. The example is made more generic to run with a loop."},{"id":"2023-02-03-goedel","metadata":{"permalink":"/cardano-updates/2023-02-03-goedel","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-03-goedel.md","source":"@site/blog/2023-02-03-goedel.md","title":"Goedel Team Update","description":"The team works on applied research and consulting in formal methods","date":"2023-02-03T00:00:00.000Z","formattedDate":"February 3, 2023","tags":[{"label":"goedel","permalink":"/cardano-updates/tags/goedel"}],"readingTime":0.57,"hasTruncateMarker":false,"authors":[{"name":"James Chapman","title":"Head of Formal Methods","url":"https://github.com/jmchapman","imageURL":"https://github.com/jmchapman.png","key":"jmchapman"}],"frontMatter":{"title":"Goedel Team Update","slug":"2023-02-03-goedel","authors":"jmchapman","tags":["goedel"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-02-03-crypto"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-02-03-hydra"}},"content":"The team works on applied research and consulting in formal methods\\nthat is directly applicable to evidence based engineering in Core Tech\\nand beyond.\\n\\n## High level summary\\n\\nThis sprint the team has been preparing several papers for peer review\\nand knowledge sharing and consulting within IO and the community.\\n\\n## Details\\n\\n* R&D Seminar on experience participating in a member based organisation\\n* Full day tutorial on performance engineering presented at HiPEAC\\n  2023 conference\\n* Finished preparing and submitted a paper on performance engineering\\n  to an ACM workshop\\n* Preparing a draft paper for future submission about verifying design\\n  refinements for distributed system design\\n* Consulting on performance design of other IO projects"},{"id":"2023-02-03-hydra","metadata":{"permalink":"/cardano-updates/2023-02-03-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-03-hydra.md","source":"@site/blog/2023-02-03-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-02-03T00:00:00.000Z","formattedDate":"February 3, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.12,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-02-03-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Goedel Team Update","permalink":"/cardano-updates/2023-02-03-goedel"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-02-02-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team completed the Hydra specification with a section about\\nrollbacks and updated graphs\\n([#448](https://github.com/input-output-hk/hydra/issues/448)). In a next step,\\nthe specification will be made more approachable and an open standard. They\\nimproved their `hydra-cluster` tool to launch a local `--devnet` sandbox\\nenvironment and continued aligning the `hydra-plutus` scripts with the\\nspecification by hardening the checks on `close` and `contest` transactions.\\n\\n## What did the team achieve this week\\n\\n- Completed the specification with a section about rollbacks and updated graphs\\n    [#448](https://github.com/input-output-hk/hydra/issues/448), with a follow-up on making it more approachable and an open standard.\\n- Continued spec review with internal auditor and incorporated changes.\\n- Talked to TxPipe about how Demeter and Hydra could work together\\n- The `hydra-cluster` executable can be used to launch a local `--devnet` sandbox environment.\\n- Reproduced the \u201chead being stuck on network outage\u201d bug\\n    - relates to what liveness guarantees we can / want to give on the protocol level and needs to be discussed.\\n- Progressed with higher velocity by addressing more and more gaps [#677](https://github.com/input-output-hk/hydra/pull/677)\\n\\n## What are the goals of next week\\n\\n- Upstream our JSON instances to the ledger\\n- Close all transaction security related on-chain gaps\\n- Ideally release 0.9.0 with updated scripts\\n- Groom & plan (or not) protocol changes yielded from specification discussions -> updated roadmap"},{"id":"2023-02-02-ledger","metadata":{"permalink":"/cardano-updates/2023-02-02-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-02-02-ledger.md","source":"@site/blog/2023-02-02-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-02-02T00:00:00.000Z","formattedDate":"February 2, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.23,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-02-02-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-02-03-hydra"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-01-27-hydra"}},"content":"## High level summary\\n\\nMuch of the work the past two weeks involved integration efforts,\\ncleaning up and debugging some serialization issues,\\nadding tests, and work on large projects that are still ongoing.\\nWe also released a CIP this week that aims to make the ledger\\na registered CIP category.\\n\\n## Lower level summary\\n\\n### Ledger evolution CIP\\n\\nWe published a\\n[CIP](https://github.com/cardano-foundation/CIPs/pull/456)\\nthat will make the Cardano ledger a registered category of the CIP process.\\n\\n### Serialization issues\\n\\nWe had previously thought that we had found a serialization problem with the redeemers,\\nbut it turned out to just be particularly confusing code.\\nWe have now clarified the issue for the future.\\n\\nSee [pull-3263], [pull-3269], and [pull-3268].\\n\\nStarting in protocol version 9, we will no longer accept duplicate keys in CBOR maps.\\n\\nSee [pull-3277].\\n\\n### New tests\\n\\nWe added a new property test suite for some of our custom containers.\\n\\nSee [pull-3270].\\n\\n### Progress on a better cost model serialization situation.\\n\\nWe are still working our way through [issue-2902].\\nTowards this end, we are now properly gating the new flexible encoders\\nuntil version 9.\\n\\nSee [pull-3274].\\n\\n### Nightly tests\\n\\nWe are still experimenting with moving more CI actions to GitHub actions.\\n\\nSee [pull-3276].\\n\\n### Constraint based generators\\n\\nWe continue to add to our proof of concept for constraint based generators.\\nSee the previous ledger update for more information about this project.\\n\\n[pull-3263]: https://github.com/input-output-hk/cardano-ledger/pull/3263\\n[pull-3268]: https://github.com/input-output-hk/cardano-ledger/pull/3268\\n[pull-3269]: https://github.com/input-output-hk/cardano-ledger/pull/3269\\n[pull-3270]: https://github.com/input-output-hk/cardano-ledger/pull/3270\\n[pull-3274]: https://github.com/input-output-hk/cardano-ledger/pull/3274\\n[pull-3277]: https://github.com/input-output-hk/cardano-ledger/pull/3277\\n[pull-3276]: https://github.com/input-output-hk/cardano-ledger/pull/3276\\n[issue-2902]: https://github.com/input-output-hk/cardano-ledger/issues/2902"},{"id":"2023-01-27-hydra","metadata":{"permalink":"/cardano-updates/2023-01-27-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-27-hydra.md","source":"@site/blog/2023-01-27-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-01-27T00:00:00.000Z","formattedDate":"January 27, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.945,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-01-27-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-02-02-ledger"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-01-26-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team had a monthly review meeting with their stakeholders,\\ncontributors and interested people from the community. The monthly repot for\\n[January 2023](https://hydra.family/head-protocol/monthly/2023-01) is a digest\\nof the things presented and also includes a summary of the meeting. The Hydra\\nspecification was getting discussed and the team is incorporating suggested\\nchanges of reviewers. Last but not least, they compute and publish script\\ninformation on every PR and also on the\\n[website](https://hydra.family/head-protocol/benchmarks/transaction-cost/#script-summary)\\nnow.\\n\\n## What did the team achieve this week\\n\\n-   Had the monthly review meeting with a broader audience\\n-   Published the monthly report for [January 2023](https://hydra.family/head-protocol/monthly/2023-01)\\n-   Reviewed the spec and discussed individual aborts with researchers\\n-   Compute and publish script information along benchmarks on every PR and [website](https://hydra.family/head-protocol/benchmarks/transaction-cost/#script-summary)\\n\\n## What are the goals of next week\\n\\n-   Add rollback section to Hydra spec, update pictures and publish it as part of repository\\n-   Discuss bigger spec findings (full minting policy, individual aborts, split fanout) as change/pull requests on the spec in the repository.\\n-   Groom & plan actions required for a maintainable Head explorer + break down &ldquo;align gaps&rdquo; feature."},{"id":"2023-01-26-mithril","metadata":{"permalink":"/cardano-updates/2023-01-26-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-26-mithril.md","source":"@site/blog/2023-01-26-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-01-26T00:00:00.000Z","formattedDate":"January 26, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.175,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-01-26-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-01-27-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-01-25-consensus"}},"content":"## High level overview\\nThe Mithril team released a new [`2302.0`](https://github.com/input-output-hk/mithril/releases/tag/2302.0) distribution that activates the optimization of the snapshot digest computation on the signer and aggregator nodes. They have implemented a backward/forward compatibility mechanism for handling seamless soft updates of the Mithril networks without using synchronous updates when possible. The team also worked on the proof of concept to rely on an on-chain transaction to synchronously trigger the era switch of all the signer and aggregator nodes.\\n\\nFinally, they finished upgrading the devnet, fixed the flakiness issues in the end-to-end tests of the CI, and upgraded the SPO documentation to set up a Mithril signer node.\\n\\n## Low level overview\\n- Released the new distribution [`2302.0`](https://github.com/input-output-hk/mithril/releases/tag/2302.0)\\n- Implemented a backward/forward compatibility mechanism for API messages [#688](https://github.com/input-output-hk/mithril/issues/688):\\n  - Implement the mechanism for the signer registration [#689](https://github.com/input-output-hk/mithril/issues/689)\\n  - Implement the mechanism for the signature registration [#693](https://github.com/input-output-hk/mithril/issues/693)\\n  - Implement the mechanism for epoch settings [#695](https://github.com/input-output-hk/mithril/issues/695)\\n  - Implement the mechanism for certificate pending [#696](https://github.com/input-output-hk/mithril/issues/696)\\n  - Implement the mechanism for certificate [#697](https://github.com/input-output-hk/mithril/issues/697)\\n  - Implement the mechanism for snapshots list [#698](https://github.com/input-output-hk/mithril/issues/698)\\n  - Implement the mechanism for snapshot [#699](https://github.com/input-output-hk/mithril/issues/699)\\n  - Update enforcement of API version with Semver [#705](https://github.com/input-output-hk/mithril/issues/705)\\n- Completed the PoC implementation of backward compatibility with `protobuf` [#677](https://github.com/input-output-hk/mithril/issues/677)\\n- Completed the PoC implementation of backward compatibility with `avro` [#678](https://github.com/input-output-hk/mithril/issues/678)\\n- Completed the PoC to Read/Write transaction on chain for Era activations [#672](https://github.com/input-output-hk/mithril/issues/672)\\n- Completed the upgrade Cardano devnet to 1.35.4 [#523](https://github.com/input-output-hk/mithril/issues/523)"},{"id":"2023-01-25-consensus","metadata":{"permalink":"/cardano-updates/2023-01-25-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-25-consensus.md","source":"@site/blog/2023-01-25-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-01-25T00:00:00.000Z","formattedDate":"January 25, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":2.27,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-01-25-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-01-26-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-01-25-node-cli-api"}},"content":"## High level summary\\n\\nDuring the past two weeks, the consensus team finished the testing activities\\naround the UTxO-HD prototype. This is a very important milestone which will\\nenable us to run system-level tests and benchmarks, as well as start refactoring\\nand cleaning the prototype. Regarding our Genesis workstream, we elaborated a\\nroadmap that gives an indication of the remaining work. We also continued our\\nwork on benchmarking chain-sync-jumping. We also continued working on improving\\nthe way we handle blocks from the future, and advancing the integration of the\\nnew VRF and KES crypto.\\n\\n## Workstreams \\n\\n### UTxO HD Prototype \\n\\nAs the prototype is nearing its completion, it was important to have enough\\nconfidence that we will be able to move additional parts of the ledger state\\nonto disk. We worked together with the Ledger team to [elaborate a\\nsketch][pull-4296] on how the UTxO-HD design would accommodate the migration of\\nadditional data from memory to disk. This gave us enough confidence that the\\ncurrent architecture will be extensible in the future.\\n\\nOn the testing front, we [added][pull-4274] property-based tests for the UTxO-HD\\ntype classes. \\n\\nWe also [enabled disabled components][pull-4289], and addressed several\\ntechnical debt issues:\\n\\n- Implement `splitSized` anti-diff split ([#4269][pull-4269]), and integrate it\\n  into consensus ([#4273][pull-4273]).\\n- Renaming of `peekVal` to `peekMDBVal` ([#7][pull-7]).\\n\\nWe ran ad-hoc benchmarks for syncing a chain from scratch and replaying. We\\nfound a race condition in the LMDB backing store, which [we fixed][pull-4283].\\nAfter the fix we were able to successfully run these benchmarks. The results\\nwere published by [this pull request][pull-4295].\\n\\nWe used our `db-analyser` tool to benchmark the cost of reading keys and\\nflushing values to disk. The following plot shows the duration of these disk\\noperation in relation to the main ledger operations, where we can see that the\\ncost of the former are comparatively low. The spike at the beginning of the\\ngraph is when, at the start of the Shelley era, the *entire* UTxO set is flushed\\nto disk.\\n\\n![UTxO-HD read and flush benchmarks](/images/consensus/2023-01-25-consensus-utxo-hd-read-and-flush-benchmarks.png)\\n\\nAfter months of hard work adding tests for the prototype, we are ready to run\\nend-to-end tests on the node, and system level benchmarks. This signals a very\\nimportant milestone for the UTxO-HD workstream :tada:.\\n\\n### Genesis \\n\\nWe elaborated a [high-level decomposition][genesis-roadmap] of the remaining\\nwork for Genesis. We also continued benchmarking the chain-sync-jumping\\nhappy-path.\\n\\n### Technical debt\\n\\nWe continued working on improving the way we handle blocks from the future.\\n\\n### Support \\n\\nWe completed the mapping of `Crypto` to `HeaderCrypto` and body `Crypto`.\\n`HeaderCrypto` is moved to `cardano-protocol-tpraos`. We created a draft [pull\\nrequest][pull-3262] to facilitate compiling consensus.\\n\\n[pull-4274]: https://github.com/input-output-hk/ouroboros-network/pull/4274\\n[pull-4296]: https://github.com/input-output-hk/ouroboros-network/pull/4296\\n[pull-4289]: https://github.com/input-output-hk/ouroboros-network/issues/4289\\n[pull-4295]: https://github.com/input-output-hk/ouroboros-network/pull/4295\\n[genesis-roadmap]: https://github.com/input-output-hk/ouroboros-network/blob/a626c84f6df585dd27d735eb7eec73904a1f570e/ouroboros-consensus/docs/2023-Jan-Genesis-roadmap.md\\n[pull-4269]: https://github.com/input-output-hk/ouroboros-network/pull/4269\\n[pull-4273]: https://github.com/input-output-hk/ouroboros-network/pull/4273\\n[pull-7]: https://github.com/input-output-hk/lmdb-simple/pull/7\\n[pull-4283]: https://github.com/input-output-hk/ouroboros-network/pull/4283\\n[pull-3262]: https://github.com/input-output-hk/cardano-ledger/pull/3262"},{"id":"2023-01-25-node-cli-api","metadata":{"permalink":"/cardano-updates/2023-01-25-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-25-node-cli-api.md","source":"@site/blog/2023-01-25-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2023-01-25T00:00:00.000Z","formattedDate":"January 25, 2023","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.585,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2023-01-25-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-01-25-consensus"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-01-20-crypto"}},"content":"# 2023-01-25 - 2023-02-07\\n\\n## High level summary\\nGeneral clean up (error message improvement) and focus on CI maintenance. Multiple pools now supported in the `cardano-cli query stake-snapshot` command. \\n\\n## Completed\\n\\n### docs\\n\\n### CI & project maintenance\\n- [Fix how changed files are selected in stylish-haskell CI check](https://github.com/input-output-hk/cardano-node/pull/4853)\\n- [Copyright updates](https://github.com/input-output-hk/cardano-node/pull/4755)\\n- [Remove hlint from nix required CI](https://github.com/input-output-hk/cardano-node/pull/4848)\\n- [Remove reconfigure-hlint.sh script](https://github.com/input-output-hk/cardano-node/pull/4838)\\n- [Fix hlint warnings](https://github.com/input-output-hk/cardano-node/pull/4837)\\n- [Implement ADR-2: Restructure modules for generators](https://github.com/input-output-hk/cardano-node/pull/4833)\\n- [Stylish Haskell in CI](https://github.com/input-output-hk/cardano-node/pull/4803)\\n- [Revert skip doc in ci](https://github.com/input-output-hk/cardano-node/pull/4802)\\n- [Skip CI on doc only changes](https://github.com/input-output-hk/cardano-node/pull/4800)\\n- [Skip CI if only changes are documentation](https://github.com/input-output-hk/cardano-node/pull/4792)\\n- [Build all of cardano-node in CI](https://github.com/input-output-hk/cardano-node/pull/4776)\\n- [Check cabal files in CI](https://github.com/input-output-hk/cardano-node/pull/4766)\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Straight line error handling](https://github.com/input-output-hk/cardano-node/pull/4785)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n\\n### cardano-api\\n- [New NodeToClientVersionOf typeclass](https://github.com/input-output-hk/cardano-node/pull/4787)\\n- [Remove NoImplicitPrelude from cardano-api](https://github.com/input-output-hk/cardano-node/pull/4832)\\n- [Add ReaderT of NodeToClientVersion to LocalStateQueryExpr](https://github.com/input-output-hk/cardano-node/pull/4809)\\n- [Use hoistMaybe](https://github.com/input-output-hk/cardano-node/pull/4808)\\n- [Better error message for query utxo without oops](https://github.com/input-output-hk/cardano-node/pull/4788)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n- [New query stake-snapshot integration test](https://github.com/input-output-hk/cardano-node/pull/4805)\\n- [Make leadership-schedule test less flaky](https://github.com/input-output-hk/cardano-node/pull/4671)\\n\\n## In Progress\\n\\n## CI & project mainteance\\n\\n### cardano-cli\\n- [Fix bug in hash computation in cardano-cli genesis create-cardano](https://github.com/input-output-hk/cardano-node/pull/4761)\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)\\n- [BUGFIX] - [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Better error message for query utxo on oops](https://github.com/input-output-hk/cardano-node/pull/4777)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763)\\n- [Export SubmitResult from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4753)\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values](https://github.com/input-output-hk/cardano-node/pull/4845)"},{"id":"2023-01-20-crypto","metadata":{"permalink":"/cardano-updates/2023-01-20-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-20-crypto.md","source":"@site/blog/2023-01-20-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-01-20T00:00:00.000Z","formattedDate":"January 20, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.65,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-01-20-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2023-01-25-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-01-20-hydra"}},"content":"## High level summary\\nThe open fronts that the crypto team is working on are:\\n* Mithril: We explored whether some uses of `transmute` could be removed, but it resulted in considerable regression.  \\n* cardano-base: Some issues with Nix are blocking merge of VRF update. BLS12-381 benchmarks where quite satisfactory. Next steps will be defined by cryptography strategic decision. \\n* KES agent: An inconsistency between `contra-tracer` available in hackage and the one in cardano-haskell delayed our progress. Now we are adapting PRs to the `contra-tracer` used by consensus. \\n\\n## Low level summary\\n\\n### Mithril\\n* We removed the usage of transmute in mithril-core (and exchanged it with ser/deser, as unfortunately there is no other way with the library we currently use). However, the benchmarks showed an important regression - ~30% worse on average [PR#675](https://github.com/input-output-hk/mithril/pull/675). We decided to keep transmute, but instead group all its usage in helper functions, to facilitate auditing. \\n* We are writing a RFP for the audit of the core library. \\n### cardano-base\\n* A problem with Nix is blocking merge of [PR#341](https://github.com/input-output-hk/cardano-base/pull/341)\\n* Plutus team ran [benchmarks](https://github.com/input-output-hk/plutus/blob/kwxm/BLS12_381/prototype/plutus-benchmark/bls-benchmarks/Main.hs) of BLS12-381 built-ins. The results are satisfactory, and while we have yet not implemented SNARK verification in plutus, it all seems to point that we\'ll be able to verify some proofs in a single script execution.\\n* Team is fully digesting the Plonk paper. \\n* There\'s been a lot of discussions (with internal and external projects) regarding pairings in plutus, and what elliptic curve should be used.  \\n\\n### KES agent\\n* A little unforseen delay has been caused by a mismatch in the use of `contra-tracer`. The one in hackage and that in cardano-haskell are not compatible. Unfortunately, for secure forgetting we use that of hackage, and now realised. We are [doing the change](https://github.com/input-output-hk/cardano-base/pull/255/commits/39b2d9473aa296976825248360a73cf066065431), but still the CI is not happy.\\n* The [same](https://github.com/input-output-hk/cardano-base/pull/317/commits/39b2d9473aa296976825248360a73cf066065431) was needed for the KES agents prerequisites [PR#317](https://github.com/input-output-hk/cardano-base/pull/317).\\n* We\'ve started working with the agent itself again, upgrading the cardano-base dependency and adding ouroboros-network-framework dependency"},{"id":"2023-01-20-hydra","metadata":{"permalink":"/cardano-updates/2023-01-20-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-20-hydra.md","source":"@site/blog/2023-01-20-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-01-20T00:00:00.000Z","formattedDate":"January 20, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-01-20-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-01-20-crypto"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-01-20-network"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has been focusing on the write-up of the Hydra HeadV1\\nspecification. Of which a first version has been aggregated and is currently\\nunder review. They aligned the on-chain scripts of reimbursing funds on abort\\nlike defined in the specification, improved the mutation test framework to have\\nmore control when testing plutus scripts. The added HeadId in the API and the\\nTUI example client make `hydra-node` easier to use and a first experiment of a\\nHydra Head explorer was showing the utility of this - see what Heads exist on\\nthe `preview` network [here](http://explorer.hydra.family).\\n\\n## What did the team achieve this week\\n\\n-   HeadId to API and display in the TUI [#678](https://github.com/input-output-hk/hydra/pull/678)\\n-   Experiment of creating a hydra explorer, first result hosted [here](http://explorer.hydra.family)\\n-   Improved mutation framework allowing to fail for the right reason [#679](https://github.com/input-output-hk/hydra/pull/679)\\n-   Correctly reimburse funds in abort (matching the spec) [#670](https://github.com/input-output-hk/hydra/pull/670)\\n-   Finished a first write-up of the Hydra HeadV1 spec: [Read it on overleaf](https://www.overleaf.com/read/bbqzmptcxryj) ([Communication channels](https://github.com/input-output-hk/hydra/blob/master/SUPPORT.md) for feedback)\\n\\n## What are the goals of next week\\n\\n-   Monthly review meeting with a broader audience\\n-   Groom & plan actions required for a maintainable Head explorer\\n-   Break \u201calign gaps\u201d feature into smaller chunks (at least on- /off-chain) and groom it\\n-   Review the spec & discuss individual aborts with researchers (a bigger open question)"},{"id":"2023-01-20-network","metadata":{"permalink":"/cardano-updates/2023-01-20-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-20-network.md","source":"@site/blog/2023-01-20-network.md","title":"Network Team Update","description":"High level summary","date":"2023-01-20T00:00:00.000Z","formattedDate":"January 20, 2023","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"},{"label":"release","permalink":"/cardano-updates/tags/release"}],"readingTime":1.045,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2023-01-20-network","authors":"coot","tags":["network","release"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-01-20-hydra"},"nextItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-01-20-sre"}},"content":"## High level summary\\n\\nWe have been working towards `cardano-node-1.35.5` release.  QA & benchmarking\\nteams gave a green light for the release, and we made decent progress with some\\nCI problem which we encountered on the way ([PR #4612]). We are also working on\\npeer sharing, making improvements in our testing infrastructure, reducing\\ntechnical debt and making progress towards `io-sim-1.0.0.0`. Galois is making\\nprogress on Handshake improvements.\\n\\n## Low level summary\\n\\nOur diffusion simulation network now includes a mixed network of `initiator\\nonly` and `initiator and responder` nodes. [issue #4222]\\n\\nWe are now reviewing the [peer sharing pull request][PR #4019].\\n\\nWe are also reviewing pull request which introduces handshake query flag. [PR #4256]\\n\\nWe fixed a bug in our network simulator.  The bug was triggered when a node\\ndied when performing a simultaneous TCP open (a corner case of a corner case!). [PR #4265]\\n\\nWe also refactored `Snocket` interface and removed the bearer construction from\\nits methods. [PR #4260]\\n\\nWe are working towards releasing `io-sim-1.0.0.0` on Hackage, which includes\\nreviewing two PRs: [PR #57] and [PR #60] as well as writing an announcement\\nblog post.  \\n\\n[PR #4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[PR #4256]: https://github.com/input-output-hk/ouroboros-network/pull/4256\\n[PR #4260]: https://github.com/input-output-hk/ouroboros-network/pull/4260\\n[PR #4265]: https://github.com/input-output-hk/ouroboros-network/pull/4265\\n[PR #4612]: https://github.com/input-output-hk/cardano-node/pull/4612\\n[PR #57]: https://github.com/input-output-hk/io-sim/pull/57\\n[PR #60]: https://github.com/input-output-hk/io-sim/pull/60\\n[issue #4222]: https://github.com/input-output-hk/ouroboros-network/issues/4222"},{"id":"2023-01-20-sre","metadata":{"permalink":"/cardano-updates/2023-01-20-sre","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-20-sre.md","source":"@site/blog/2023-01-20-sre.md","title":"SRE Team Update","description":"High level summary","date":"2023-01-20T00:00:00.000Z","formattedDate":"January 20, 2023","tags":[{"label":"sre","permalink":"/cardano-updates/tags/sre"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"Michael Fellinger","title":"SRE Team Lead","url":"https://github.com/manveru","imageURL":"https://github.com/manveru.png","key":"manveru"}],"frontMatter":{"title":"SRE Team Update","slug":"2023-01-20-sre","authors":"manveru","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2023-01-20-network"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-01-19-ledger"}},"content":"## High level summary\\n\\nThe SRE team continues work on Cicero, Tullia, and Bitte, as well as providing\\nsupport for cardano-world.\\n\\n## Lower level summary\\n\\n### Cicero\\n\\n- Fixed various race conditions around transformers.\\n- Brought our CI up to date.\\n- Migrated to the Nomad exec driver with Nix support for many actions.\\n- Moved Nix builds to the Nomad clients for much better cache locality.\\n- Ongoing work on vastly improving the action matching and evaluation speed.\\n- \\n\\n### Tullia\\n\\n- Made it easier to support cloning from a PR\'s fork\\n- Update to latest std\\n- Add workaround for cgroup issue: [nomad#12877](https://github.com/hashicorp/nomad/issues/12877)\\n- github preset: add `github.ci.remote` and `(read|get)Repository` functions\\n- Fix various issues around CUE handling\\n\\n### Bitte\\n\\n- Upgrade to NixOS 22.11\\n- Prototype usage of [Colmena](https://colmena.cli.rs) for deploys instead of [deploy-rs](https://github.com/serokell/deploy-rs)\\n- Finalized work on Equinix Metal support\\n- Prototype better secrets management with [ragenix](https://github.com/yaxitech/ragenix) instead of [sops-nix](https://github.com/Mic92/sops-nix)\\n- Improve CI and bring it up to date\\n\\n### cardano-world\\n\\n- Fixd various OOM issues on preview and preprod\\n- Rotated KES keys on preview and preprod\\n- Optimize mainnet db-sync to cope with higher load\\n- Fix an issue where PostgreSQL would fail after a reboot\\n\\n### bitte-world\\n\\n- Updated to NixOS 22.11\\n\\n### ci-world\\n\\n- Updated to NixOS 22.11\\n- Added Equnix cluster\\n- Improve caching of Nix builds"},{"id":"2023-01-19-ledger","metadata":{"permalink":"/cardano-updates/2023-01-19-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-19-ledger.md","source":"@site/blog/2023-01-19-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-01-19T00:00:00.000Z","formattedDate":"January 19, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":2.665,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-01-19-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2023-01-20-sre"},"nextItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-01-14-db-sync"}},"content":"## High level summary\\n\\nThe ledger team completed some preliminary ground work in preparation for CIP-1694\\n(restructuring the ledger state),\\nfixed the PDF hosting problem (mostly the formal specs),\\nbuilt out more of the new user-friendly ledger API,\\nfinished a proof of concept for constraint-based generators for property tests\\n(with the hopes of being able to replace our trace generators one day),\\nand addressed technical debt.\\n\\n## Lower level summary\\n\\n### Restructuring the ledger state\\n\\nThe existing governance structures will be replace in the conway ledger era,\\nas described in CIP-1694.\\nIn particular, the ledger rules will be restructured as follows:\\n\\n\\n```\\n   BBODY\\n    |\\n    |-------------------------------|\\n    v                               v\\n   TICK                            LEDGERS\\n    |                               |\\n    |---------|                     |\\n    v         v                     v\\n   RUPD     ~NEWEPOCH~            ~LEDGER~\\n              |                     |\\n              |----------|          |--------|-------------------|-----------|\\n              v          v                   v                   v           v\\n            ~EPOCH~     +ENACTMENT+         DELEGS              UTXOW       +TALLY+\\n              |                              |                   |\\n              |---------|------------|       v                   |\\n              v         v            v      DELPL                v\\n             SNAP      POOLREAP    -UPEC-    |                  UTXO\\n                                             |--------|          |\\n                                             v        v          v\\n                                            POOL     DELEG     ~UTXOS~\\n\\n-..- Removed\\n+..+ Added\\n~..~ Modified\\n```\\n\\nMoreover, the ledger state will also be restructured in accordance with the new rules.\\nIn the conway code, we have now removed UPEC, added TALLY, and stubbed ENACTMENT.\\nWe have also adapted all the data structures in the ledger state.\\n\\nSee:\\n\\n* [pull-3216]\\n\\n### PDF hosting\\n\\nWe now build all of our PDFs using a GitHub action which is triggered by pushing a tag\\nwith a specific form, `cardano-ledger-spec-YYYY-MM-DD`.\\nThe action creates a GitHub release containing the PDFs.\\nThe links in the main ledger README now point to the PDFs in the latest release.\\n\\nSee:\\n\\n* [pull-3245]\\n* [pull-3260]\\n\\n### Powering the new ledger API\\n\\nWe have now removed all the `HasField` instances from the protocol parameter data types,\\nand replaced them with lenses.\\nThis is probably the last major restructuring that the ledger team will do on the code base\\nfor the API for a while\\n(the Plutus tools team will be working on it next, see [here](https://github.com/input-output-hk/cardano-ledger/projects/5)).\\nWe also added a new helpful function `ensureMinCoinTxOut`.\\n\\nSee:\\n\\n* [pull-3242]\\n* [pull-3248]\\n\\n### Constraint-based generators\\n\\nOur largest scale property tests generate an initial ledger state and a long sequence of valid blocks\\nwhich span several epochs, mimicking a real network.\\nThese tests are, in theory, excellent for checking properties.\\nThey are, however, very difficult to maintain and are not as random as we would like\\n(a lot of bias has to be introduced to keep the ledger state in enough order to keep generating blocks).\\n\\nWe would like to switch to tests which instead generate a random ledger state representative\\nof not just an initial state, generate a single random valid block, and then test our properties.\\nThe hope is that these will be much more random and easier to maintain.\\n\\nWe have finished a proof of concept are encouraged that this approach could work!\\n\\nSee:\\n\\n* [pull-3219]\\n\\n### Technical debt\\n\\n* [pull-3244] massive CI speedup\\n* [pull-3249] better types for fees in the protocol parameters\\n* [pull-3264] move our annotator code to the `cardano-ledger-binary` package where it belongs\\n* [pull-3239] move the `Wdrls` type to the `Core` module.\\n\\n\\n[pull-3244]: https://github.com/input-output-hk/cardano-ledger/pull/3244\\n[pull-3245]: https://github.com/input-output-hk/cardano-ledger/pull/3245\\n[pull-3248]: https://github.com/input-output-hk/cardano-ledger/pull/3248\\n[pull-3249]: https://github.com/input-output-hk/cardano-ledger/pull/3249\\n[pull-3260]: https://github.com/input-output-hk/cardano-ledger/pull/3260\\n[pull-3264]: https://github.com/input-output-hk/cardano-ledger/pull/3264\\n[pull-3239]: https://github.com/input-output-hk/cardano-ledger/pull/3239\\n[pull-3242]: https://github.com/input-output-hk/cardano-ledger/pull/3242\\n[pull-3216]: https://github.com/input-output-hk/cardano-ledger/pull/3216\\n[pull-3219]: https://github.com/input-output-hk/cardano-ledger/pull/3219"},{"id":"2023-01-14-db-sync","metadata":{"permalink":"/cardano-updates/2023-01-14-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-14-db-sync.md","source":"@site/blog/2023-01-14-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2023-01-14T00:00:00.000Z","formattedDate":"January 14, 2023","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":0.36,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2023-01-14-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-01-19-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-01-13-hydra"}},"content":"## High level summary\\n\\nAfter spending the last months on improving DBSync and releasing `13.1.0.0` the DBSync team focused\\nthe last weeks on integrating upstream changes and tech debt. This includes integrating CHaP, the\\nnew leger core and ghc-9.2.4\\n\\n## Lower level summary\\n- Integrate CHaP\\n[#1331](https://github.com/input-output-hk/cardano-db-sync/pull/1331)\\n- Integrate new ledger core `0.1.1.1` and ghc-9.2\\n[#1332](https://github.com/input-output-hk/cardano-db-sync/pull/1332)\\n- Technical debt: Add code formatter fourmolu\\n[#1334](https://github.com/input-output-hk/cardano-db-sync/pull/1334)\\n- Preparing and tracking Conway and UTxO integration"},{"id":"2023-01-13-hydra","metadata":{"permalink":"/cardano-updates/2023-01-13-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-13-hydra.md","source":"@site/blog/2023-01-13-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2023-01-13T00:00:00.000Z","formattedDate":"January 13, 2023","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.56,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2023-01-13-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2023-01-14-db-sync"},"nextItem":{"title":"Node Release Team Update","permalink":"/cardano-updates/2023-01-13-release"}},"content":"## High-level summary\\n\\nSince last weekly update before christmas, the Hydra team worked on the\\ntechnical specification, closed gaps in `hydra-plutus` scripts, made the unique\\n`headId` available to Hydra clients through the API, allow the `hydra-node` to\\nexplicitly synchronize from genesis (if configured), and fixed smaller log and\\nbuild issues reported by new users.\\n\\nBesides this, a retrospective [blog\\npost](https://cardanofoundation.org/en/news/hydra-head-protocol-an-open-source-solution-for-scalability/)\\nwas published by Matthias Benkort (CF) on Hydra, summarizing our progress made\\nin 2022 also an outlook where Hydra is headed for in 2023. Also, the team had\\nsome first sessions on the voting project with Catalyst and the CF.\\n\\nA full digest monthly digest for December 2022 can be found on the [hydra\\nwebsite](https://hydra.family/head-protocol/monthly/2022-12).\\n\\n## What did the team achieve this week\\n\\n- Had some first sessions on the voting project with Catalyst and CF\\n- Published retrospective [blog\\n  post](https://cardanofoundation.org/en/news/hydra-head-protocol-an-open-source-solution-for-scalability/)\\n  by Matthias Benkort (CF) on Hydra, summarizing our progress made in 2022 also\\n  an outlook where Hydra is headed for in 2023.\\n- Worked on the LaTeX spec for HydraHeadV1, not final or published yet - [latest\\n  version in this repository](https://github.com/ch1bo/hydra-spec).\\n- Add unique `headId` to API and hence make it available to clients.\\n- Allow `hydra-node` to explicitly synchronize from genesis using `--start-chain-from 0`.\\n- Closed gaps in `hydra-plutus` scripts\\n    - bounded transaction validity ([ADR21](https://hydra.family/head-protocol/adr/21/))\\n    - enforcing contract continuity via state token in output\\n- Fixed JSON for some logs and smaller build issues reported by new users.\\n\\n## What are the goals of next week\\n\\n- Reach out to have `hydra-tutorial` integrated.\\n- Plan the next couple of months.\\n- Complete checking reimbursing of commits in head validator.\\n- Align plutus scripts to spec and simplify them (identified some simplifications)\\n- Improve mutation framework to be sure we fail tests for the right reasons\\n- Complete the spec except the open points (<5) and also discuss them with researchers."},{"id":"2023-01-13-release","metadata":{"permalink":"/cardano-updates/2023-01-13-release","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-13-release.md","source":"@site/blog/2023-01-13-release.md","title":"Node Release Team Update","description":"Node Reelease Update","date":"2023-01-13T00:00:00.000Z","formattedDate":"January 13, 2023","tags":[{"label":"release","permalink":"/cardano-updates/tags/release"}],"readingTime":0.64,"hasTruncateMarker":false,"authors":[{"name":"Samuel Leathers","title":"Service Reliability Manager","url":"https://github.com/disassembler","imageURL":"https://github.com/disassembler.png","key":"disassembler"}],"frontMatter":{"title":"Node Release Team Update","slug":"2023-01-13-release","authors":"disassembler","tags":["release"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2023-01-13-hydra"},"nextItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2023-01-13-system-test"}},"content":"## Node Reelease Update\\n## 2022-11-02 - 2023-01-13\\n\\n### Executive Summary\\n\\nA 1.35.5 release for single relay P2P is nearly completed and should be released this month. This release is based on\\n`release/1.35` branch and does not bump cardano-ledger.\\n\\nThe team successfully integrated an interim release bump of ledger and consensus into cardano-node master.\\nThis work will not be released in a node version, but will be continued by the current dependency bump in progress.\\n\\nWe anticipate once this dependency bump is completed, regular 2 week releases will be feasible again.\\n\\nThe 1.35.4 release is being ran by more than 70% of stake pools. Planning for the mainnet hard fork date is in progress.\\n\\n### Completed\\n\\n- [Release 1.35.4](https://github.com/input-output-hk/cardano-node/releases/tag/1.35.4)\\n\\n### In Progress\\n\\n- [Release 1.35.5](https://github.com/input-output-hk/cardano-node/commits/release/1.35)\\n\\n  * [Test Status](https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.5_rc1/src_docs/source/test_results/node/tag_1_35_5_rc1.rst)"},{"id":"2023-01-13-system-test","metadata":{"permalink":"/cardano-updates/2023-01-13-system-test","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-13-system-test.md","source":"@site/blog/2023-01-13-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2023-01-13T00:00:00.000Z","formattedDate":"January 13, 2023","tags":[{"label":"system-test","permalink":"/cardano-updates/tags/system-test"}],"readingTime":0.91,"hasTruncateMarker":false,"authors":[{"name":"Dorin Solomon","title":"System Test Team Lead","url":"https://github.com/dorin100","imageURL":"https://github.com/dorin100.png","key":"dorin100"}],"frontMatter":{"title":"System Test Team Update","slug":"2023-01-13-system-test","authors":"dorin100","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"Node Release Team Update","permalink":"/cardano-updates/2023-01-13-release"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-01-12-mithril"}},"content":"## High level summary\\nDuring the last 2 weeks we did more improvements on our Test Framework, ran some sanity tests related to the _P2P Single\\nRelay_ functionality.\\n\\nWe also update the Node & DB-Sync sync tets to build with Nix as the prebuilt files are no longer available at PR level.\\n\\n## Workstreams\\n\\n### Framework improvements:\\n- extended the _cardano-node-tests_ with the ability for anybody to fork the repo and [run all our System Tests on GitHub Actions](https://input-output-hk.github.io/cardano-node-tests/readme.html)\\n- added 2 new nightly pipelines - nightly-mixed and nightly-p2p - [details here](https://input-output-hk.github.io/cardano-node-tests/test_results/nightly_system_tests.html)\\n- some optimizations on how our regression tests are scheduled on pytest workers and how cluster instances are assigned to the tests;\\n\\n`  === 743 passed, 67 skipped, 24 xfailed in 9166.64s (2:32:46) ===\\n  to\\n  === 753 passed, 67 skipped, 14 xfailed in 4654.80s (1:17:34) ===`\\n\\n### Node:\\n- ran a couple of sanity runs of CLI a& sync tests on a local branch with P2P Single Relay enabled\\n- started the preparations for testing the next tag - [details here](https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.5_rc1/src_docs/source/test_results/node/tag_1_35_5_rc1.rst)\\n\\n### DB-Sync:\\n- some improvements on db-sync sync tests"},{"id":"2023-01-12-mithril","metadata":{"permalink":"/cardano-updates/2023-01-12-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-12-mithril.md","source":"@site/blog/2023-01-12-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2023-01-12T00:00:00.000Z","formattedDate":"January 12, 2023","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.165,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2023-01-12-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2023-01-13-system-test"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-01-11-consensus"}},"content":"## High level overview\\nThe Mithril team has been designing a mechanism for handling seamless updates of the Mithril networks in case of breaking-changes that require synchronous update of the signer nodes. This design has been formalized in an [ADR](https://mithril.network/doc/adr/4). They have been working on an implementation of a proof of concept to rely on an on-chain transaction to synchronously trigger the version switch of all the signer nodes. They have also worked on implementing prototype solutions to minimize the use of breaking changes where soft updates are possible.\\n\\nFinally, they have worked on upgrading the `devnet` and fixing some flakiness in the end to end tests of the CI.\\n\\n## Low level overview\\n- Implemented the redaction of an ADR for handling graceful updates of the Mithril Network [#671](https://github.com/input-output-hk/mithril/issues/671)\\n- Worked on a proof of concept to handle backward compatibilty of exchanged messages with `protobuf` [#677](https://github.com/input-output-hk/mithril/issues/677)\\n- Worked on a proof of concept to handle backward compatibilty of exchanged messages with `avro` [#678](https://github.com/input-output-hk/mithril/issues/678)\\n- Worked on a proof of concept for reading/writing era activation markers with a Cardano chain transaction [#672](https://github.com/input-output-hk/mithril/issues/672)\\n- Worked on upgrading the Cardano node of the Mithril `devnet`, as well as fixing flakiness of the CI [#523](https://github.com/input-output-hk/mithril/issues/523)\\n- Prepared and tested the new `2302` distribution pre-release [2302.0-prerelease](https://github.com/input-output-hk/mithril/releases/tag/2302.0-prerelease)\\n- Updated the documentation for SPO to build a signer node in order to better reflect the new release process [#681](https://github.com/input-output-hk/mithril/issues/681)"},{"id":"2023-01-11-consensus","metadata":{"permalink":"/cardano-updates/2023-01-11-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-11-consensus.md","source":"@site/blog/2023-01-11-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2023-01-11T00:00:00.000Z","formattedDate":"January 11, 2023","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":2.35,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2023-01-11-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2023-01-12-mithril"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-01-11-performance-and-tracing"}},"content":"## High level summary\\n\\nThe consensus team is resuming its activities after the Christmas break. During\\nthese weeks we focused on cleaning and benchmarking the UTxO-HD prototype, and\\ndiscussing with the Ledger team the changes that might be required for the next\\niterations. The pull request that adds the Conway era is waiting for a second\\nreview round and we hope to merge it soon. On the technical debt side we are\\nlooking into a property-test failure found in the iterators. We are\\ninvestigating if this is an error in the model or in the implementation. We also\\nimproved the documentation of our testing code.\\n\\n## Workstreams \\n\\n### UTxO HD Prototype \\n\\nWe worked with the Ledger team to start preparing the next versions of UTxO-HD.\\nThe Ledger team is concerned that for the remaining maps we might need the full\\nledger state on epoch boundaries. Since the main consumer of the ledger rules is\\nConsensus, the code that requires access to a full state could be moved from the\\nledger to some Ledger-Consensus bridge. Eg. the traversal of rewards could take\\nplace in such bridge, instead of querying the ledger for the values that are\\nrequired in the epoch-transition computations.\\n\\nWe [relocated][pull-4234] some UTxO-HD definitions, in preparation for merging\\nthe prototype into `master`.\\n\\nWe also completed updated local benchmarks comparing the replay time and memory\\nconsumption of:\\n\\n- the baseline node (`f2fc76ef45647275c98634da1718290b976ff364`) \\n- the UTxO-HD node with the in-memory backend \\n- the UTxO-HD node with the LMDB backend\\n\\nThe following plot shows the results: we can see that the LMDB node barely\\nreaches 8GB of memory, but it takes 1.78 times longer to replay the chain. The\\nin-memory backend is about 30 minutes faster, but still slower than the baseline\\nversion. We are aware of this phenomenon and it is inherent to the problem of\\nmaintaining sequences of differences of the last `k` ledger states that allows\\nus to perform rollback and roll-forward. We are in the process of measuring\\nsyncing from scratch times.\\n\\n![](/images/consensus/2023-01-11-utxo-hd-replay-benchmarks.png)\\n\\nWe also [added `StaticEither` accessors][pull-4263] that helped us to simplify\\nthe UTxO-HD prototype.\\n\\n### New Conway era\\n\\nWe incorporated the feedback of the [pull request][pull-3971], and rebased this\\nbranch on top of `master`. The PR is pending a second review round and we hope\\nto merge this soon.\\n\\n### Technical debt \\n\\nWe are investigating a [property-testing failure][issue-4183] involving\\niterators. Solving this requires understanding the expected behavior of\\niterators in the counterexample found by `QuickCheck` to determine if the error\\nis in the model or in the implementation.\\n\\n### Fostering collaboration\\n\\nWe [moved][pull-4248] the contents of `docs/Testing.md` closer to the code, so that the\\nexplanations about the tests are easier to find in the relevant modules, and the\\ndocumentation is easier to keep up to date.\\n\\n[pull-4234]: https://github.com/input-output-hk/ouroboros-network/pull/4234\\n[issue-4183]: https://github.com/input-output-hk/ouroboros-network/issues/4183\\n[pull-4248]: https://github.com/input-output-hk/ouroboros-network/pull/4248\\n[pull-3971]: https://github.com/input-output-hk/ouroboros-network/pull/3971\\n[pull-4263]: https://github.com/input-output-hk/ouroboros-network/pull/4263"},{"id":"2023-01-11-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2023-01-11-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-11-performance-and-tracing.md","source":"@site/blog/2023-01-11-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2023-01-11T00:00:00.000Z","formattedDate":"January 11, 2023","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":1.865,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2023-01-11-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2023-01-11-consensus"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-01-06-crypto"}},"content":"## High level summary\\n\\nSince our last update, we focused on infrastructure work:  benchmark enablement, tracing system, benchmark environment merge and open source support:\\n\\n1. SECP benchmarking enablement is underway:  enabling SECP runs in our cardano-ops benchmarking environment is still in progress.\\n2. The new tracing system:  the improved API of the new tracing system was implemented, and we\'re now porting the tracing integration layer over.\\n3. Infrastructure:  the mainnet protocol parameter history is now encoded in the workbench profile machinery at epoch-level granularity, which gives us a systematic approach towards description of past and future benchmarks.\\n4. New benchmark deployment infrastructure:  we\'ve made some progress on Nomad deployment backend, shared by both of the data publishing and benchmarking needs.\\n5. Legacy benchmarking:  we\'ve started merging the legacy benchmark deployment infrastructure into the workbench.\\n6. Open sourcing:  the benchmarking data publishing tool was adapted to the Nomad execution environment provided by SRE, pending final deployment.\\n\\n## Performance\\n\\nThe AWS cluster infrastructure necessary for SECP benchmarking is still being worked on.\\n\\n## Tracing\\n\\nThe improved tracing internals were implemented, and we\'re now into the phase of updating the tracing integration, which is also mostly done.\\n\\n## Infrastructure\\n\\nThanks to collaboration with the DevX team, we have identified and pursued a design that would enable our Nomad workbench backend to execute deployments of both the benchmarking cluster and our data publishing components.\\n\\nOn the benchmark parametrisation front, we have eliminated a long-standing weakness in the way we were specifying the protocol parameters.\\nWe now have a very clear and granular method to keep track of protocol parameter evolution -- e.g. the mainnet history changes are now tracked at epoch granularity, while also allowing for systematically described change overlays.  This makes the benchmark profile definition much more clear and robust against mistakes.\\n\\nWe also started a merge of the legacy benchmarking environment (based on cardano-ops) into the workbench.  The separation between environments was too costly, causing us to reimplement any benchmarking change twice -- first, during development, in the workbench, then in cardano-ops.  In addition, maintenance of compatibility code was incurring additional costs, slowing benchmark data analysis development.\\nOnce this merge is complete, this will allow us to sharply cut the benchmark development cycle and overheads."},{"id":"2023-01-06-crypto","metadata":{"permalink":"/cardano-updates/2023-01-06-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-06-crypto.md","source":"@site/blog/2023-01-06-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2023-01-06T00:00:00.000Z","formattedDate":"January 6, 2023","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.46,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2023-01-06-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2023-01-11-performance-and-tracing"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-01-05-ledger"}},"content":"## High level summary\\nThe four open fronts that the crypto team is working on are:\\n* MuSig2: The API features (error handling) has been merged. \\n* Mithril: We update the KES library and published it in crates.io. Similarly, we merged batch verification of STM signatures.\\n* cardano-base: VRF and BLS are still waiting to be merged, as we have some problems with the CI. \\n* KES agent: We keep progressing with KES secure forgetting implementation.\\n\\nWe also started working in the cryptography engineering handbook, which will be a cross team effort.\\n\\n## Low level summary\\n### MuSig2\\n* Merged the more granular error handling mechanism [PR#33](https://github.com/input-output-hk/musig2/pull/33)\\n\\n### Mithril\\n* Adapted KES library so that sk contains its corresponding period, making key handling easier. Avoid making unnecessary copies of the KES key. Expose function to get associated period. All included in [Version 0.1.1](https://github.com/input-output-hk/kes/commit/9de00835ed354cbb8d37838f6cee57930ea9fd3d), which was published in [crates.io](https://crates.io/crates/kes-summed-ed25519). \\n* Updated new KES format to mithril library [PR 674](https://github.com/input-output-hk/mithril/pull/674)\\n* We implemeneted batch verification of stm signatures, which improves the benchmarks for mithril chain-sync [PR 531](https://github.com/input-output-hk/mithril/pull/531)\\n* We keep progressing on reducing the use of `transmute` in `mithril-stm`.\\n### cardano-base\\n* Nothing new to report. Still working in merging these PRs. We are only missing nix merge of [PR#520](https://github.com/input-output-hk/iohk-nix/pull/520) and the updates on VRF will be merged.\\n\\n### KES agent\\n* We keep progressing in the secure forgetting PR. Added NoThunks tests, error hasndling to detect when mlocking fails, resolved bugs due to incorrect usage of mlocked memory and wrote more efficient tests [PR#255](https://github.com/input-output-hk/cardano-base/pull/255#issuecomment-1362601518).\\n\\n### Cryptography handbook\\nWe have made available the (temporary) cryptography handbook https://input-output-hk.github.io/cryptography_spec/, and included the description of some primitives (Ed25519, KES and VRF). This is an ongoing effort, and we plan on further expanding the list of available primitives."},{"id":"2023-01-05-ledger","metadata":{"permalink":"/cardano-updates/2023-01-05-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-01-05-ledger.md","source":"@site/blog/2023-01-05-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2023-01-05T00:00:00.000Z","formattedDate":"January 5, 2023","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":4.44,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2023-01-05-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2023-01-06-crypto"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-12-28-node-cli-api"}},"content":"## High level summary\\n\\nThe ledger team finished up the remaining work for tracking individual depots,\\nbuilt out the new Conway era transaction body (in line with CIP-1694),\\ngreatly reduce some problematically large calculations on the epoch boundary,\\nand addressed technical debt.\\n\\n## Lower level summary\\n\\n### Finishing the deposit tracking\\n\\nThe initial work on the individual deposit tracking project focused only on correctness.\\nAs this is a large data structure\\n(since its size is linear with respect to the number of registered stake credentials),\\nit is very important that we also reduce the memory overhead as much as possible.\\nFortunately, we were able to add very little overhead for the deposits by using existing\\nefficient data structures. The extra tracking now only incurs one word (8 bytes)\\nper registered stake credential.\\n\\nSee:\\n* [pull-3195]\\n* [pull-3202]\\n* [pull-3217]\\n\\n### New Conway era transaction\\n\\nWe implemented the Conway era transaction body, which is in line with CIP-1694.\\nNote that the Conway era implements, losing speaking, the parts of CIP-1694 that are not\\nrelated to the liquid democracy (the \\"DReps\\").\\nThe new transaction body adds the new governance actions and votes,\\nwhile also deprecating the old governance structures\\n(i.e. the old protocol parameter updates and MIR certificates).\\n\\nWe also now have the wire specification (CDDL file) and serialization code in place.\\nThe wire specification is still subject to change while we work on the Conway era,\\nbut it is now usable and has proper testing support\\n(so that, for example, the serialization round-trips, etc).\\n\\nSee:\\n* [pull-3176]\\n* [pull-3226]\\n\\n### Optimizing the `TICKF` transition\\n\\nEvery since the release of the Shelley era, we have been working to reduce the computational load\\nplaced on the node by the ledger at the epoch boundary.\\nWhile still not perfect, we believe that we have removed one of the final problematically long\\nepoch boundary computations that exacerbate situations like\\n[this](https://github.com/input-output-hk/cardano-node/issues/4421).\\nIn particular, the problem involved the way in which the consensus layer obtains a view of the\\nledger for the purposes of checking the leadership schedule in a new epoch.\\nWe implemented a stopgap measure which now only incurs a single multi-second cost once per epoch\\ninstead of potentially several multi-second costs while the networks waits for the first block\\nof a new epoch to be minted.\\n\\nSee:\\n* An [ADR](https://github.com/input-output-hk/cardano-ledger/blob/ea48d4815946c4f35239eb41815fe06cd6ffec2e/docs/adr/2022-12-12_007-optimize-ledger-view.md) about the decision.\\n* [pull-3209]\\n\\n### Technical debt\\n\\nWe closed the year out with a lot of reduction to the technical debt!\\n\\n#### Improved ledger event\\n\\n* [pull-3212] - The ledger events are not guaranteed to appear in any given order within a block.\\n  For this reason, motivated by the use case in db-sync, the `TotalDeposits` event now\\n  includes a transaction ID and emits the _change_ in deposits instead of the value.\\n\\n#### Improved type saftey\\n\\n* [pull-3208] - We replaced `NominalDiffTime` with a newtype wrapper. The problem was that our CBOR\\n  encoders and decoders were using the wrong level of precision, having to due with with\\n  the Shelley genesis file. We removed the potential problem with a newtype wrapper.\\n* [pull-3167] - We now use a GADT to ensure consistency of the Plutus language in the types\\n  for `TransactionScriptFailure` and `PlutusDebug`.\\n\\n#### Code/Module organization\\n\\n* [pull-3175] - The Allegra and Mary eras had an unusual relationship in our codebase,\\n  due to the uncertainly of release dates while we were implementing them.\\n  In particular, they were coupled in way that is different from the rest of the code base.\\n  With hindsight on our side, we split the combined `shelley-ma` Haskell package into two\\n  separate ledger era packages, which is now consistent with the rest of the repository\\n  and module structure.\\n* [pull-3184] - We created a core test sub-library, cleaning up a lot of our property test\\n  generator code.\\n* [pull-3210] - We moved the `KeyPair` type to the test library. Outside of testing,\\n  the ledger does not need to deal with signing keys, and since this is a topic that\\n  deserves the utmost care, it is best to make it clear that our use of signing keys\\n  is only for testing.\\n* [pull-3229] - We split the `Cardano.Ledger.Alonzo.Data` module, which is more consistent with the rest\\n  of the codebase.\\n\\n#### Revert pointer address deprecation\\n\\nThanks to one of our excellent internal auditors,\\n[@jmhrpr](https://github.com/jmhrpr),\\nwe now have a better plan for deprecating pointer addresses.\\nThis meant that we had to revert the previous work to deprecate them.\\n\\nSee:\\n* [issue-3161]\\n* [pull-3215]\\n\\n#### Miscellaneous\\n\\n* [pull-3205] - We removed deprecated type synonyms.\\n* [pull-3218] - We cleaned up the address deserialization.\\n* [pull-3223] - We fixed faulty address deserialization tests.\\n* [pull-3222] - We switched to a general type family `TxOut` from concrete ones,\\n  reducing many constraints.\\n* [pull-3224] - `ShelleyGenesis` is now parameterized by crypto instead of by era.\\n* [pull-3170] - We set the cabal-version to 3.0 in our projects.\\n* [pull-3172] - We removed the now useless `EncodeMint`/`DecodeMint` classes.\\n* [pull-3225] - We switch from [ormolu](https://hackage.haskell.org/package/ormolu) to \\n  [fourmolu](https://hackage.haskell.org/package/fourmolu).\\n  The reason was to be able to finally have more diff friendly code!\\n\\n[issue-3161]: https://github.com/input-output-hk/cardano-ledger/issues/3161\\n[pull-3175]: https://github.com/input-output-hk/cardano-ledger/pull/3175\\n[pull-3176]: https://github.com/input-output-hk/cardano-ledger/pull/3176\\n[pull-3184]: https://github.com/input-output-hk/cardano-ledger/pull/3184\\n[pull-3195]: https://github.com/input-output-hk/cardano-ledger/pull/3195\\n[pull-3202]: https://github.com/input-output-hk/cardano-ledger/pull/3202\\n[pull-3205]: https://github.com/input-output-hk/cardano-ledger/pull/3205\\n[pull-3208]: https://github.com/input-output-hk/cardano-ledger/pull/3208\\n[pull-3209]: https://github.com/input-output-hk/cardano-ledger/pull/3209\\n[pull-3210]: https://github.com/input-output-hk/cardano-ledger/pull/3210\\n[pull-3212]: https://github.com/input-output-hk/cardano-ledger/pull/3212\\n[pull-3214]: https://github.com/input-output-hk/cardano-ledger/pull/3214\\n[pull-3215]: https://github.com/input-output-hk/cardano-ledger/pull/3215\\n[pull-3217]: https://github.com/input-output-hk/cardano-ledger/pull/3217\\n[pull-3218]: https://github.com/input-output-hk/cardano-ledger/pull/3218\\n[pull-3222]: https://github.com/input-output-hk/cardano-ledger/pull/3222\\n[pull-3223]: https://github.com/input-output-hk/cardano-ledger/pull/3223\\n[pull-3224]: https://github.com/input-output-hk/cardano-ledger/pull/3224\\n[pull-3225]: https://github.com/input-output-hk/cardano-ledger/pull/3225\\n[pull-3226]: https://github.com/input-output-hk/cardano-ledger/pull/3226\\n[pull-3229]: https://github.com/input-output-hk/cardano-ledger/pull/3229\\n[pull-3167]: https://github.com/input-output-hk/cardano-ledger/pull/3167\\n[pull-3170]: https://github.com/input-output-hk/cardano-ledger/pull/3170\\n[pull-3172]: https://github.com/input-output-hk/cardano-ledger/pull/3172"},{"id":"2022-12-28-node-cli-api","metadata":{"permalink":"/cardano-updates/2022-12-28-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-28-node-cli-api.md","source":"@site/blog/2022-12-28-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-12-28T00:00:00.000Z","formattedDate":"December 28, 2022","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.325,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-12-28-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2023-01-05-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-12-16-hydra"}},"content":"# 2022-12-28 - 2023-01-10\\n\\n## High level summary\\n\\n## Completed\\n\\n### docs\\n\\n### CI & project maintenance\\n- [Fix hedgehog-extras sha hash](https://github.com/input-output-hk/cardano-node/pull/4762)\\n- [Update hegehog-extras bounds](https://github.com/input-output-hk/cardano-node/pull/4759)\\n- [GitHub token fix](https://github.com/input-output-hk/cardano-node/pull/4751)\\n- [Use setup-haskell action](https://github.com/input-output-hk/cardano-node/pull/4743)\\n- [Use Github Action to install libsecp256k1](https://github.com/input-output-hk/cardano-node/pull/4738)\\n- [Update index state and hedgehog-extras.](https://github.com/input-output-hk/cardano-node/pull/4714)\\n- [Cleaned cabal files](https://github.com/input-output-hk/cardano-node/pull/4710)\\n- [Add cache versioning](https://github.com/input-output-hk/cardano-node/pull/4737)\\n- [Delete obsolete scripts](https://github.com/input-output-hk/cardano-node/pull/4742)\\n- [Use SECURITY.md published in Cardano Engineering Handbook](https://github.com/input-output-hk/cardano-node/pull/4746)\\n\\n### Developer experience\\n\\n### cardano-cli\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Filter out duplicate collateral inputs in tx build cmds](https://github.com/input-output-hk/cardano-node/pull/4749)\\n- [Optimise query stake-snapshot command](https://github.com/input-output-hk/cardano-node/pull/4754)\\n\\n### cardano-api\\n\\n### cardano-node\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n## CI & project mainteance\\n- [Copyright updates](https://github.com/input-output-hk/cardano-node/pull/4755)\\n\\n### cardano-cli\\n- [Fix bug in hash computation in cardano-cli genesis create-cardano](https://github.com/input-output-hk/cardano-node/pull/4761)\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n- [Better error message for query utxo on oops](https://github.com/input-output-hk/cardano-node/pull/4777)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Remove simple script distinction](https://github.com/input-output-hk/cardano-node/pull/4763)\\n- [Export SubmitResult from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4753)\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n\\n### cardano-testnet\\n- [Use Haskell variables for passing values](https://github.com/input-output-hk/cardano-node/pull/4845)"},{"id":"2022-12-16-hydra","metadata":{"permalink":"/cardano-updates/2022-12-16-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-16-hydra.md","source":"@site/blog/2022-12-16-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-12-16T00:00:00.000Z","formattedDate":"December 16, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.27,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-12-16-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-12-28-node-cli-api"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2022-12-15-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team kicked off a new project together with Catalyst, the Cardano Foundation and researchers from IO: a proof of concept for voting on Hydra. The concluded work on validating the Head protocol using model-based testing and formulated next steps, fixed the transaction cost benchmark reporting on [the website](https://hydra.family/head-protocol/benchmarks/transaction-cost/) and reduced the cost for commit transactions by ~30% with the help of reference scripts.\\n\\nThe year is coming to an end and velocity will slow down a bit while the team focuses on wrapping up loose ends. The updates here will pause until January 2023.\\n\\n## What did the team achieve this week\\n\\n- Kicked-off Hydra Voting project with Catalyst, CF, and IO Research.\\n- Reduce commit transaction costs by ~30% with reference scripts.\\n- Prepared an RFP for external audit of the Hydra Head solution.\\n- Fixed transaction cost benchmarks for abort tx [#631](https://github.com/input-output-hk/hydra/issues/631).\\n- Recorded decision to use model-based testing ([ADR22](https://hydra.family/head-protocol/adr/22/)) and improved Model [documentation](https://hydra.family/head-protocol/haddock/hydra-node/tests/Hydra-Model.html).\\n    - Concluding the first increment on &ldquo;Validate coordinated Head protocol&rdquo; [#194](https://github.com/input-output-hk/hydra/issues/194).\\n    - Formulated next step / follow-up on testing the Soundness property of our protocol [#656](https://github.com/input-output-hk/hydra/issues/656).\\n- Switched to using nix flakes for development setup and CI build [#646](https://github.com/input-output-hk/hydra/pull/646).\\n\\n## What are the goals of next week\\n\\n- Push [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md) & tx validity gap over the finish line (smoke tests missing).\\n- Integrate the `hydra-tutorial`.\\n- Have a LaTeX write-up of the HeadV1 (Coordinated Hydra Head) spec.\\n- Close & recap on the year with another monthly report (+ blog post)."},{"id":"2022-12-15-mithril","metadata":{"permalink":"/cardano-updates/2022-12-15-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-15-mithril.md","source":"@site/blog/2022-12-15-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2022-12-15T00:00:00.000Z","formattedDate":"December 15, 2022","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2022-12-15-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-12-16-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-12-14-consensus"}},"content":"## High level overview\\nThe Mithril team has released the new distribution [`2248.1`](https://github.com/input-output-hk/mithril/releases/tag/2248.1) of their nodes. They have published the first version of the Mithril cryptographic library on [`crates.io`](https://crates.io/crates/mithril-stm), the Rust community\u2019s crate registry. They have implemented an optimization on the individual signatures that no longer embed the verification key and stake. They have also enhanced their testing strategy by implementing a workflow that tests that the client binaries produced for multiple platforms (Linux, MacOS and Windows) are able to verify and restore snapshots.\\n\\nFinally, they have kept on simplifying the aggregator node\'s multi-signer by removing the signer registration and the certificate creation from its responsibilities.\\n\\n## Low level overview\\n- Implemented removing verification key and stake from single signatures [#619](https://github.com/input-output-hk/mithril/issues/619)\\n- Completed the extraction of the signer registration from the multi-signer [#642](https://github.com/input-output-hk/mithril/issues/642)\\n- Completed the extraction of the certificate creation from the multi-signer [#638](https://github.com/input-output-hk/mithril/issues/638)\\n- Implemented a workflow to test client binaries (Linux / MacOS / Windows) [#601](https://github.com/input-output-hk/mithril/issues/601)\\n- Completed the signature of the artifacts produced by the CI [#587](https://github.com/input-output-hk/mithril/issues/587)\\n- Fixed the protocol parameters transition [#627](https://github.com/input-output-hk/mithril/issues/627)\\n- Worked on optimizing the snapshot digest computation [#510](https://github.com/input-output-hk/mithril/issues/510)\\n- Worked on enforcing the API protocol versions in the client and signer [#633](https://github.com/input-output-hk/mithril/issues/633)\\n- Worked on deactivating the non certified signer registration mode [#621](https://github.com/input-output-hk/mithril/issues/621)\\n- Worked on the re-genesis of the test networks [#651](https://github.com/input-output-hk/mithril/issues/651)"},{"id":"2022-12-14-consensus","metadata":{"permalink":"/cardano-updates/2022-12-14-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-14-consensus.md","source":"@site/blog/2022-12-14-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":2.995,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-12-14-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2022-12-15-mithril"},"nextItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2022-12-14-db-sync"}},"content":"## High level summary\\n\\nDuring the past two weeks, the Consensus team finalized the QSM tests for the\\nbacking store and Mempool on the UTxO-HD branch with important discoveries\\nregarding parallel QSM testing. We also worked with the Ledger team to envisage\\nthe modifications that are required in Ledger and Consensus to accommodate the\\nchanges in the crypto VRF and KES. The `db-analyser` now supports bechmarking\\nthe ledger operations, which will allow us to identify, debug, and profile\\npotential performance problems. We drafted a document that defines how to manage\\nthe versions of Consensus-related packages. The top level documentation of\\n`ouroboros-network` now features a description of the consensus components and\\nprovides a hyperlinked map to the modules documentation.\\n\\n## Workstreams\\n\\n### UTxO HD prototype\\n\\nWhereas we had passing sequential state-machine tests for the mempool, the\\nparallel case proved to be more challenging than we thought. The operation of\\nadding a list of transactions to the mempool is not atomic and, as a result,\\nwhen adding a list of transactions, transactions from other processes can be\\nadded in between. The mempool implementation handles this correctly, however\\nthis required us to [redesign][pull-4076] the parallel model we had to take\\nthe lack of atomicity into account.\\n\\n#### Backing store property tests\\n\\nWe finished refactoring the backing store property tests. The second review\\nround is ongoing.\\n\\n### LSM tree implementation\\n\\nWe are working on benchmarking (in terms of time and number of IO operations)\\nfetching/looking up data from disk.\\n\\n### Genesis \\n\\nWe worked on the design of a mechanism to prevent a DoS attack on our Genesis\\ndesign related to rollbacks. This was arguably the biggest outstanding question.\\n\\nDuring the discussions around Genesis, we noticed a design boundary that nicely\\ndelineates a fundamental component. We almost have a full Haskell prototype of\\nit. It will be very nicely self-contained, perhaps even usable in the ultimate\\nimplementation!\\n\\n### New VRF and KES crypto integration\\n\\nWe collaborated with the Ledger team on preparing the ledger state and crypto\\ntypes to avoid huge allocation on the epoch boundary when changing aspects of\\nthe crypto that will only manifest in headers, not in the ledger states.\\n\\n### Technical debt\\n\\nWe merged the [pull-request][pull-4014] that adds a support to `db-analyser` for\\nbenchmarking ledger operations. This will allow us to identify, debug, and\\nprofile potential performance problems. The benchmark focus on the main 5 ledger\\noperations that are involved in chain syncing, block forging, and block\\nvalidation, namely:\\n\\n0. Forecast.\\n1. Header tick.\\n2. Header application.\\n3. Block tick.\\n4. Block application.\\n\\nThe following figure shows a plot of the benchmarking results for the first 65\\nmillion blocks (approximately) of the Cardano chain. The thin yellow lines under\\nthe x-axis show the epoch boundaries, whereas the thick yellow lines correspond\\nto the era transitions.\\n\\n![](/images/consensus/2022-12-14-ledger-ops-benchmark.png)\\n\\nAs we can see in this figure, era and epoch boundaries require more computation\\ntime. The ledger team are aware of this problem, and we are working to improve\\nthis situation.\\n\\n### Fostering collaboration\\n\\nWe [drafted a document][pull-4207] motivating and defining how Consensus (and\\npossibly other core teams) will/should manage our package versions. This\\npull-request garnered many great discussions from our team members and other\\nteams too: Sebastian Nagel, Arnaud Bailly, Michael Peyton-Jones, Ziyang Liu, et\\nal. We want to thank you all for your input, and we found this discussion very\\nenlightening!\\n\\nWe merged the [pull request][pull-4197] that adds an overview of consensus to\\nthe [top level\\ndocumentation](https://input-output-hk.github.io/ouroboros-network/) of\\nouroboros-network. This overview describes the consensus components and adds a\\nhyperlinked map to the modules documentation.\\n\\n[pull-4207]: https://github.com/input-output-hk/ouroboros-network/pull/4207\\n[pull-4014]: https://github.com/input-output-hk/ouroboros-network/pull/4014\\n[pull-4076]: https://github.com/input-output-hk/ouroboros-network/pull/4076\\n[pull-4197]: https://github.com/input-output-hk/ouroboros-network/pull/4197"},{"id":"2022-12-14-db-sync","metadata":{"permalink":"/cardano-updates/2022-12-14-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-14-db-sync.md","source":"@site/blog/2022-12-14-db-sync.md","title":"DB-sync Team Update","description":"High level summary","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":0.73,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB-sync Team Update","slug":"2022-12-14-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-12-14-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-12-14-node-cli-api"}},"content":"## High level summary\\n\\nThe DBSync team continued testing release `13.1.0.0`. The QA team has reported that no issues have\\nbeen found. The DBSync team also worked on cherry-picks back to master and on fixing bugs.\\n\\n## Lower level summary\\n\\n- Release is cherry-picked back to master, which uses the new rollback mechanism which uses\\nreverse indexes, same as the release\\n[#1320](https://github.com/input-output-hk/cardano-db-sync/pull/1320)\\nThis also fixes a bug number of issues on master.\\n- Depenencies upgrade and CHaP integration\\n[#1324](https://github.com/input-output-hk/cardano-db-sync/pull/1324)\\n- AdaPots fix [#1323](https://github.com/input-output-hk/cardano-db-sync/pull/1323). This\\nfixes an issue where the per epoch AdaPots didn\'t match the epoch boundary, but\\nthey also included changes from the first block of the epoch.\\n- Deposits Event fix [#3212](https://github.com/input-output-hk/cardano-ledger/pull/3212). This pr\\nadjusts the Deposits ledger events, so that it can be better used by db-sync. This can reduce the\\nnumber of queries that db-sync does during syncing an make syncing faster."},{"id":"2022-12-14-node-cli-api","metadata":{"permalink":"/cardano-updates/2022-12-14-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-14-node-cli-api.md","source":"@site/blog/2022-12-14-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.46,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-12-14-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"DB-sync Team Update","permalink":"/cardano-updates/2022-12-14-db-sync"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2022-12-14-performance-and-tracing"}},"content":"# 2022-12-14 - 2022-12-27\\n\\n## High level summary\\n\\nPRs merged in this sprint focused on clean up and resolving existing issues. The majority of the time during this sprint was spent on the In Progress PRs which have dependencies on consensus. This has been since rectified i.e cardano-node dependencies have been bumped. \\n\\n## Completed\\n\\n### docs\\n\\n- [Move style guide to wiki](https://github.com/input-output-hk/cardano-node/pull/4703)\\n\\n### CI & project maintenance\\n\\n- [Cache secp256k1](https://github.com/input-output-hk/cardano-node/pull/4734)\\n- [Use cabal-cache](https://github.com/input-output-hk/cardano-node/pull/4717)\\n- [build(deps): bump certifi from 2020.4.5.2 to 2022.12.7 in /doc/.sphinx](https://github.com/input-output-hk/cardano-node/pull/4699)\\n- [Update cabal.project](https://github.com/input-output-hk/cardano-node/pull/4724)\\n\\n### Developer experience\\n\\n- [Add aarch64-darwin to nix-shell](https://github.com/input-output-hk/cardano-node/pull/4125)\\n\\n### cardano-cli\\n- [Improved error message for failed asset name decode](https://github.com/input-output-hk/cardano-node/pull/4626)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Remove cardano-cli address build-script](https://github.com/input-output-hk/cardano-node/pull/4700)\\n\\n### cardano-api\\n- [Move signing key reading to cardano-api](https://github.com/input-output-hk/cardano-node/pull/4698)\\n\\n### cardano-node\\n\\n### cardano-testnet\\n- [Only run chairman test on latest era](https://github.com/input-output-hk/cardano-node/pull/4712)\\n- [Add fix and test for `foldBlocks`](https://github.com/input-output-hk/cardano-node/pull/4679)\\n\\n## In Progress\\n\\n## CI & project mainteance\\n- [Copyright updates](https://github.com/input-output-hk/cardano-node/pull/4755)\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n- [Read network ID from environment](https://github.com/input-output-hk/cardano-node/pull/4666)\\n- [CLI option to append additional signatures to a transactions](https://github.com/input-output-hk/cardano-node/pull/4647)\\n- [Cardano ping](https://github.com/input-output-hk/cardano-node/pull/4664)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)\\n\\n### cardano-testnet\\n- [Cleanup exports of cardano-testnet](https://github.com/input-output-hk/cardano-node/pull/4636)"},{"id":"2022-12-14-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2022-12-14-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-14-performance-and-tracing.md","source":"@site/blog/2022-12-14-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":3.095,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2022-12-14-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-12-14-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-12-12-network"}},"content":"## High level summary\\n\\n1. SECP benchmarking enablement was completed:  we are now able to do local runs of the SECP workloads.  The next step is to port this to the AWS environment.\\n2. A new workstream for Plutus cost modeling improvement:  we\'ve planned and started implementing the smart contract call overhead measurement machinery.\\n3. The new tracing system:  after doing more benchmarking to address inter-run variance, we discovered that the regression, while still there, is small enough not to be release critical.  Nevertheless, we\'re continuing with the further performance-oriented rework of the internals.\\n4. Infrastructure:  a significant refactoring of the workbench internals was merged.  We also started improving the denotation for ever-evolving protocol parameters.  Comparative analysis of multi-run batches implementation started.\\n5. Open sourcing:  our plans matured sufficiently so that we now expect actual deployment work to start this week.\\n\\n## Performance\\n\\nThe SECP benchmarking workload has been fully implemented in the workbench.  We are now porting it over to AWS, and after that we\'ll be running the model cluster workload.\\n\\nWe\'ve also started implementing mechanics for the upcoming investigation of the Plutus smart contract call overhead, which is expected to lead us to improved Plutus cost modeling.\\n\\n## Tracing\\n\\nAfter the initial model-scale performance data caused us to panic, among other things we\'ve done more benchmarks, and it turned out that inter-run variance increase was the culprit.  The actual regression averages to barely noticeable 1-2% in key metrics -- which is certainly not release critical.\\n\\nTo understand the impact of the new tracing system, we have to bear in mind the extra functionality it provides:\\n\\n  1. We are now processing all messages generated by the system, without making any shortcuts that the old system had to resort to.  That causes the new tracing to do more work, but is more useful for all users and developers involved -- since it leads to a simple, non-confusing configuration.  Incidentally, that\'s also the area where we are reworking the internals, to deduce and enable the optimisations that are implied by the particular configuration.\\n  2. The new tracing system is benchmarked with remote tracing as the default backend (whereas the old one was using local, builtin log storage mechanism).  In some sense it\'s the fair benchmark, because that\'s the way we expect SPO\'s to set up tracing.  That, however also causes it to do more work.\\n\\nAll that said, since we\'ve established the performance of the new system to be adequate for the release, we won\'t be delaying it much further.\\n\\nIn addition, we\'re still pursuing our performance-enhancing rework of the new tracing internals.\\n\\n## Infrastructure\\n\\nAfter implementing the multi-backend capability in the workbench, we got the opportunity to reassess the generic/backend boundaries and perform some long-awaited cleanups and simplifications in that area.  The results of this work have been merged and will serve as a solid foundation for the CI and cloud backends.\\n\\nMoving to analysis, we\'ve also improved provenance of the raw data, by collecting more identification information and statistics about it.\\nThis means, e.g. that we now record checksums, message frequencies and timestamps from the log files coming into analysis.\\nThis will be used to enable us to see more data anomalies earlier, and lift that information directly into the generated reports.\\n\\nA new feature is now under implementation -- the ability to provide comparative analysis of multi-run batches.\\nPreviously we only had automation for two aspects separately, so we only could either:\\n  - compare individual runs (used for different node configurations / versions)\\n  - collect variance statistics from a batch of runs (used to enhance statistical confidence for a single node configuration / version)\\nNaturally, combining these two capabilities was a long-desired feature of our analysis pipeline."},{"id":"2022-12-12-network","metadata":{"permalink":"/cardano-updates/2022-12-12-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-12-network.md","source":"@site/blog/2022-12-12-network.md","title":"Network Team Update","description":"High level summary","date":"2022-12-12T00:00:00.000Z","formattedDate":"December 12, 2022","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"},{"label":"release","permalink":"/cardano-updates/tags/release"}],"readingTime":0.43,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-12-12-network","authors":"coot","tags":["network","release"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2022-12-14-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2022-12-09-crypto"}},"content":"## High level summary\\n\\nIn last sprint the team focused on preparations for the conference talk at\\n[OPODIS 2022].  We also worked on preparations to publish `io-sim` and related\\npackages on Hackage ([PR #57], [PR #60]).\\n\\nWe also started reviewing:\\n* `ouroboros-network`\\n* `cardano-node`\\n* `cardano-ledger`\\nrepositories for open-source readiness ([PR #4128]).\\n\\nWe prepared a PR which changes how `node-to-node` and `node-to-client` protocol\\nversiones are serialised in `cardano-node` log ([PR #4691]).\\n\\n[OPODIS 2022]: https://sites.uclouvain.be/OPODIS2022/\\n[PR #57]: https://github.com/input-output-hk/io-sim/pull/57\\n[PR #60]: https://github.com/input-output-hk/io-sim/pull/60\\n[PR #4128]: https://github.com/input-output-hk/ouroboros-network/pull/4218\\n[PR #4691]: https://github.com/input-output-hk/cardano-node/pull/4691"},{"id":"2022-12-09-crypto","metadata":{"permalink":"/cardano-updates/2022-12-09-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-09-crypto.md","source":"@site/blog/2022-12-09-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2022-12-09T00:00:00.000Z","formattedDate":"December 9, 2022","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.39,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2022-12-09-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-12-12-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-12-09-hydra"}},"content":"## High level summary\\nThe four open fronts that the crypto team is working on are:\\n* MuSig2: We were blocked with a CI issue, that we finally resolved. Similarly, we merged the redesig of the API to mantain consistency. \\n* Mithril: Merged the reformat of the signle signature. Similarly, we started working in ensuring KES implementation in rust is safe. \\n* cardano-base: VRF and BLS are still waiting to be merged, as we have some problems with the CI. Moreover, we started experimenting how rust can be included in the cardano-base code-stack. \\n* KES agent: We keep progressing with KES secure forgetting implementation as well as the KES agent.\\n\\n## Low level summary\\n### MuSig2\\n* [Still in progress] We are introducing a more granular error handling mechanism [PR#33](https://github.com/input-output-hk/musig2/pull/33)\\n* We merged the API redesig [PR#35](https://github.com/input-output-hk/musig2/pull/35)\\n* We were blocked for a while with a CI issue, for which we are currently simply using a simpler version of Ubuntu. We\'ll probably circle back to this in the future [PR#36](https://github.com/input-output-hk/musig2/pull/36)\\n\\n### Mithril\\n* We merged the individual signature [PR#620](https://github.com/input-output-hk/mithril/pull/620)\\n* We are modifying important parts of the KES mplementation to guarantee there are no unnecessary copies during Ser/Deser ([kes repo](https://github.com/input-output-hk/kes/commits/master)) \\n\\n### cardano-base\\n* Nothing new to report. Still working in merging these PRs. \\n* We started experimenting on how we can use cabal-pack to create haskell libraries out of rust libraries, and how this would affect the cardano-base fork. We encountered what seems to be a [bug in GHC](https://gitlab.haskell.org/ghc/ghc/-/issues/22564)\\n\\n## KES agent\\n* We keep progressing in the secure forgetting PR and resolving some bugs on memory handling [PR#255](https://github.com/input-output-hk/cardano-base/pull/255)\\n* Fixed a \'use-after-free\' bug in the KES agent."},{"id":"2022-12-09-hydra","metadata":{"permalink":"/cardano-updates/2022-12-09-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-09-hydra.md","source":"@site/blog/2022-12-09-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-12-09T00:00:00.000Z","formattedDate":"December 9, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.62,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-12-09-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2022-12-09-crypto"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-12-09-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has worked on completing to \\"Validate coordinated head protocol against formal model\\", this is a huge step to verify the implementation is secure. They also worked on implementing [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md) related to bounded tx validity which is now under review. [HydraPay](https://github.com/obsidiansystems/hydra-pay) project, from Obsidian Systems, is coming to an end of the first phase at least, so team did a review and submitted couple of [issues](https://github.com/obsidiansystems/hydra-pay/issues?q=is%3Aissue) they found in the process. The team had a meeting with the Director of CyberSecurity - topic was the RFP that is currently in flight that should scope the work of future auditors. Also, the team completed the hydra-tutorial review created by our colleague Thomas Vellecoop from the education team, and we are close to integrate it to our official site. From the development side, they have fixed a bug on the CI when running the benchmark jobs to calculate the cost of abortTx and a flaky spec which checks a plutus merkle-tree is always balanced.\\n\\n## What did the team achieve this week\\n\\n- Document model based testing [#194](https://github.com/input-output-hk/hydra/issues/194) & [#641](https://github.com/input-output-hk/hydra/issues/641)\\n- Got [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md), reducing gaps between implementation and specification, under review.\\n- Complete review on `hydra-tutorial`.\\n- Complete first round of review on `HydraPay` work [#634](https://github.com/input-output-hk/hydra/issues/634)\\n- Meeting with `Director of CyberSecurity` frio `IOG` to unblock \\"the RFP prepared for the external audit\\" [#606](https://github.com/input-output-hk/hydra/issues/606)\\n- Remove `vasil-dev` and `testnet` from `smoke-test` because they were not working [#630](https://github.com/input-output-hk/hydra/issues/630)\\n- Fix flaky `plutus-merkle-tree` test [#642](https://github.com/input-output-hk/hydra/issues/642)\\n- Refactor `NetworkSpec` to improve legilibility.\\n- Fix benchmark cost for `abortTx` [#631](https://github.com/input-output-hk/hydra/issues/631)\\n- Adapt `nix.conf` to the recent hydra-ci nix cache migration.\\n\\n## What are the goals of next week\\n\\n- Get [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md) accepted & close tx validity gap in our implementation.\\n- Integrate the `hydra-tutorial`.\\n- Have a LaTeX write-up of the HeadV1 (Coordinated Hydra Head) spec.\\n- Get Cicero (new CI) working.\\n- Use reference inputs to reduce the cost of the `commitTx`."},{"id":"2022-12-09-ledger","metadata":{"permalink":"/cardano-updates/2022-12-09-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-09-ledger.md","source":"@site/blog/2022-12-09-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-12-09T00:00:00.000Z","formattedDate":"December 9, 2022","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":2.87,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-12-09-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-12-09-hydra"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-12-02-hydra"}},"content":"## High level summary\\n\\nThe Plutus tools team at IOG has started helping the ledger team to build out a user friendly\\n`cardano-ledger-api` package!\\nA [GitHub project](https://github.com/input-output-hk/cardano-ledger/projects/5)\\nwill be filled out in the days ahead,\\npeople interested in the API can use it to follow along and join in on the conversations.\\n\\nThe ledger team has started using\\n[architectural decision records](https://github.com/input-output-hk/cardano-ledger/blob/6fc0e198560fb4169d435da882394930789a8af8/docs/adr/2022-12-01_001-record-architectural-decisions.md)\\nto leave a record of important decisions that the team makes.\\nWe will retroactively go back through past decisions and make ADRs for them.\\n\\nThe logic to track individual deposits is now nearly in place.\\nWe are prioritizing correctness with our first pull request, and will follow up with\\nperformance optimizations and general cleanup next.\\n\\nPointer addresses are being deprecated with the Cardano major protocol version 8.\\nSee [CPS-0002](https://github.com/cardano-foundation/CIPs/pull/374)\\nfor more context.\\n\\n## Lower level summary\\n\\n#### Cardano ledger API\\n\\nThe **Plutus tools team** has taken our minimal `cardano-ledger-api` package and started filling it\\nout and adding much needed documentation.\\nThey have also added doctests!\\nIn the days to come, the Plutus tools team will map out a lot more work for the API and record\\nit in this\\n[GitHub project](https://github.com/input-output-hk/cardano-ledger/projects/5).\\n\\nSee\\n\\n* [pull-3182]\\n* [pull-3188]\\n\\n#### Architectural Decision Records (ADRs)\\n\\nWe are now providing more context and leaving a record of important decisions that are made\\nin the ledger. The first ADR explains the very lightweight process.\\n\\nSee\\n\\n* [pull-3177] (rendered [here](https://github.com/input-output-hk/cardano-ledger/blob/6fc0e198560fb4169d435da882394930789a8af8/docs/adr/2022-12-01_001-record-architectural-decisions.md))\\n\\n#### Tracking individual deposits\\n\\nSee [ADR-3](https://github.com/input-output-hk/cardano-ledger/pull/3190/files)\\nfor background.\\nWe now have the logic in place to track individual deposits, and a host of property tests\\nto make sure that the logic is correct.\\nThe current implementation uses more memory than it needs to, and we will address that next,\\nwith our hope being to only use one word (8 bytes) per registered stake credential.\\nThere is a fair amount of other cleanup needed for general maintainability.\\n\\nSee\\n\\n* [pull-3127]\\n* [pull-3195]\\n* [pull-3202]\\n\\n#### Removing pointer addresses\\n\\nPointer addresses, which have never seen any real use\\n(there are something like eleven on mainnet), are being deprecated starting at Cardano major\\nversion 9.\\n[CPS-0002](https://github.com/cardano-foundation/CIPs/pull/374) gives the context.\\nWe are disabling them by first preventing transaction outputs containing them\\nfrom being serialized by the node at the moment we switch to version 9.\\nAt the hard fork after that, we will translate the existing few pointer addresses\\nto enterprise addresses.\\n\\nSee\\n\\n* [pull-3174]\\n\\n#### Technical debt\\n\\n* [pull-3162] - Sometimes we have to put safeguards in place for hard forks which may never\\n  be exercised. After we have passed the given hardfork, we are able to clean up the code\\n  and simplify our logic. We removed all of the ones that we are currently easily able to.\\n* [pull-3165] - We improved the type safety of our code while also discovering and fixing\\n  a serialization bug.\\n* [pull-3172] - We removed dead code.\\n* [pull-3175] - The Allegra and the Mary code used to be coupled in a particular way the we grew to\\n  dislike. We made these two ledger eras now uniform with the rest of our code base.\\n* [pull-3184] - We organized our property testing code.\\n* [pull-3200] - The Plutus tools teams fixed an outstanding bug in the translation from the\\n  ledger state to the Plutus script context.\\n\\n\\n[pull-3127]: https://github.com/input-output-hk/cardano-ledger/pull/3127\\n[pull-3162]: https://github.com/input-output-hk/cardano-ledger/pull/3162\\n[pull-3165]: https://github.com/input-output-hk/cardano-ledger/pull/3165\\n[pull-3170]: https://github.com/input-output-hk/cardano-ledger/pull/3170\\n[pull-3172]: https://github.com/input-output-hk/cardano-ledger/pull/3172\\n[pull-3174]: https://github.com/input-output-hk/cardano-ledger/pull/3174\\n[pull-3175]: https://github.com/input-output-hk/cardano-ledger/pull/3175\\n[pull-3177]: https://github.com/input-output-hk/cardano-ledger/pull/3177\\n[pull-3182]: https://github.com/input-output-hk/cardano-ledger/pull/3182\\n[pull-3184]: https://github.com/input-output-hk/cardano-ledger/pull/3184\\n[pull-3188]: https://github.com/input-output-hk/cardano-ledger/pull/3188\\n[pull-3190]: https://github.com/input-output-hk/cardano-ledger/pull/3190\\n[pull-3195]: https://github.com/input-output-hk/cardano-ledger/pull/3195\\n[pull-3200]: https://github.com/input-output-hk/cardano-ledger/pull/3200\\n[pull-3202]: https://github.com/input-output-hk/cardano-ledger/pull/3202"},{"id":"2022-12-02-hydra","metadata":{"permalink":"/cardano-updates/2022-12-02-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-02-hydra.md","source":"@site/blog/2022-12-02-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-12-02T00:00:00.000Z","formattedDate":"December 2, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.965,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-12-02-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-12-09-ledger"},"nextItem":{"title":"DB sync Team Update","permalink":"/cardano-updates/2022-12-01-db-sync"}},"content":"## High-level summary\\n\\nThis week, the Hydra team has worked on cleaning up several things in progress\\nafter last week\'s summit. They have extended their model-based testing (MBT)\\napproach with transaction creation & observation\\n[#410](https://github.com/input-output-hk/hydra/issues/410), solved\\n`AcquirePointTooOld` problems of the `hydra-node` with by changing the wallet\\ninitialization [#439](https://github.com/input-output-hk/hydra/issues/439).\\nAlso, the Hydra researchers updated the security proofs of the Coordinated Hydra\\nHead, which are bound to be included in the Hydra HeadV1 specification.\\n\\n## What did the team achieve this week\\n\\n- Monthly review & report - will also be published on our website [#644](https://github.com/input-output-hk/hydra/pull/644)\\n- Extended the model-based testing (MBT) with transaction creation/observation [#410](https://github.com/input-output-hk/hydra/issues/410)\\n- Solve `AcquirePointTooOld` problems with new wallet initialization [#439](https://github.com/input-output-hk/hydra/issues/439)\\n- Fixed our hydraw deployments (EC2 instances)\\n- Created & discussed [ADR21](https://github.com/input-output-hk/hydra/blob/7e532bd1c8a840a8155cf4b0858b982308dfc3f0/docs/adr/CloseTx-validity-bounds-and-deadline-calculation-DoS.md) within tx validity work\\n- Received & discussed security proofs of Coordinated Hydra Head (requires more work)\\n\\n## What are the goals of next week\\n\\n- Get ADR21 accepted & close tx validity gap in our implementation\\n- Complete review & integrate the Hydra tutorial\\n- Review latest hydra-pay work\\n- Have a LaTeX write-up of the HeadV1 (Coordinated Hydra Head) spec\\n- Get Cicero (new CI) working"},{"id":"2022-12-01-db-sync","metadata":{"permalink":"/cardano-updates/2022-12-01-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-01-db-sync.md","source":"@site/blog/2022-12-01-db-sync.md","title":"DB sync Team Update","description":"High level summary","date":"2022-12-01T00:00:00.000Z","formattedDate":"December 1, 2022","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":0.78,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB sync Team Update","slug":"2022-12-01-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-12-02-hydra"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2022-12-01-mithril"}},"content":"## High level summary\\n\\nThe DB Sync team prepared a release `13.1.0.0-rc2` which includes many improvements for db-sync,\\nit makes rollbacks and syncing much faster, simplifies the schema, fixes bugs and introduces\\nmigrations. This release finalises the objectives that were set for db-sync for the previous\\n3 months period and part of the syncing speed objective set for the next period\\n[Changelog](https://github.com/input-output-hk/cardano-db-sync/blob/3640e5aa00b8bada61e5d4b6eee063749866711b/cardano-db-sync/CHANGELOG.md#13100)\\n\\n## Lower level summary\\n- Branch [release/13.1.0.x](https://github.com/input-output-hk/cardano-db-sync/compare/release/13.0.x..3640e5aa00b8bada61e5d4b6eee063749866711b)\\nincludes all the improvements related to the release. The release is passing through the testing\\nphase and a number of bugs and issues have been fixed, like\\n[#1312](https://github.com/input-output-hk/cardano-db-sync/issues/1312)\\n[#1311](https://github.com/input-output-hk/cardano-db-sync/issues/1311).\\nAlso many new unit tests have been added.\\n\\n- Part of the release branch is cherry-picked back into master, in a way that it respects the new\\nrelease and development process, so that it takes into account migrations\\n[release process](https://github.com/input-output-hk/cardano-db-sync/issues/1305)\\n\\n- The DB Sync team has also tagged release `13.0.6` which better supports preview and preprod for\\ndocker."},{"id":"2022-12-01-mithril","metadata":{"permalink":"/cardano-updates/2022-12-01-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-01-mithril.md","source":"@site/blog/2022-12-01-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2022-12-01T00:00:00.000Z","formattedDate":"December 1, 2022","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.04,"hasTruncateMarker":false,"authors":[{"name":"Jean-Philippe Raynaud","title":"Mithril Tech Lead","url":"https://github.com/jpraynaud","imageURL":"https://github.com/jpraynaud.png","key":"jpraynaud"}],"frontMatter":{"title":"Mithril Team Update","slug":"2022-12-01-mithril","authors":"jpraynaud","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"DB sync Team Update","permalink":"/cardano-updates/2022-12-01-db-sync"},"nextItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2022-12-01-system-test"}},"content":"## High level overview\\nThe Mithril team worked on finalizing their release process by adding new features: publishing their cryptographic library to the Rust community, adding node versions manifest in the release notes, and signing the binaries embedded in the distributions. They deprecated the declarative signer node registration that will be decommissioned in a few weeks. The team also completed the automatic store upgrade process for the signer and aggregator nodes. \\n\\nFinally, the team continued working on the redaction of the CIP that will allow the decentralization of Mithril by using the Cardano networking layer.\\n\\n## Low level overview\\n- Implemented custom Mithril SPOs on testing/pre-release networks [#563](https://github.com/input-output-hk/mithril/issues/563)\\n- Deprecated Signer Declarative Pool Id registration mode [#585](https://github.com/input-output-hk/mithril/issues/585)\\n- Completed the second stage of the store automatic migration process [#600](https://github.com/input-output-hk/mithril/issues/600)\\n- Completed the deployment pipelines to crates.io registry [#588](https://github.com/input-output-hk/mithril/issues/588)\\n- Completed automatic generation of nodes/libraries versions manifest in releases notes [#599](https://github.com/input-output-hk/mithril/issues/599)\\n- Completed CI/CD handling of PR from forks [#597](https://github.com/input-output-hk/mithril/issues/597)\\n- Worked on the CIP design for Mithril piggybacked on the Cardano network layer [#586](https://github.com/input-output-hk/mithril/issues/586)\\n- Worked on signing the artifacts released in the distributions by the CI/CD [#587](https://github.com/input-output-hk/mithril/issues/587)\\n- Worked on multi-platforms end to end test [#601](https://github.com/input-output-hk/mithril/issues/601)\\n- Worked on the refactorizaton of the aggregator multi-signer engine [#398](https://github.com/input-output-hk/mithril/issues/398)"},{"id":"2022-12-01-system-test","metadata":{"permalink":"/cardano-updates/2022-12-01-system-test","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-12-01-system-test.md","source":"@site/blog/2022-12-01-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2022-12-01T00:00:00.000Z","formattedDate":"December 1, 2022","tags":[{"label":"system-test","permalink":"/cardano-updates/tags/system-test"}],"readingTime":0.765,"hasTruncateMarker":false,"authors":[{"name":"Dorin Solomon","title":"System Test Team Lead","url":"https://github.com/dorin100","imageURL":"https://github.com/dorin100.png","key":"dorin100"}],"frontMatter":{"title":"System Test Team Update","slug":"2022-12-01-system-test","authors":"dorin100","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2022-12-01-mithril"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-11-30-consensus"}},"content":"## High level summary\\nDuring the last 2 weeks we did more improvements on our Test Framework, planned the testing of the _P2P Single \\nRelay_ functionality, and also tested some DB-Sync tags.\\n\\n## Workstreams\\n\\n### Framework improvements:\\n- moved the System Test CLI Pipelines from BuildKite to Github Actions\\n- improved the reporting tools to support the rerun of the failled tests and update of the reports \\n- added support for Github API in [report-aggregator](https://github.com/mkoura/report-aggregator), so reports will be generated from the GitHub nightly jobs from now on\\n- added support for mixed topology - P2P, legacy, mixed topologies\\n- planned the P2P Single Relay system test activities \\n- added support to start regression tests with PV8 + better selection of tests\\n\\n### DB-Sync:\\n- confirmed that DB-Sync release 13.0.5 is compatible with Node release 1.35.4 + Protocol Version 8 (on the Preview environment)\\n- tested a couple db-sync tags - 13.1.0.0-rc1, 13.1.0.0-rc2"},{"id":"2022-11-30-consensus","metadata":{"permalink":"/cardano-updates/2022-11-30-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-30-consensus.md","source":"@site/blog/2022-11-30-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2022-11-30T00:00:00.000Z","formattedDate":"November 30, 2022","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":2.4,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-11-30-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2022-12-01-system-test"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-11-30-node-cli-api"}},"content":"## High level summary\\n\\nDuring the past two weeks, the consensus team merged improvements to the monadic\\ncursor API that was needed to implement LMDB range reads, which is in turn\\nrequired for the implementation of the UTxO HD feature. We added tables to\\nseveral tests in for the UTxO HD feature, which increases our confidence in the\\ncorrectness of the prototype. The mempool property tests are close to being\\ncompleted. Also, we finished the LSM tree tuning algorithm.\\n\\nOn the Genesis front we started simplifying the BlockFetch logic with\\nCSJ-specific workloads in mind. \\n\\nWe are also documenting the Block Diffusion Pipelining feature, and added a\\nhigh-level overview of consensus to the top level documentation of\\n`ouroboros-network`.\\n\\n## Workstreams\\n\\n### UTxO HD prototype\\n\\nWe merged the implementation of a monadic cursor API ([#1][pull-1])) which was\\nneeded to solve a bug with LMDB range-reads. After this PR was merged, we focused on\\nbridging the gap between the `lmdb-simple` interface and consensus by facilitating\\nusing `lmdb-simple`\'s cursor API without `Serialise` constraints ([#3][pull-3]).\\n\\nWe refactored the backing store property tests to use `quickcheck-lockstep`\\n([#4081][pull-4081]).\\n\\nWe added tables to the mock ledger in the UTxO-HD feature branch\\n([#4184][pull-4184]). Every test that used to run with `SimpleBlocks` now uses\\ntables. This will enable us to exercise the UTxO HD mempool integration by\\nleveraging the existing mempool property-tests. The new state-machine\\nproperty-tests are still needed for testing the parallel behaviour of the\\nmempool.\\n\\nOur work on the mempool state-machine tests revealed the need for improvements\\nin the `quickcheck-state-machine` library. Parallel testing assumed that the\\nstate machine did not have access to mutable references. However, the mempool\\ntests require the use of such mutable references for mocking the ledger\\ninterface. As a result, our parallel tests were failing with rather obscure\\nmessages. @Jasagredo submitted a pull request ([#12][pull-12]) that allows for\\nnew mutable references to be created at each run of the state machine.\\n\\n#### Backing store property tests\\n\\n### LSM tree implementation\\n\\nWe finished the LSM Tree tuning algorithm. We are currently tidying up the code\\nand gathering results (i.e., plots and their interpretation).\\n\\n### CSJ prototype\\n\\nWe started simplifying the BlockFetch logic with CSJ-specific workloads in mind.\\n\\n### New VRF and KES crypto integration\\n\\nStarted working on supporting new version of `StandardCrypto` which uses compact\\nKES and batched VRF ([#4151][issue-4151]).\\n\\n### Technical debt\\n\\nWe reviewed the existing state of the Block Diffusion Pipelining document. We\\nare now working on the \\"Implementation\\" section ([#4020][issue-4020]).\\n \\n### Fostering collaboration\\n\\nWe cleared up our understanding of the error dynamics of forecasting\\n([#4146][pull-4146] and [#4174][pull-4174]).\\n\\nWe submitted a pull request that adds an overview of consensus to the [top level\\ndocumentation](https://input-output-hk.github.io/ouroboros-network/) of\\nouroboros-network ([#4197][pull-4197]). This overview describes the consensus components and adds a\\nhyperlinked map to the modules documentation.\\n\\nhttps://github.com/input-output-hk/ouroboros-network/pull/4197\\n\\n\\n[issue-4151]: https://github.com/input-output-hk/ouroboros-network/issues/4151\\n[pull-1]: https://github.com/input-output-hk/lmdb-simple/pull/1\\n[pull-3]: https://github.com/input-output-hk/lmdb-simple/pull/3\\n[pull-4081]: https://github.com/input-output-hk/ouroboros-network/pull/4081\\n[pull-4184]: https://github.com/input-output-hk/ouroboros-network/pull/4184\\n[pull-12]: https://github.com/stevana/quickcheck-state-machine/pull/12\\n[pull-4146]: https://github.com/input-output-hk/ouroboros-network/pull/4146\\n[pull-4174]: https://github.com/input-output-hk/ouroboros-network/pull/4174 \\n[issue-4020]: https://github.com/input-output-hk/ouroboros-network/issues/4020\\n[pull-4197]: https://github.com/input-output-hk/ouroboros-network/pull/4197"},{"id":"2022-11-30-node-cli-api","metadata":{"permalink":"/cardano-updates/2022-11-30-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-30-node-cli-api.md","source":"@site/blog/2022-11-30-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-11-30T00:00:00.000Z","formattedDate":"November 30, 2022","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.01,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-11-30-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-11-30-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2022-11-30-performance-and-tracing"}},"content":"# 2022-11-30 - 2022-12-13\\n\\n## High level summary\\n\\nPRs merged in this sprint focused on clean up and resolving existing issues. The majority of the time during this sprint was spent on the In Progress PRs which have dependencies on consensus. This has been since rectified i.e cardano-node dependencies have been bumped. \\n## Completed\\n\\n### docs\\n\\n### cardano-cli\\n- [Append tx output in cli transaction build command](https://github.com/input-output-hk/cardano-node/pull/4675)\\n- [Update Error messages in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4592)\\n\\n### cardano-api\\n\\n### cardano-node\\n- [Replace Data.Map with Data.Map.Strict](https://github.com/input-output-hk/cardano-node/pull/4675)\\n- [Update Github actions](https://github.com/input-output-hk/cardano-node/pull/4708)\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n- [Render consistent plutus script failure output](https://github.com/input-output-hk/cardano-node/pull/4659)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n- [Fully remove the cli intermediate TxBody format](https://github.com/input-output-hk/cardano-node/pull/4713)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-11-30-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2022-11-30-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-30-performance-and-tracing.md","source":"@site/blog/2022-11-30-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2022-11-30T00:00:00.000Z","formattedDate":"November 30, 2022","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":1.95,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2022-11-30-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-11-30-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-11-28-network"}},"content":"## High level summary\\n\\n1. Benchmarks for the 1.36 first pre-release bump of the internal components have been delivered, and data shows the component bump is clear for release.\\n2. SECP benchmarking enablement is underway:  the necessary generator features have been implemented, and are now being integrated into the workbench.\\n3. The new tracing system:  in response to the performance regression we previously discovered we are working on pre-planned implementation improvements, and doing more benchmarks.\\n4. Infrastructure:  the Nomad-based workbench backend has been made closer to a cloud deployment scenario.  Cleanup in preparation for Cicero CI/CD integration started.\\n5. Open sourcing:  ongoing SRE collaboration on production deployment of performance data publishing.\\n\\n## Performance\\n\\nWe have ran benchmarks for the first component bump of the upcoming 1.36 release, and we don\'t see any significant performance changes.  The component bumps are therefore clear for release.\\n\\n## Tracing\\n\\nFor the tracing system regression that we spotted -- even before, we already had plans for further efficiency improvement, and now we are actively pursuing them.\\nThe idea is to collect more statically-available information to enable shifting of more tracing decisions from message delivery time to configuration time.\\n\\nTo support this effort, we also started running more benchmarks and enhanced data analysis with relevant metrics.\\n\\n## Infrastructure\\n\\nGeneration support for Plutus V2 has been implemented and so, with the help of the previously made looped signature-verifying script, the generator is now capable of producing two SECP workloads: verifying either ECDSA or Schnorr signatures.  This is now being integrated into the infrastructure -- the generator parametrisation API is being enhanced and the workbench is being extended to handle the new parametrisation.\\n\\nIn addition the workbench is now being enhanced to handle protocol-version-based choices for the Plutus cost model.\\n\\nThe intermediate cloud compatibility iteration of the workbench cloud enablement effort was merged.\\nWe are now doing some cleanup work in preparation for starting the Cicero backend, which will bring us nearly completely to the CI/CD integration.\\n\\nWe continue collaboration with SRE on production deployment of data publishing.  We now have a gradual rollout plan, which respects the plans for SRE infrastructure feature availability.\\n\\nWe are working on recovering the software dependency manifest feature that was lost with the organisation-wide transition to CHaP.\\n\\nAs usual, a number of smaller workbench, data analysis & reporting improvements have been made."},{"id":"2022-11-28-network","metadata":{"permalink":"/cardano-updates/2022-11-28-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-28-network.md","source":"@site/blog/2022-11-28-network.md","title":"Network Team Update","description":"Stake-Driven Data Diffusion Release for Relays","date":"2022-11-28T00:00:00.000Z","formattedDate":"November 28, 2022","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"},{"label":"release","permalink":"/cardano-updates/tags/release"}],"readingTime":3.675,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-11-28-network","authors":"coot","tags":["network","release"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2022-11-30-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2022-11-25-crypto"}},"content":"## Stake-Driven Data Diffusion Release for Relays\\n\\nIOG networking team decided to release the _Stake-Driven Data Diffusion with\\nRobust Optimised Peer Selection_ also more commonly known as _P2P_.  In the\\nlast update, we informed about a performance regression, but it turns out it\\nonly affects block producers, and thus we highly advise against running it on\\nsuch nodes.  Further investigation is required to find the cause of it.\\n\\nOn IOG\'s benchmarking cluster we have seen quite a good performance improvement\\non block propagation itself.  The cluster is running a static topology with\\nvalency 6 (each node is connected to 6 other nodes).  In which every of the 50\\nnodes are block producers.  The setup of this network is the same as mainnet.\\nWe\'ve seen 40-50% performance improvement on block propagation comparing to the\\nsame cluster deployed with the same topology but using non-P2P nodes.  We think\\nthis performance improvement is caused by using full duplex connections.  Quite\\nlikely the transaction traffic floating in both directions on the same TCP\\nconnection helps to keep the TCP window open.  Note that in a cluster of 50\\nnodes with valency 6 the probability of having at least one duplex connection\\nis more than 50%.  We don\'t expect the same improvement on mainnet because the\\nnetwork is much wider and the transaction traffic is not as large.\\n\\nJust before the release we squashed two small bugs:\\n\\n* [issue #4163] - top level integration bug in `keep-alive`;\\n* [issue #4177] - a bug in `outbound-governor`;\\n* [PR #4165] - a fix `cardano-ping` support of `NodeToNodeV_10`.\\n\\n\\n### Peer Sharing\\n\\nWe were carrying a review of [peer sharing PR][PR #4019].\\n\\n### DeltaQ\\n\\nNeil Davies was invited to give a guest lecture entitled `Avoiding System Catastrophes` at [UCLouvain].\\n\\n## What have we achieve last sprint\\n\\n* [issue #4163]: we found out that a control message is not passed to the\\n  `keep-alive` mini-protocol, this results in every demotion executing demotion\\n  timeout rather than a graceful termination.  With the fix the node will no longer log:\\n  ```json\\n  { \\"kind\\": \\"PeerStatusChangeFailure\\"\\n  , \\"peerStatusChangeType\\": \\"WarmToCold (ConnectionId {localAddress = 192.168.0.10:7000, remoteAddress = 3.129.186.40:3000})\\"\\n  , \\"reason\\": \\"TimeoutError\\"\\n  }\\n  ````\\n\\n* [issue #4177]: we fixed an assertion failure in the `outbound-governor`; now\\n  we don\'t try demoted peers which are being demoted already.\\n\\n* [PR #4155]: we refactored `ouroboros-network` packages.  There\'s a top level\\n  `ouroboros-consensus-diffusion` package which integrates `network`\\n  & `consensus` code.  We also introduced:\\n\\n  - `ouroboros-network-api` package which contains the API shared between\\n    `network` & `conensus`;\\n  - `ouroboros-network-mock` package which contains mock API used for testing\\n    (e.g. a mock chain & chain producer, etc.)\\n  - `ouroboros-network-protocols` package which contains implementation of all\\n    (but `handshake`) mini-protocols, exposes a `testlib` and contains `test`\\n    and `cddl` components.\\n\\n  This made the dependency tree of `network` & `consensus` packages much\\n  cleaner.\\n\\n* [PR #4169]: we described the usage of release branches in `CONTRIBUTING.md`\\n  doc.\\n\\n* [PR #4165]: we fixed `cardano-ping` support of `NodeToNodeV_10` protocol.\\n\\n\\n### DeltaQ\\n\\nThe abstract of the talk:\\n\\n> An essential step to ensuring that distributed systems are fit for\\n> purpose.\\n>\\n> Distributed systems have become an integral part of our society and\\n> daily lives. We are, both implicitly and explicitly, individually as well as\\n> collectively, placing ever more trust in them.\\n>\\n> Are they worthy of this trust?  Our need for them to be \u2018fit-for-purpose\u2019 goes\\n> well beyond notions of functional correctness (i.e. never getting the wrong\\n> answer). We need them to deliver the desired outcomes in a timely, robust,\\n> reliable, resilient fashion, at scale and in a sustainable way (both\\n> economically and environmentally).\\n>\\n> This all sounds like a worthy aspiration, but what would be a practical\\n> approach to capturing and reasoning about these issues? How can we ensure that\\n> systems can meet their fit-for-purpose objectives, not just in their design but\\n> as they are deployed, encounter the imperfect world, are scaled to become\\n> economic, and proceed into ongoing maintenance?\\n>\\n> This talk will illustrate how the notions of Outcomes and Quality Attenuation\\n> (as captured by \u2018\u2206Q\u2019) are being used to both frame the necessary notions and\\n> provide a basis for assuring the refinement and reification of such systems,\\n> from initial concept to operational infrastructure.\\n\\nYou can download the slides from [here](../static/pdf/network/2022-11-24-UCL.pdf).\\n\\n[issue #4163]: https://github.com/input-output-hk/ouroboros-network/issues/4163\\n[issue #4177]: https://github.com/input-output-hk/ouroboros-network/issues/4177\\n[PR #4155]: https://github.com/input-output-hk/ouroboros-network/pull/4155\\n[PR #4169]: https://github.com/input-output-hk/ouroboros-network/pull/4169\\n[PR #4165]: https://github.com/input-output-hk/ouroboros-network/pull/4165\\n[PR #4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[UCLouvain]: https://uclouvain.be/en/index.html"},{"id":"2022-11-25-crypto","metadata":{"permalink":"/cardano-updates/2022-11-25-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-25-crypto.md","source":"@site/blog/2022-11-25-crypto.md","title":"Crypto Team Update","description":"High level summary","date":"2022-11-25T00:00:00.000Z","formattedDate":"November 25, 2022","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.705,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2022-11-25-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-11-28-network"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-11-25-hydra"}},"content":"## High level summary\\nThe four open fronts that the crypto team is working on are:\\n* MuSig2: We are almost ready to reach a point where the MuSig2 library is ready for usage by the Hydra team. \\n* Mithril: We started to think how Mithril-core can be designed such that it can be leverage by contexts where the verifiers run full nodes\\n* cardano-base: The VRF and BLS branchs are still open and in progress\\n* KES agent: We keep progressing with KES secure forgetting implementation as well as the KES agent. \\n\\n## Low level summary\\n### MuSig2\\n* We redesigned the library so that MuSig2 lib users don\'t need to be aware of the underlying secp256k1 library [PR#31](https://github.com/input-output-hk/musig2/pull/31)\\n* We are introducing a more granular error handling mechanism [PR#33](https://github.com/input-output-hk/musig2/pull/33)\\n* We rethought the API and made it more consistent with the underlying secp256k1 library [PR#35](https://github.com/input-output-hk/musig2/pull/35)\\n\\n### Mithril\\n* The mithril crates in general will be published in crates.io, and we adapted the core library\'s README [PR#616](https://github.com/input-output-hk/mithril/pull/616) \\n* We are modifying the individual signature to not contain the VK and stake. This was not necessary, as the current design requires the aggregator of Mithril certificates to know this information [PR#620](https://github.com/input-output-hk/mithril/pull/620)\\n\\n### cardano-base\\n* We\'ve been still working in updating to the latest version of the VRF. In particular we modified the cbits to use the latest version of libsodium stable (1.0.18) [PR#341](https://github.com/input-output-hk/cardano-base/pull/341)\\n* SKs, VKs and VRF outputs will be compatible across the different versions. We are implementing conversion functions for simple transitions [PR#344](https://github.com/input-output-hk/cardano-base/pull/344)\\n* Benchmarks on pairing built-ins have already started, so we were finalising some CI concerns and final remarks on the BLS PR, so that it can be merged as soon as we have green light from plutus [PR#266](https://github.com/input-output-hk/cardano-base/pull/266)\\n\\n## KES agent\\n* We keep progressing in the secure forgetting PR and resolving some bugs on memory handling [PR#255](https://github.com/input-output-hk/cardano-base/pull/255)\\n* Increasing the test framework to make sure concurrency is properly treated by the KES Agent, for which we are including refcounted references. General progress in the implementation."},{"id":"2022-11-25-hydra","metadata":{"permalink":"/cardano-updates/2022-11-25-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-25-hydra.md","source":"@site/blog/2022-11-25-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-11-25T00:00:00.000Z","formattedDate":"November 25, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.73,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-11-25-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2022-11-25-crypto"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-11-23-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team attended the Cardano Summit in Lausanne, where Sebastian gave a [presentation](https://summit.cardano.org/agenda-day-2/cardano-ballot-speaker-winner-presentation-6/) about Hydra and the whole team connected with the Cardano Community. After the public event, th Hydra team also conducted a workshop, which provided room for a retrospective, various planning sessions and they hacked together on different ideas.\\n\\n## What did the team achieve this week\\n\\n- Attended the Cardano Summit in Lausanne. Hydra was topic of one talk: <https://summit.cardano.org/agenda-day-2/cardano-ballot-speaker-winner-presentation-6/>\\n- Had a team workshop / hackathon after the summit:\\n    - Retrospective\\n    - Impact mapping session\\n    - Hacked on smaller things\\n- Got a PR for tullia/cicero things by @kdermetfan\\n\\n## What are the goals of next week\\n\\n- Monthly report & review meeting\\n- Tie up several loose ends / branches.\\n- Resolve Tx validity discussions & PRs.\\n- Review cicero PR & try it out."},{"id":"2022-11-23-ledger","metadata":{"permalink":"/cardano-updates/2022-11-23-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-23-ledger.md","source":"@site/blog/2022-11-23-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-11-23T00:00:00.000Z","formattedDate":"November 23, 2022","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":2.19,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-11-23-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-11-25-hydra"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-11-18-hydra"}},"content":"## High level summary\\n\\nWe released [CIP-1694],\\nour proposal for entering the [Voltaire phase](https://roadmap.cardano.org/en/voltaire/).\\n**Please come join the discussion**, this will be an incredibly exciting transition for\\nCardano and we want everyone to participate!\\n\\nWe now have a sensible way to version all of the serialization schemes used in the ledger.\\nThe draft pull request was polished, reviewed, and merged this week.\\nThis solves many problems that have vexed us since the beginning of the Shelley ledger era.\\n\\nEveryone working on the Cardano node is working together to improve our release process,\\nand the ledger team in particular dedicated one engineer to help with these efforts\\nfor the next release.\\n\\n## Lower level summary\\n\\n### The Conway ledger era\\n\\nThe current proposal in [CIP-1694] encompasses two new ledger eras.\\nThe first era will be called Conway, after the English mathematician John Horton Conway.\\nThe community facing aspects of the Conway ledger era will be very minimal,\\nbut it will pave the way for introducing liquid democracy.\\nThe details can be viewed [here](https://github.com/input-output-hk/cardano-ledger/projects/4).\\nWe do not yet have a formal specification for the Conway era.\\nOur plan is to debut the\\n[formal ledger model](https://github.com/input-output-hk/formal-ledger-specifications).\\nBriefly, the Conway ledger era will:\\n* introduce SPO voting for hard forks (in the spirit of the now abandoned [CIP-47])\\n* provide an on-chain mechanism for rotating the governance keys\\n* re-plumb the ledger rules involving governance to be in line with [CIP-1694]\\n\\n### Versioned CBOR\\n\\nWe now have the ability to easily tie our serialization schemes to the Cardano\\nmajor protocol version.\\nWe still aim to preserve backwards compatibility as much as possible, but we now have a principled\\nplan for resolving problems (see [CIP-ledger-cbor]).\\nIn particular, we can now address several long standing issues, such as\\n[issue-2444], [issue-2965], and [issue-3003]. \\n\\nThe final (and massive!) pull request which brought us the versioning is [pull-3138].\\n\\n### Deposit tracking\\n\\nThe draft pull request which was exploring how best to track individual deposits\\nis much closer now to being ready to take out of draft ([pull-3127]).\\nFor background on the issue, see [issue-3113].\\nThis is quite an invasive change which effects many of our tests, which we are now addressing.\\n\\n### Technical debt\\n\\nAs always, we keep working on technical debt.\\nWe have deduplicated a some things: [pull-3129], [pull-3162].\\nWe have memoized a problematic computation (though more due diligence is needed before we can\\nmerge): [pull-3141].\\n\\n### Node release\\n\\nWe have been helping with the node release efforts. See [pull-4608].\\n\\n[CIP-47]: https://github.com/cardano-foundation/CIPs/pull/318\\n[CIP-1694]: https://github.com/cardano-foundation/CIPs/pull/380\\n[CIP-ledger-cbor]: https://github.com/cardano-foundation/CIPs/pull/372\\n[issue-3003]: https://github.com/input-output-hk/cardano-ledger/issues/3003\\n[issue-2965]: https://github.com/input-output-hk/cardano-ledger/issues/2965\\n[issue-2444]: https://github.com/input-output-hk/cardano-ledger/issues/2444\\n[issue-3113]: https://github.com/input-output-hk/cardano-ledger/issues/3113\\n[pull-3129]: https://github.com/input-output-hk/cardano-ledger/pull/3129\\n[pull-3141]: https://github.com/input-output-hk/cardano-ledger/pull/3141\\n[pull-3127]: https://github.com/input-output-hk/cardano-ledger/pull/3127\\n[pull-3162]: https://github.com/input-output-hk/cardano-ledger/pull/3162\\n[pull-3138]: https://github.com/input-output-hk/cardano-ledger/pull/3138\\n[pull-4608]: https://github.com/input-output-hk/cardano-node/pull/4608"},{"id":"2022-11-18-hydra","metadata":{"permalink":"/cardano-updates/2022-11-18-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-18-hydra.md","source":"@site/blog/2022-11-18-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-11-18T00:00:00.000Z","formattedDate":"November 18, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.085,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-11-18-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-11-23-ledger"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2022-11-18-mithril"}},"content":"## High-level summary\\n\\nThis week, the Hydra team released version `0.8.1`, which includes several fixes and a user-wished extension of the persistence introduced by `0.8.0` of replaying server outputs to make clients like the `hydra-tui` be aware of the latest `hydra-node` state. The team also worked on the specification and closing gaps in the on-chain scripts, collaborated with the education team on a Hydra tutorial and also renamed the repository from `hydra-poc` to [`hydra`](https://github.com/input-output-hk/hydra)!\\n\\n## What did the team achieve this week\\n\\n- Implemented replaying of server outputs to address [#580](https://github.com/input-output-hk/hydra-poc/issues/580)\\n- Released version 0.8.1 containing this and other fixes [Release notes](https://github.com/input-output-hk/hydra/releases/tag/0.8.1)\\n- Worked on the bounded tx validity as one of the on-chain script fixes, but couldn&rsquo;t finish it just yet [#615](https://github.com/input-output-hk/hydra/pull/615)\\n- Collaborated with the education team on a Hydra tutorial.\\n- Discovered and discussed issues with the &ldquo;seen ledger&rdquo;.\\n- Renamed the Hydra repository `hydra-poc` -> `hydra`\\n\\n## What are the goals of next week\\n\\n- Create and discuss an ADR about handling tx validity correctly.\\n- Attend the Cardano Summit in Lausanne. Hydra will be topic of one talk! Save the date+time: **\\"Developing Hydra\\" on Day 2, Nov 21st, 13:50 CET**\\n- Have a team workshop / hackathon after the summit:\\n  - Retrospective\\n  - Roadmapping session\\n  - Hack on something complex or useful"},{"id":"2022-11-18-mithril","metadata":{"permalink":"/cardano-updates/2022-11-18-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-18-mithril.md","source":"@site/blog/2022-11-18-mithril.md","title":"Mithril Team Update","description":"High level overview","date":"2022-11-18T00:00:00.000Z","formattedDate":"November 18, 2022","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.35,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Mithril Team Update","slug":"2022-11-18-mithril","authors":"iquerejeta","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-11-18-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-11-16-consensus"}},"content":"## High level overview\\nThe Mithril team has released their second distribution 2246.1 following the activation of the alpha version of the new release process. They continued refining its implementation and added a new set of artifacts to the distributions, such as Debian packages and macOS/Windows binaries. The team also enhanced the Mithril Explorer, which now provides more detailed information about epoch settings and easier access to multiple aggregators for the users. They have also worked on an enhanced mechanism for node versioning, storage, and communication protocol. They also implemented version detections for the signer and aggregator nodes, designed the automatic store upgrade feature for these nodes, and enhanced the documentation of the configuration parameters of the several Mithril networks. \\n\\nFinally, the team continued working on the elaboration of the CIP that will allow the decentralization of Mithril by relying on the Cardano node network layer.\\n\\n## Low level overview\\n- Released a new Mithril distribution [2246.1](https://github.com/input-output-hk/mithril/releases/tag/2246.1)\\n- Completed the first stage of the store migrations process [#562](https://github.com/input-output-hk/mithril/issues/562)\\n- Added a Mithril API version that is now exposed in the headers of the requests sent and received by the nodes [#565](https://github.com/input-output-hk/mithril/issues/565)\\n- Enhanced the explorer UI with epoch settings information and aggregators management on browser local storage [#576](https://github.com/input-output-hk/mithril/issues/576)\\n- Prepared a Daedalus synchronization benchmark video with/without Mithril [#606](https://github.com/input-output-hk/mithril/issues/606)\\n- Upgraded the Cardano nodes of the testing Mithril networks to `1.35.4` [#594](https://github.com/input-output-hk/mithril/issues/594)\\n- Worked on implementing SPO tests nodes on testing Mithril networks [#563](https://github.com/input-output-hk/mithril/issues/563)\\n- Worked on the CIP design for Mithril piggybacked on the Cardano network layer [#588](https://github.com/input-output-hk/mithril/issues/588)\\n- Worked on the refactorizaton of the aggregator multi signer engine [#398](https://github.com/input-output-hk/mithril/issues/398)"},{"id":"2022-11-16-consensus","metadata":{"permalink":"/cardano-updates/2022-11-16-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-16-consensus.md","source":"@site/blog/2022-11-16-consensus.md","title":"Consensus Team Update","description":"High-level summary","date":"2022-11-16T00:00:00.000Z","formattedDate":"November 16, 2022","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":5.06,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-11-16-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2022-11-18-mithril"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-11-16-node-cli-api"}},"content":"## High-level summary\\n\\nDuring the past two weeks, the consensus team started documenting the\\nimplementation of the UTxO HD feature and continued developing tests for it. As\\npart of our work on UTxO HD, we improved the Haskell support for LMDB. We also\\nspent time working on the LSM tree prototype, and designed a parameter tuning\\nalgorithm for it. Regarding our work on Genesis, our investigation of the\\n\\"plateaus\\" pointed at the `TICKF` slowdown on era boundaries as culprit. This\\nled us to developing a caching strategy that will not only remove the\\naforementioned \\"plateaus\\", but can help alleviating the growing block production\\ndelay on epoch switch. We also helped reviewing the block forge credential\\nhotswap feature, which is intended for use in the adoption of P2P.\\n\\nWe also worked on paying technical debt and fostering collaboration. In\\nparticular, we improved the `io-sim` framework, which is crucial for testing and\\nsimulating Cardano components. We also removed thunks that appeared on era\\ntranslations, and improved our diffusion pipelining feature. We are working on a\\npresentation for explaining Praos and Genesis.\\n\\n## High-level status report\\n\\n- Finish the UTxO HD prototype: in progress.\\n  - We added documentation for this feature.\\n  - We developed the second version of the mempool tests.\\n  - We fixed benchmarks that were inflating the speedup we observed in the\\n    anti-diff implementation of sequences of differences. Speedups are now in the\\n    range of [3.33, 4.75], which remain significant.\\n  - We continued improving Haskell LMDB support.\\n  - We finished implementing a \\"parameter tuning algorithm\\" for the LSM tree\\n    prototype. This enables us to run experiments to check the correctness of\\n    the algorithm.\\n- Genesis: in progress.\\n  - Work investigating the \\"plateaus\\" in the `ChainSync` jumping prototype\\n    pointed to the `TICKF` slowdown on era boundaries as culprit.\\n- Tech debt:\\n  - We improved the capabilities of our `io-sim` library, which is crucial for\\n    testing and simulating Cardano components.\\n  - We removed thunks from epoch translations in the ledger.\\n  - We added Linux CI support for `lmdb-simple`.\\n  - We got pending diffusion pipelining improvements merged.\\n- Fostering collaboration:\\n  - We are working on a explanation of Praos and Genesis protocols.\\n- Support:\\n  - Investigation of CSJ \\"plateaus\\" led us to developing a caching strategy for\\n    `TICKF` that will not only remove these \\"plateaus\\", but can help alleviating\\n    the growing block production delay on epoch switch.\\n  - We reviewed the block forge credential hotswapping feature which is intended\\n    for use in the adoption of P2P.\\n\\n## Workstreams\\n\\n### Finish the UTxO HD prototype\\n\\nWe merged PR [#4060][pr-4060], which adds a report documenting the UTxO HD\\nfeature, and puts emphasis in explaining how the mempool works in combination\\nwith UTxO HD.\\n\\nWe opened a draft PR with the second iteration of the property tests for the\\nmempool ([#4076][pr-4076]).\\n\\nWe fixed the `Arbitrary` instances for keys and values in `DiffSeq` benchmarks\\n([#4143][pr-4143]). The problem was that we were testing with mostly small\\nvalues, which artificially boosted the performance gains we saw on benhcmarks.\\nSpeedups are now in the range of [3.33, 4.75] across the different\\nconfigurations.\\n\\n#### Backing store property tests\\n\\nWe focused on incorporating feedback on the monadic cursor API PR ([#1][pr-1]).\\nThis required us to make small tweaks to `quickcheck-lockstep` to test the new\\nAPI. We also updated the backing store property tests to use the new version of\\nthe monadic cursor API.\\n\\n### LSM tree implementation\\n\\nWe worked on the LSM tree prototype. In particular: finished implementing a\\n\\"parameter tuning algorithm\\" that adapts the LSM tree design based on factors\\nlike:\\n- workload\\n- machine specs, \\n- and characteristics of the data being stored. \\n\\nWe are now running experiments to gather results and cross-reference them with\\nexisting experimental results from the LSM tree paper to see if the algorithm is\\nworking correctly.\\n\\n### Benchmarking the CSJ prototype\\n\\nWe focused on investigating the \\"plateaus\\" in the `ChainSync` tip, which turned\\nout to be due to the `TICKF` bug which we previously were only aware of in the\\ncontext of the long forging times near epoch boundaries. For the most drastic\\npatch by @nfrisby to speed up `TICKF`, full sync is speeding up by 7%.\\n\\nThe following plot shows that by caching the `TICKF` the `ChainSync` tip and the\\n`VolatileDB` tip progress at the same rate.\\n\\n![](/images/consensus/2022-11-16-removed-stuttering.png)\\n\\nThe plot below shows the speedup observed by caching the `TICKF` rule wrt the\\nbaseline.\\n\\n![](/images/consensus/2022-11-16-comparing-TICKF-batch.png)\\n\\n### Technical debt\\n\\nAfter addressing the PR comments, we merged PR [#16][pr-16], which implements\\nthe `MonadCatch` instance for `STM`. This extends the capability of our `io-sim`\\nlibrary, which is crucial for testing and simulating Cardano components PR #16\\nclosed [#1461][issue-1461]. This new feature was published as version `0.4.0.0`\\nof `io-sim`.\\n\\nWe continued with our work fixing the `NoThunk` errors required for enabling\\nnightly tests, with the help of `TVarInvariant` checks in `strict-stm` and\\n`nothunks` libraries. We proposed fixes in `cardano-ledger` that took care of\\nthunks that appeared in era translations ([#3143][pr-3143]). The fixes will be\\nintegrated back into consensus when `cardano-ledger` approves and publish the\\nchanges introduced in `#3143`.\\n\\nWe added CI support for `lmdb-simple` ([#2][pr-2]). We currently test the build on\\na Linux environment only.\\n\\nWe got pending diffusion pipelining PRs ([#3857][pr-3857], [#3860][pr-3860],\\n[#3856][pr-3856]) merged, after rebasing and addressing feedback.\\n\\n### Fostering collaboration\\n\\n@nfrisby finished a visualisation tool and outlined scripts for the Praos and\\nGenesis explanation presentations. The idea is to produce a video that gives an\\noverview of these protocols.\\n\\n### Support \\n\\nWe started working on caching the computation of the `TICKF` rule\\n([#4054][issue-4054]), since this was blocking our benchmarking work for\\nGenesis. In addition, this issue has the Cardano community [quite\\nconcerned][issue-4421], so we are hoping the work done in caching the\\ncomputation of the `TICKF` rule can help alleviating the growing block\\nproduction delay on epoch switch.\\n\\nWe reviewed the block forge credential hotswapping PR [#3800][pr-3800] from the\\nnetworking team, which is intended for use in the adoption of P2P.\\n\\n[issue-4054]: https://github.com/input-output-hk/ouroboros-network/issues/4054\\n[issue-4421]: https://github.com/input-output-hk/cardano-node/issues/4421\\n[issue-1461]: https://github.com/input-output-hk/ouroboros-network/issues/1461\\n\\n[pr-3800]: https://github.com/input-output-hk/ouroboros-network/pull/3800\\n[pr-16]:   https://github.com/input-output-hk/io-sim/pull/16\\n[pr-3143]: https://github.com/input-output-hk/cardano-ledger/pull/3143\\n[pr-4060]: https://github.com/input-output-hk/ouroboros-network/pull/4060\\n[pr-4076]: https://github.com/input-output-hk/ouroboros-network/pull/4076\\n[pr-1]:    https://github.com/input-output-hk/lmdb-simple/pull/1\\n[pr-4143]: https://github.com/input-output-hk/ouroboros-network/pull/4143\\n[pr-2]:    https://github.com/input-output-hk/lmdb-simple/pull/2\\n[pr-3857]: https://github.com/input-output-hk/ouroboros-network/pull/3857\\n[pr-3860]: https://github.com/input-output-hk/ouroboros-network/pull/3860\\n[pr-3856]: https://github.com/input-output-hk/ouroboros-network/pull/3856"},{"id":"2022-11-16-node-cli-api","metadata":{"permalink":"/cardano-updates/2022-11-16-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-16-node-cli-api.md","source":"@site/blog/2022-11-16-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-11-16T00:00:00.000Z","formattedDate":"November 16, 2022","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":0.68,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-11-16-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-11-16-consensus"},"nextItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2022-11-16-performance-and-tracing"}},"content":"# 2022-11-16 - 2022-11-29\\n\\n## High level summary\\n\\n## Completed\\n\\n### docs\\n- [Add a native tokens tutorial and exercises](https://github.com/input-output-hk/cardano-node/pull/4562)\\n\\n### cardano-cli\\n- [Update cardano-cli\'s help](https://github.com/input-output-hk/cardano-node/pull/4674)\\n- [Remove error calls in renderShelleyTxCmdError](https://github.com/input-output-hk/cardano-node/pull/4644)\\n\\n### cardano-api\\n- [Implement Cardano.Api.DeserialiseAnyOf](https://github.com/input-output-hk/cardano-node/pull/4639)\\n\\n### cardano-node\\n- [Fix windows CI](https://github.com/input-output-hk/cardano-node/pull/4650)\\n\\n### cardano-testnet\\n\\n## In Progress\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n- [Handle pipes in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4625)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-11-16-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2022-11-16-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-16-performance-and-tracing.md","source":"@site/blog/2022-11-16-performance-and-tracing.md","title":"Performance & tracing update","description":"High level summary","date":"2022-11-16T00:00:00.000Z","formattedDate":"November 16, 2022","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":1.635,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & tracing update","slug":"2022-11-16-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-11-16-node-cli-api"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2022-11-11-crypto"}},"content":"## High level summary\\n\\n1. P2P performance investigation is ongoing, in support of the networking team.\\n2. SECP benchmarking enablement is underway: we already have the script and are working on Plutus V2 generation support.\\n3. Unexpected setback in the new tracing system:  full scale benchmarks have shown a performance regression: local chain syncing benchmarks were an improvement over legacy tracing.\\n4. On the open sourcing front we added an integrated data dictionary, which is necessary for explaining ourselves to the world.  SRE collaboration on production deployment of performance data publishing has started.\\n5. We have started bringing the Nomad-based workbench backend closer to a cloud deployment scenario.\\n\\n\\n## Performance\\n\\nWe are supporting the networking team on P2P performance investigation.  Generation support for Plutus V2 was started.  We have collaborated with the Plutus team to get a SECP benchmark script, which is now ready for use, pending Plutus V2 support.  The transaction generator has also been updated to the cardano-api changes.\\n\\n## Tracing\\n\\nWe ran an initial round of full-scale benchmarks for the new tracing system -- which uncovered a regression relative to legacy tracing, which is contrary to the local chain syncing benchmarks, that showed improvement instead.  We added tracing to cardano-tracer, fixing some minor bugs on the way.  Network and disk IO metrics are now collected once again and are integrated into analysis.\\n\\n## Infrastructure\\n\\nThe first iteration of the Nomad-based local workbench backend was completed -- it has reached feature parity with the existing supervisor backend.  The next iteration started, bringing it closer to the cloud scenario, by deploying to separate Nomad tasks connected by a virtual network.  This will serve as basis for CI and full cloud backends.\\n\\nWe designed and implemented the authoring pipeline for the performance data dictionary, which will be henceforth embedded in our performance reports.  We are collaborating with SRE on production deployment of data publishing.\\n\\nA number of smaller workbench, data analysis & reporting improvements have been made."},{"id":"2022-11-11-crypto","metadata":{"permalink":"/cardano-updates/2022-11-11-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-11-crypto.md","source":"@site/blog/2022-11-11-crypto.md","title":"Crypto Team Update","description":"High level overview","date":"2022-11-11T00:00:00.000Z","formattedDate":"November 11, 2022","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.305,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2022-11-11-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & tracing update","permalink":"/cardano-updates/2022-11-16-performance-and-tracing"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-11-11-hydra"}},"content":"## High level overview\\n\\nThe SECP primitives AC has been met, and the test-vectors [PR](https://github.com/input-output-hk/cardano-base/pull/320) has been merged. Another of the main short-term goals is to implement KES secure forgetting. In the past week the mempool [PR](https://github.com/input-output-hk/cardano-base/pull/336) has been merged, and we\'ve adapted the KES secure [PR](https://github.com/input-output-hk/cardano-base/pull/255) to the new mempool design. On top of this, we are working in updating the VRF batch compat version to use the audited version of the libsodium fork ([PR#](https://github.com/input-output-hk/cardano-base/pull/341)). Finally, we\'ve \'cleaned\' our libsodium fork, and we directly fork upstream, rather than forking Algorand\'s fork. \\n\\n## Low level overview\\n* With the AC met, there was no more blockers from crypto to release the node tag with the SECP primitives. We are now working closely with dQuadrant to to implement some E2E tests with an actual bridge implementation.  \\n* We previously had a C implementation of a memory pool for usage in KES secure forgetting. After a discussion with Alexey, we decided to use his implementation of a mempool in Haskell. We are working in adapting KES Secure forgetting to use this Haskell mempool. \\n* In parallel, we keep progressing on the [KES agent](https://github.com/input-output-hk/kes-agent)\\n* VRFBatchCompat was deactivated due to a lack of an external audit. This audit was finished a few weeks back, and we are updating cardano base to use this new librar. In particular, this library implements the latest changing version of the VRF draft (13, which seems to remain stable), and links to the libsodium fork which implements batch verification. \\n* Our libsodium fork now links directly to upstream libsodium."},{"id":"2022-11-11-hydra","metadata":{"permalink":"/cardano-updates/2022-11-11-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-11-hydra.md","source":"@site/blog/2022-11-11-hydra.md","title":"Hydra Team Update","description":"High-level summary","date":"2022-11-11T00:00:00.000Z","formattedDate":"November 11, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.94,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-11-11-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2022-11-11-crypto"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-11-11-ledger"}},"content":"## High-level summary\\n\\nThis week, the Hydra team published together with Obsidian Systems a light paper\\non our \\"Hydra for Payments\\" project ([Link](https://iohk.io/en/blog/posts/2022/11/10/hydra-for-payments-introducing-developer-tooling-to-unlock-micropayments-on-cardano/)). They have created a draft scope RFP for the external audit and worked with the internal audit team to clear up the specification. From the development side, they have fixed a bug with chain-following when using persistence and improved logs for better observability of `hydra-node` processes. \\n\\n## What did the team achieve this week\\n\\n- Published Hydra for Payments light paper ([Link](https://iohk.io/en/blog/posts/2022/11/10/hydra-for-payments-introducing-developer-tooling-to-unlock-micropayments-on-cardano/))\\n- Have a draft RFP ready for a first review internally\\n- Answered the internal auditor&rsquo;s questions\\n- Fixed a bug with following the chain when starting with persistence ([#599](https://github.com/input-output-hk/hydra-poc/issues/599))\\n- Minor improvements to logging for better observability ([#598](https://github.com/input-output-hk/hydra-poc/issues/598), [#600](https://github.com/input-output-hk/hydra-poc/issues/600))\\n- Non-achievement: Needed to work around flaky TUI ci, follow-up issue if anyone wants to have a look ([#590](https://github.com/input-output-hk/hydra-poc/issues/590))\\n\\n## What are the goals of next week\\n\\n- Implement event-sourced persistence [#580](https://github.com/input-output-hk/hydra-poc/issues/580)\\n- Close more gaps [#452](https://github.com/input-output-hk/hydra-poc/pull/452)\\n- Attend the Cardano Summit in Lausanne. Hydra will be topic of one talk! Save the date+time: **\\"Developing Hydra\\" on Day 2, Nov 21st, 13:50 CET**"},{"id":"2022-11-11-ledger","metadata":{"permalink":"/cardano-updates/2022-11-11-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-11-ledger.md","source":"@site/blog/2022-11-11-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-11-11T00:00:00.000Z","formattedDate":"November 11, 2022","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":2.41,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-11-11-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-11-11-hydra"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-11-11-network"}},"content":"## High level summary\\n\\nI am extremely excited to say that we now have a pull request up which introduces our new versioned\\nCBOR serialization. This was an enormous effort, but it will solve a host of problems that we have\\nhad since the Shelley phase. It will take time to properly review it, and we will\\nneed to put in a lot of effort to integrate it with the downstream components, but this is  a huge\\nmilestone. Additionally, we have a new CIP proposing a deprecation cycle for the transaction\\nserialization schemes.\\n\\nWe also have a draft pull request that reworks how deposits are tracked. Users of the system will\\nnot notice any difference, but it is a necessary change needed to prepare the way for\\ndecentralizing the governance of Cardano.\\n\\nFinally, we continued to address technical debt. In particular, we continued to make progress on\\nbringing coherency and consistency to the code base with a common naming convention, and\\nimproving some error messages.\\n\\n## Lower level summary\\n\\n- We have a pull request up for our new versioned CBOR serialization.\\n  When we encounter a problem with our deserializers, it can be very difficult to implement a fix.\\n  It is difficult because we can only fix such issues during a hard fork, and leading up to the\\n  hard fork we must maintain two serializations for the same type in order to not cause unintended\\n  network splitting (the problematic version must be used before the hard fork,\\n  and the fixed version is used afterwards).\\n  This can be especially tricky with the `FromCBOR` typeclass, since it is not always easy to\\n  search for where all the problematic uses are located.\\n  The new versioned CBOR serialization allows us to gracefully handle this transition.\\n  See [[pull-3138]].\\n- We proposed a CIP for backwards compatibility of the transaction serialization schemes.\\n  See [[pull-372]].\\n- We have draft for the new deposit tracking.\\n  This draft is not as memory efficient as the final version will be,\\n  but it is a sufficient proof of concept that we can write property tests against, ensuring\\n  that we have not changed the semantics.\\n  We will optimize after we are sure of the correctness.\\n  See [[pull-3127]].\\n- We now provide better support for debugging failed Plutus scripts in an important helper\\n  function, named `evaluateTransactionExecutionUnits`.\\n  In particular, it now returns all the information needed to rerun the script with exactly the\\n  same arguments. This feature will end up appearing in the CLI and other tools from the Plutus\\n  tools team.\\n  See [[pull-3135]].\\n- We did a lot more renaming to bring coherency and consistency to the code base.\\n  See [[pull-3126]], [[pull-3120]], [[pull-3118]], and [[pull-3116]].\\n- We have added a few things to the ledger repository to make it conform to the\\n  [Cardano Engineering Handbook](https://input-output-hk.github.io/cardano-engineering-handbook/)\\n  See [[pull-3139]].\\n\\n\\n[pull-3138]: https://github.com/input-output-hk/cardano-ledger/pull/3138\\n[pull-3127]: https://github.com/input-output-hk/cardano-ledger/pull/3127\\n[pull-3135]: https://github.com/input-output-hk/cardano-ledger/pull/3135\\n[pull-3126]: https://github.com/input-output-hk/cardano-ledger/pull/3126\\n[pull-3120]: https://github.com/input-output-hk/cardano-ledger/pull/3120\\n[pull-3118]: https://github.com/input-output-hk/cardano-ledger/pull/3118\\n[pull-3116]: https://github.com/input-output-hk/cardano-ledger/pull/3116\\n[pull-3139]: https://github.com/input-output-hk/cardano-ledger/pull/3139\\n[pull-372]: https://github.com/cardano-foundation/CIPs/pull/372"},{"id":"2022-11-11-network","metadata":{"permalink":"/cardano-updates/2022-11-11-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-11-network.md","source":"@site/blog/2022-11-11-network.md","title":"Network Team Update","description":"High-level summary","date":"2022-11-11T00:00:00.000Z","formattedDate":"November 11, 2022","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":1.595,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-11-11-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-11-11-ledger"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-11-04-hydra"}},"content":"import NoticedHeaders from \'@site/static/images/network/2022-11-11-noticed-headers.png\';\\n\\n## High-level summary\\n\\nIn last sprint we got a performance report of P2P performance testing cluster\\n(which consists of 50 nodes).  There is a performance regression in the header\\nnotification metric.  The P2P cluster is constructed with the same\\ntopology as the non-p2p reference one this indicates some regression which\\nneeds to be further investigated.  This poses a risk for releasing P2P.\\n\\nWe also continued to work on peer sharing: [pull #4019].\\n\\nWe continued working on dynamic block production which is required for P2P\\nrelease for BP nodes: [pull #3159].\\n\\nWe simplified the P2P topology format: [issue #4559], [pull #3888].\\n\\nWe added a new trace point for asynchronous demotions of local peers with\\n`Warning` severity.  This trace is **important** for SPOs.\\n\\n## Detail description\\n\\n### Performance regression\\n\\nBelow we include a graph which shows the performance regression of the P2P code base vs non P2P.\\n\\n<img src={NoticedHeaders} />\\n\\nOn the `x` axis is time in seconds which measures the delay from the start of\\nthe slot to when a header was received. The `y` axis is the percentile of nodes\\nthat received a header.  We are currently investigating possible causes of the\\nregression. \\n\\n### New P2P topology form\\n\\nThe new topology file format is described in this [issue #4559].\\n\\n### Tracing improvements\\n\\n* We improved a handshake error reporting, [pull #4136]\\n* We added `TraceDemoteLocalAsynchronous` rendered as `DemoteLocalAsynchronous`\\n  in `json` format, [pull #4127].  Such demotions should be investigated by the\\n  pool operator.  They can indicate a problem in the deployed system, but also\\n  they could indicate a remote problem in arranged connections with other SPOs.\\n\\n### Open Source Improvements\\n\\nWe improved documentation of `io-sim` and `typed-protocols` for open-source\\ncontributors and/or maintenance tasks: [pull #22], [pull #45], [pull #48]. \\n\\n[pull #4019]: https://github.com/input-output-hk/ouroboros-network/pull/4019\\n[pull #3888]: https://github.com/input-output-hk/ouroboros-network/issues/3888\\n[pull #3159]: https://github.com/input-output-hk/ouroboros-network/issues/3159\\n[issue #4559]: https://github.com/input-output-hk/cardano-node/issues/4559\\n[pull #4136]: https://github.com/input-output-hk/ouroboros-network/pull/4136\\n[pull #4127]: https://github.com/input-output-hk/ouroboros-network/pull/4127\\n[pull #22]: https://github.com/input-output-hk/typed-protocols/pull/22\\n[pull #45]: https://github.com/input-output-hk/io-sim/pull/45\\n[pull #48]: https://github.com/input-output-hk/io-sim/pull/48"},{"id":"2022-11-04-hydra","metadata":{"permalink":"/cardano-updates/2022-11-04-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-04-hydra.md","source":"@site/blog/2022-11-04-hydra.md","title":"Hydra Team Update","description":"High level summary","date":"2022-11-04T00:00:00.000Z","formattedDate":"November 4, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.935,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-11-04-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-11-11-network"},"nextItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2022-11-04-mithril"}},"content":"## High level summary\\n\\nThis week, the hydra team first re-deployed the latest Hydra scripts to the re-spun `preview` network, see [0.8.0 release notes](https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0). They also completed implementation of [ADR18](https://hydra.family/head-protocol/adr/18/) and worked on the validators, but development got impacted by some CI flakyness. The team also met to discuss hard forks & protocol parameter updates [#195](https://github.com/input-output-hk/hydra-poc/issues/195#issuecomment-1300503557) and alignment of the specification document with auditors.\\n\\n## What did the team achieve this week\\n\\n- Complete and merge ADR18 [#579](https://github.com/input-output-hk/hydra-poc/pull/579)\\n- Re-deploy hydra scripts to respun `preview` network, see [0.8.0 release notes](https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0) [#595](https://github.com/input-output-hk/hydra-poc/pull/595)\\n- Have first gap of [#452](https://github.com/input-output-hk/hydra-poc/pull/452) in review.\\n- Non-achievement: Flaky CI for TUI was impacting us, so we investigated this a lot.\\n- Engineering meeting to discuss hard forks and protocol parameter updates [#195](https://github.com/input-output-hk/hydra-poc/issues/195#issuecomment-1300503557)\\n- Met the internal audit team on the specification to set scope, expectations and collected requirements/open questions.\\n- Drafted project scope for an external audit RFP.\\n\\n## What are the goals of next week\\n\\n- Implement event-sourced persistence [#580](https://github.com/input-output-hk/hydra-poc/issues/580)\\n- Answer the internal auditor&rsquo;s questions\\n- Have a draft RFP ready for a first review internally\\n- Close some gaps [#452](https://github.com/input-output-hk/hydra-poc/pull/452)"},{"id":"2022-11-04-mithril","metadata":{"permalink":"/cardano-updates/2022-11-04-mithril","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-04-mithril.md","source":"@site/blog/2022-11-04-mithril.md","title":"Mithril Team Update","description":"This sprint, the team has been working on the new continuous integration and delivery (CI/CD) pipelines and the automated deployment of environments as part of the new version of the release process. They also coordinated the migration of the pioneer SPO nodes to these new Mithril networks. They have been implementing the automatic data storage upgrade of the signer and the aggregator nodes. Finally, on the crypto side of things, we\'ve implemented an efficiency improvement on the size of the mithril certificates.","date":"2022-11-04T00:00:00.000Z","formattedDate":"November 4, 2022","tags":[{"label":"mithril","permalink":"/cardano-updates/tags/mithril"}],"readingTime":1.015,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Mithril Team Update","slug":"2022-11-04-mithril","authors":"iquerejeta","tags":["mithril"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-11-04-hydra"},"nextItem":{"title":"Open-Source Team","permalink":"/cardano-updates/2022-10-31-open-source"}},"content":"This sprint, the team has been working on the new continuous integration and delivery (CI/CD) pipelines and the automated deployment of environments as part of the new version of the release process. They also coordinated the migration of the pioneer SPO nodes to these new Mithril networks. They have been implementing the automatic data storage upgrade of the signer and the aggregator nodes. Finally, on the crypto side of things, we\'ve implemented an efficiency improvement on the size of the mithril certificates.\\n# Low level overview\\n- We have been moving forward on the implementation of the release process [#500](https://github.com/input-output-hk/mithril/issues/500):\\n  - Setup of the new hosted environments for `testing-preview`, `pre-release-preview` and `release-preprod` with their terraform and GitHub environments [#542](https://github.com/input-output-hk/mithril/issues/542)\\n  - Adapted the CI workflows to work with the new release process [#543](https://github.com/input-output-hk/mithril/issues/543)\\n  - Publication of an [ADR3](https://mithril.network/doc/adr/3)\\n  - Publication of a [dev blog post](https://mithril.network/doc/dev-blog/2022/10/28/updated-environments) about Mithril networks evolution \\n  - Releasing our first Mithril distribution [2244.0](https://github.com/input-output-hk/mithril/releases/tag/2244.0)\\n- Worked on the API versioning mechanism [#565](https://github.com/input-output-hk/mithril/issues/565)\\n- Worked on the implementation of the stores migration process for the signer and aggregator nodes [#562](https://github.com/input-output-hk/mithril/issues/562)\\n- Prepared a Mithril `devnet` video demo [#526](https://github.com/input-output-hk/mithril/issues/526)\\n- Implemented a batch Merkle Tree proof, which reduces the size of certificates considerably [#484](https://github.com/input-output-hk/mithril/pull/484)"},{"id":"2022-10-31-open-source","metadata":{"permalink":"/cardano-updates/2022-10-31-open-source","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-04-open-source.md","source":"@site/blog/2022-11-04-open-source.md","title":"Open-Source Team","description":"High Level Summary","date":"2022-11-04T00:00:00.000Z","formattedDate":"November 4, 2022","tags":[{"label":"open-source","permalink":"/cardano-updates/tags/open-source"}],"readingTime":1.465,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Open-Source Team","slug":"2022-10-31-open-source","authors":"coot","tags":["open-source"],"hide_table_of_contents":false},"prevItem":{"title":"Mithril Team Update","permalink":"/cardano-updates/2022-11-04-mithril"},"nextItem":{"title":"Embedding Quality Workstream","permalink":"/cardano-updates/2022-11-03-embedding-quality"}},"content":"## High Level Summary\\n\\n* We\'ve been working toward publishing _Cardano Backlog_, currently its in\\n  review by the IOG communication team.\\n* We identified a number of libraries which can be published.\\n* We setup and enhanced [cardano-updates][cardano-updates].\\n\\n## Detailed description\\n\\nI am glad to announce that I was given the role of open-source advocate for\\ncardano project.  In last few weeks we were making steps towards publishing our\\nbacklog.  It\'s currently under review by the communication team, although most\\nof the issues are already visible across various repositories.\\n\\nThe open-source initiatives have their own\\n[project](https://github.com/orgs/input-output-hk/projects/60).  It is set up\\nto help us track our major open-source activities.  Right now there are two\\nwork streams:\\n\\n* the work on [_Cardano Engineering Handbook_][ceh];\\n* libraries to be release on [Hackage][Hackage] or [crates.io][crates.io].\\n\\nWe identifies a number of libraries across all the teams which contribute to\\n_Cardano_ which we would like publish to publish, see the following\\n[link][publish-on-hackage].  Arnauld Bailly recently published\\n[`quickcheck-dynamic`](https://hackage.haskell.org/package/quickcheck-dynamic)\\nlibrary on Hackage.  The networking team is slowly progressing towards\\npublishing [io-sim][io-sim] and related packages, checkout the progress\\n[here](https://github.com/orgs/input-output-hk/projects/19/views/24).\\n\\nThanks to Arnaud Bailly our [Cardano Updates][cardano-updates] website has\\na new look & feel!  It\'s using [docusaurus.io][docusaurus].\\n\\n\\nChristian Taylor carried recently a detailed analysis of our open-source\\nrepositories.  He collected many interesting metrics, which allows us to see\\nwhere we need to improve as an open-source project to make the Cardano project\\nand many smaller related libraries which we maintain be more open and available\\nfor open-source contributors.\\n\\nThe graph below shows which documents the 55 most important Cardano\\nrepositories are missing the most:\\n![Documentation Adoption](../static/img/doc-adoption.png)\\nYou can expect we will improve in these metrics in the coming weeks.\\n\\n\\n[Hackage]: https://hackage.haskell.org/\\n[crates.io]: https://crates.io\\n[publish-on-hackage]: https://github.com/orgs/input-output-hk/projects/60/views/3\\n[io-sim]: https://github.com/input-output-hk/io-sim\\n[ceh]: https://input-output-hk.github.io/cardano-engineering-handbook/\\n[cardano-updates]: https://input-output-hk.github.io/cardano-updates\\n[docusaurus]: https://docusaurus.io"},{"id":"2022-11-03-embedding-quality","metadata":{"permalink":"/cardano-updates/2022-11-03-embedding-quality","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-03-embedding-quality.md","source":"@site/blog/2022-11-03-embedding-quality.md","title":"Embedding Quality Workstream","description":"High level summary","date":"2022-11-03T00:00:00.000Z","formattedDate":"November 3, 2022","tags":[{"label":"embedding-quality","permalink":"/cardano-updates/tags/embedding-quality"}],"readingTime":0.65,"hasTruncateMarker":false,"authors":[{"name":"Dorin Solomon","title":"System Test Team Lead","url":"https://github.com/dorin100","imageURL":"https://github.com/dorin100.png","key":"dorin100"}],"frontMatter":{"title":"Embedding Quality Workstream","slug":"2022-11-03-embedding-quality","authors":"dorin100","tags":["embedding-quality"],"hide_table_of_contents":false},"prevItem":{"title":"Open-Source Team","permalink":"/cardano-updates/2022-10-31-open-source"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-10-02-consensus"}},"content":"## High level summary\\n\\nWe made good progress on most of the Action Items we agreed on Lisbon, like:\\n* Cardano System Tests was fully open to public (tools, tests, results) \\n  See [cardano-node-tests webpage](https://input-output-hk.github.io/cardano-node-tests).\\n* We defined an [user-facing-functionality template](https://github.com/input-output-hk/cardano-node/blob/master/.github/ISSUE_TEMPLATE/user-facing-feature.md) that is used with the cardano-cli team \\n  * this includes acceptance criteria & user stories, and definition of done\\n* We are in the process of running the cardano-node-tests at commit & PR level in cardano-node (we are affected by the Cicero migration right now but we did most of the work already)\\n* We started to apply a _labelling convention_ on [cardano-node issues](https://github.com/input-output-hk/cardano-node/issues) that will be used to generate some visual dashboards with some metrics [TBD]\\n* Ziyand Liu started an _End-to-End Development and Testing Process for Plutus Features_"},{"id":"2022-10-02-consensus","metadata":{"permalink":"/cardano-updates/2022-10-02-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-02-consensus.md","source":"@site/blog/2022-11-02-consensus.md","title":"Consensus Team Update","description":"High-level summary","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":3.53,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-10-02-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Embedding Quality Workstream","permalink":"/cardano-updates/2022-11-03-embedding-quality"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-11-02-ledger"}},"content":"## High-level summary\\n\\nDuring the past two weeks, the consensus team continued its work on testing the\\nUTxO HD prototype. We completed the era-transition and backing store tests, and\\nthe mempool tests are advancing at a steady pace. Regarding our work in the\\nGenesis design, we continued our collaboration with the research and networking\\nteams, and we continue investigating strategies for making the chain-sync\\njumping prototype faster.\\n\\n## High-level status report\\n\\n- Finish the UTxO HD prototype: on track.\\n  - We worked on state-machine tests for the mempool, and spotted potential bugs\\n    in the implementation. Investigation is ongoing.\\n  - We have a set of property tests for the backing store. We still need to\\n    incorporate the improvements to the LMDB cursor API that these tests\\n    made possible.\\n  - We merged the era-transition tests PR.\\n- Genesis: on track.\\n  - Design work around Genesis continues in collaboration with researchers and\\n    the networking team.\\n  - We continued trying to improve the performance of the chain-sync jumping\\n    prototype. We gained additional insight on which parameters to tweak next.\\n    In spite of the baseline still being faster, the current prototype already\\n    achieves a significant speedup when compared to the naive approach of simply\\n    running full chain-sync with all peers.\\n- Tech debt: on track.\\n  - We clarified a common source of confusion around VRF tie-breaking and\\n    cross-era chain selection.\\n\\n## Workstreams\\n\\n### Finish the UTxO HD prototype\\n\\nWe continued working on property-tests for the UTxO HD prototype. In particular\\nwe merged the [era-transition tests\\nPR](https://github.com/input-output-hk/ouroboros-network/pull/4073).\\n\\n#### Backing store property tests\\n\\nThe [backing store property tests\\nPR](https://github.com/input-output-hk/ouroboros-network/pull/4081) has been\\nreviewed. The next steps are:\\n\\n- Improve error handling and command generation.\\n- Add coverage testing to check that we are not failing to cover interesting\\n  test cases.\\n\\nThe [monadic cursor API](https://github.com/input-output-hk/lmdb-simple/pull/1)\\nwent through its first review round. The API is in a relatively stable state.\\nThis PR also unifies the `cborg` and `serialise`-based interfaces to LMDB\\noperations. The next steps are:\\n\\n- Write\\n  [`quickcheck-dynamic`](https://hackage.haskell.org/package/quickcheck-dynamic)\\n  state-machine tests for this API.\\n- Adapt the changes in the serialisation interface in the backing store property\\n  tests. This will involve adding boilerplate code in consensus to make up for\\n  the removal of the `cborg`-based interface.\\n\\n## LSM tree implementation\\n\\nWe worked on the [LSM tree\\nprototype](https://github.com/input-output-hk/ouroboros-network/issues/4121). In\\nparticular, we focused on tuning the LSM tree design to the different workloads\\nthat consensus has (eg syncing, normal node operation, etc).\\n\\n### Benchmarking the CSJ prototype\\n\\nWork on improving the chain-sync jumping performance is ongoing. In particular\\nwe compared the performance of different jump intervals, which, somewhat\\nsurprisingly, do not make a significant difference. In particular, we are seeing\\nperiodic \\"plateaus\\" where the chain-sync tip does not progress, but they are\\nmuch longer for the prototype. Our hypothesis is that this seem to be due to a\\ncombination of the garbage collector (GC) pauses, and the actual time it takes\\nthe non-dynamo chain-sync peers to jump to the tip of the slot of the dynamo\\nfragment.\\n\\nIn the coming weeks we will try to shorten these plateaus via a combination of\\ntweaking GC options and less synchronisation in the CSJ governor.\\n\\nThe following plot shows the performance of the chain-sync jumping prototype\\nusing different jumping intervals. It compares the syncing progress by plotting\\nthe slots of adopted blocks against time. The baseline is still faster, however\\nit is worth noting that the current prototype already achieves a significant\\nspeedup when compared to the naive approach of simply running full chain-sync\\nwith all peers.\\n\\n![](/images/consensus/2022-11-02-csj-vs-baseline.svg)\\n\\nThe second plot shows the syncing progress sliced to a chosen ~5min interval,\\nand includes, in addition to the slots of adopted blocks, the slots of the tip\\nof the ChainSync fragment. This allows us to see how far ahead of the selected\\ntip the CS dynamo is, i.e. how much room we have for BlockFetch not to get\\nstalled. It shows periodic behaviour (due to the forecasting limit), and shows\\nthat the CS fragment tip is not progressing for significant periods\\n(\\"plateaus\\").\\n\\n![](/images/consensus/2022-11-02-csj-vs-baseline-sliced.svg)\\n\\n## Technical debt\\n\\nWe [clarified](https://github.com/input-output-hk/ouroboros-network/pull/4098) a\\ncommon source of confusion around VRF tie-breaking and cross-era chain\\nselection. This PR involved correcting potentially misleading names of\\nVRF-related functions, and providing context for a particular VRF value is\\nused for tie-breaking."},{"id":"2022-11-02-ledger","metadata":{"permalink":"/cardano-updates/2022-11-02-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-02-ledger.md","source":"@site/blog/2022-11-02-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":2.275,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-11-02-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-10-02-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-11-02-node-cli-api"}},"content":"## High level summary\\nWe have made the decision to use the\\n[formal ledger repository](https://github.com/input-output-hk/formal-ledger-specifications)\\nin place of a LaTeX spec for the next ledger era, and have added a lot of basic infrastructure\\nto the model. In particular, we now have a lot of support for axiomatic set theory.\\nWhile the next ledger era is still in the design phase, most of the team remains working\\non technical debt.\\nIn particular, we have moved a lot more code out of the Shelley specific modules and into\\na ledger core module, we have finished up our benchmarking around the problematic `TICKF`\\nledger transition (while improving the performance), made conveniences to the development\\nenvironment, cleaned up all the recent changes to the cost model, added a lot of documentation,\\nfixed some flaky tests, and deleted some dead code.\\n\\n## Lower level summary\\n\\n### Axiomatic Set Theory\\n\\nThe formal ledger model now has support for much of the set theory that we make use of in\\nthe formal ledger specifications. See [[pull-20]].\\n\\n### Completed Technical Debt\\n\\n- We have addressed issues with two of our most problematic and flaky tests.\\n  See [[pull-3039]] and [[pull-3093]].\\n- We have added more documentation and tests to the Twiddler module. This is a module which\\n  makes our CBOR serialization round-trip tests much more robust, and will also hopefully\\n  help enforce the mandate for downstream libraries to never re-serialize data that needs\\n  to be hashed. See [[pull-3073]] and [[pull-3095]]\\n  (we cannot merge 3095 just yet, due to a preference for merging other features).\\n- We have finished our long analysis of the problematic `TICKF` transition.\\n  We now have a lot of benchmarks surrounding this code, and have added performance improvements.\\n  See [[pull-3068]] and [[issue-3035]].\\n- We have restored support for\\n  [ghcid](https://hackage.haskell.org/package/ghcid)\\n  in our repository. This is a tool for developing with Haskell that many of us find greatly\\n  improves our productivity by providing us with constant feedback from the type checker.\\n  See [[pull-3112]].\\n- After much activity on the cost model, we have done some final clean up of the code.\\n  See [[pull-3075]] and [[pull-3101]].\\n- We moved a lot of the existing user facing documentation regarding native tokens into the\\n  ledger repository, and cleaned it up\\n  (most of the heavy lifting was done by our amazing technical writers).\\n  See [[pull-3091]].\\n- We removed dead code. See [[pull-3089]].\\n- We moved a lot of code from the Shelley specific libraries to the ledger core library.\\n  See [[pull-3109]] and [[pull-3110]].\\n- We\'ve removed more of the awkward legacy template Haskell names.\\n  See [[pull-3108]].\\n\\n[issue-3035]: https://github.com/input-output-hk/cardano-ledger/issues/3035\\n\\n[pull-20]: https://github.com/input-output-hk/formal-ledger-specifications/pull/20\\n[pull-3039]: https://github.com/input-output-hk/cardano-ledger/pull/3039\\n[pull-3093]: https://github.com/input-output-hk/cardano-ledger/pull/3093\\n[pull-3073]: https://github.com/input-output-hk/cardano-ledger/pull/3073\\n[pull-3095]: https://github.com/input-output-hk/cardano-ledger/pull/3095\\n[pull-3068]: https://github.com/input-output-hk/cardano-ledger/pull/3068\\n[pull-3112]: https://github.com/input-output-hk/cardano-ledger/pull/3112\\n[pull-3075]: https://github.com/input-output-hk/cardano-ledger/pull/3075\\n[pull-3101]: https://github.com/input-output-hk/cardano-ledger/pull/3101\\n[pull-3091]: https://github.com/input-output-hk/cardano-ledger/pull/3091\\n[pull-3089]: https://github.com/input-output-hk/cardano-ledger/pull/3089\\n[pull-3109]: https://github.com/input-output-hk/cardano-ledger/pull/3109\\n[pull-3110]: https://github.com/input-output-hk/cardano-ledger/pull/3110\\n[pull-3108]: https://github.com/input-output-hk/cardano-ledger/pull/3108"},{"id":"2022-11-02-node-cli-api","metadata":{"permalink":"/cardano-updates/2022-11-02-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-02-node-cli-api.md","source":"@site/blog/2022-11-02-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.265,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-11-02-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-11-02-ledger"},"nextItem":{"title":"Node Release Team Update","permalink":"/cardano-updates/2022-11-02-release"}},"content":"# 2022-11-02 - 2022-11-15\\n\\n## High level summary\\n- Documentation improvments\\n- Merged community contributions\\n- Exposing types from cardano-api requested by the community/other teamss\\n- Test output has been improved so diagnosing failures is now easier\\n- Enabling stale bot to close stale issues and PRs (reduces clutter on the node repo)\\n- Refactoring of cardano-testnet making it more useable as a library (ongoing)\\n- Release 1.35.4 was merged & released\\n\\n## Completed\\n\\n### cardano-cli\\n- [Community contributions - doc fixes and spelling errors](https://github.com/input-output-hk/cardano-node/pull/4567)\\n\\n### cardano-api\\n- [Reduce exposed modules in cardano-api](https://github.com/input-output-hk/cardano-node/pull/4546)\\n- [Add Ord instance for AddressInEra](https://github.com/input-output-hk/cardano-node/pull/4587)\\n- [Export TxTotalAndReturnCollateralSupportedInEra from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4496)\\n- [Expose TextEnvelopeCddl from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4635)\\n- [Expose txScriptValidityToScriptValidity in Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4628)\\n- [export RawBytesHexError](https://github.com/input-output-hk/cardano-node/pull/4599)\\n\\n### cardano-node\\n- [Add Plutus minting script doc](https://github.com/input-output-hk/cardano-node/pull/2883)\\n- [Improve test output](https://github.com/input-output-hk/cardano-node/pull/4575/files)\\n- [Enable stale bot](https://github.com/input-output-hk/cardano-node/pull/4586)\\n- [Add link to troubleshooting page in the wiki](https://github.com/input-output-hk/cardano-node/pull/4557)\\n- [Use environment files in Github Actions](https://github.com/input-output-hk/cardano-node/pull/4550)\\n\\n\\n### cardano-testnet\\n- [Add single entrypoint for starting testnets](https://github.com/input-output-hk/cardano-node/pull/4544)\\n- [Improve cardano-testnet test output](https://github.com/input-output-hk/cardano-node/pull/4575)\\n- [Reorder module hierarchy](https://github.com/input-output-hk/cardano-node/pull/4595)\\n\\n## In Progress\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-11-02-release","metadata":{"permalink":"/cardano-updates/2022-11-02-release","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-02-release.md","source":"@site/blog/2022-11-02-release.md","title":"Node Release Team Update","description":"Node Reelease Update","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"release","permalink":"/cardano-updates/tags/release"}],"readingTime":0.445,"hasTruncateMarker":false,"authors":[{"name":"Samuel Leathers","title":"Service Reliability Manager","url":"https://github.com/disassembler","imageURL":"https://github.com/disassembler.png","key":"disassembler"}],"frontMatter":{"title":"Node Release Team Update","slug":"2022-11-02-release","authors":"disassembler","tags":["release"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-11-02-node-cli-api"},"nextItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2022-11-02-system-test"}},"content":"## Node Reelease Update\\n## 2022-10-19 - 2022-11-02\\n\\n### Executive Summary\\nThe team is formalizing the new release process and team structure. Both preview/preprod environments have been reset,\\na temporary pv8 environment has been created for testing SECP before preview is updated to protocol version 8.\\n\\n1.35.4 release candidates have been created and are being tested internally and externally.\\n\\n### Completed\\n\\n- [1.35.4-rc1 tag](https://github.com/input-output-hk/cardano-node/commits/1.35.4-rc1)\\n- [1.35.4-rc2 tag (config changes only for preview)](https://github.com/input-output-hk/cardano-node/commits/1.35.4-rc1)\\n- [CHaP Migration] (https://github.com/input-output-hk/cardano-node/pull/4540)\\n\\n### In Progress\\n\\n- [Release 1.35.4](https://github.com/input-output-hk/cardano-node/commits/release/1.35)\\n\\n  * [Test Status](https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.4_rc1/src_docs/source/test_results/node/tag_1_35_4_rc1.rst)\\n\\n- [Cicero CI Migration](https://input-output-hk.github.io/cardano-updates/2022-08-12-sre)"},{"id":"2022-11-02-system-test","metadata":{"permalink":"/cardano-updates/2022-11-02-system-test","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-02-system-test.md","source":"@site/blog/2022-11-02-system-test.md","title":"System Test Team Update","description":"High level summary","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"system-test","permalink":"/cardano-updates/tags/system-test"}],"readingTime":0.4,"hasTruncateMarker":false,"authors":[{"name":"Dorin Solomon","title":"System Test Team Lead","url":"https://github.com/dorin100","imageURL":"https://github.com/dorin100.png","key":"dorin100"}],"frontMatter":{"title":"System Test Team Update","slug":"2022-11-02-system-test","authors":"dorin100","tags":["system-test"],"hide_table_of_contents":false},"prevItem":{"title":"Node Release Team Update","permalink":"/cardano-updates/2022-11-02-release"},"nextItem":{"title":"DB Sync Team Update","permalink":"/cardano-updates/2022-11-01-db-sync"}},"content":"## High level summary\\n\\nWe have been focused on:\\n* Fully opening our test results (on top of the existing tests & tools):  \\n  See [cardano-node-tests webpage](https://input-output-hk.github.io/cardano-node-tests/).\\n* Started to test and automate the new functionalities added in the `1.35.4-rc1` node tag  \\n  See [test results tracking page](https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.4_rc1/src_docs/source/test_results/node/tag_1_35_4_rc1.rst).\\n* Made some improvements to the automated db-sync sync tests  \\n  See [db-sync tests](https://github.com/input-output-hk/cardano-node-tests/tree/db_sync_tests/db_sync_tests).\\n* Multiple cleanups and updates to the cardano-node-tests framework\\n* Updated the nightly pipelines for the cardano-node-tests after the Babbage HF"},{"id":"2022-11-01-db-sync","metadata":{"permalink":"/cardano-updates/2022-11-01-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-11-01-db-sync.md","source":"@site/blog/2022-11-01-db-sync.md","title":"DB Sync Team Update","description":"High level summary","date":"2022-11-01T00:00:00.000Z","formattedDate":"November 1, 2022","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":0.86,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2022-11-01-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"System Test Team Update","permalink":"/cardano-updates/2022-11-02-system-test"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-10-28-hydra"}},"content":"## High level summary\\n\\nThe DBSync team is preparing a release which introduces schema simplifications, removes indexes,\\nunique and foreign keys. It also provides a way to fix older values and migrates without the need to\\nresync from genesis.\\n\\n## Lower level summary\\n\\n### Schema simplifications\\n\\nIndexes, Unique and Foreign keys are removed in order to speedup syncing\\n[#1295](https://github.com/input-output-hk/cardano-db-sync/pull/1295)\\nThe same pr also introduces a different way to rollback, which doesn\'t rely on foreign keys and\\nindexes.\\n\\n### Performance\\n\\nThe DBSync team ran a big number of benchmarks and investigated ways to speedup syncing. A\\nconservative number of these will be included in the next release and the rest can be found in\\n[performance view](https://github.com/orgs/input-output-hk/projects/52/views/7).\\n\\n### Migrations and resyncing\\n\\nThe next release will be 13.1.0, it will enable a migration without the need to resync. It will also\\nintroduce a procedure that fixes bytes values of Datum and RedeemerData in existing databases\\n[#1294](https://github.com/input-output-hk/cardano-db-sync/pull/1294)\\n\\n### Release\\n\\nThe release has been mostly cherry-picked from master\\n[#1294](https://github.com/input-output-hk/cardano-db-sync/pull/1294) and its scope can be seen\\n[release view](https://github.com/orgs/input-output-hk/projects/52/views/6)"},{"id":"2022-10-28-hydra","metadata":{"permalink":"/cardano-updates/2022-10-28-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-28-hydra.md","source":"@site/blog/2022-10-28-hydra.md","title":"Hydra Team Update","description":"High level summary","date":"2022-10-28T00:00:00.000Z","formattedDate":"October 28, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.795,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-10-28-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/cardano-updates/2022-11-01-db-sync"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-10-28-network"}},"content":"## High level summary\\n\\nThis week, the hydra team completed several user experience improvements to the\\n`hydra-tui` and `hydra-node`, and delivered a first version of persisted head\\nstates by publishing release version\\n[`0.8.0`](https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0).\\nBesides this, they met with researchers on topic of the HeadV1 specification and\\nkicked-off work on the RFP for an external audit of the Hydra Head protocol and implementation.\\n\\n## What did the team achieve this week\\n\\n- Completed the UX improvements on the `hydra-tui`\\n- Released version [`0.8.0`](https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0), which delivers a first version of persisted head states\\n- Met with researchers on the HeadV1 specification\\n- Started work on the RFP for our external audit\\n\\n## What are the goals of next week\\n\\n- Complete ADR18 implementation and get it merged\\n- Start work on event-sourced persistence [#580](https://github.com/input-output-hk/hydra-poc/issues/580)\\n- Have a first plutus script gap closed [#452](https://github.com/input-output-hk/hydra-poc/issues/452)\\n- Revamp CI to use flakes and build macos artifacts (stretch goal: migrate to cicero for nix builds)"},{"id":"2022-10-28-network","metadata":{"permalink":"/cardano-updates/2022-10-28-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-28-network.md","source":"@site/blog/2022-10-28-network.md","title":"Network Team Update","description":"High-level summary","date":"2022-10-28T00:00:00.000Z","formattedDate":"October 28, 2022","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":2.665,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-10-28-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-10-28-hydra"},"nextItem":{"title":"Performance & Tracing Team Update","permalink":"/cardano-updates/2022-10-28-performance-and-tracing"}},"content":"## High-level summary\\n\\nThe team has focused on debuging & fixing bugs for the **P2P single relay release**, which included\\n\\n* diagnosing, fixing and writing tests for a bug in `peer-state-actions` which\\n  fortunately hasn\'t been released;\\n* diagnosing & preventing misconfiguration of DNS\\n\\nWe also focused on developing **peer sharing**.  We also held a session with\\nthe scientists on eclipse evasion.\\n\\n## Detailed description\\n\\n### P2P Network Stack\\n\\nDuring the past two weeks the team focused on p2p single relay release and peer\\nsharing.  We found and fixed an important bug recently introduced in one of the\\ncomponents of p2p networking stack (fortunately never released).  Together with\\na fix, we designed a unit test diffusion simulation as well as quickcheck\\nproperty test (both could reproduce it). We also changed the code in a way that\\nif such a bug is reintroduced in the future, it will be obvious to diagnose.\\nFor more see:\\n\\n* [ouroboros-network#4067](https://github.com/input-output-hk/ouroboros-network/pull/4067)\\n* [ouroboros-network#4086](https://github.com/input-output-hk/ouroboros-network/pull/4086)\\n\\nInitial benchmarking run of the P2P code was executed.  The results where\\nunlike what we see on the mainnet.  We found a possible misconfiguration of the\\ncluster (caused by 0 TTL on domain names), which could be the direct cause of\\nit.  We wrote a PR which rules out such misconfiguration.  We are awaiting on\\nthe next benchmarking results.  See more at:\\n\\n[ouroboros-network#4106](https://github.com/input-output-hk/ouroboros-network/pull/4106)\\n\\nWe also started working on P2P single relay release.  The PR\\n[ouroboros-network#4120](https://github.com/input-output-hk/ouroboros-network/pull/4120)\\nincludes _108_ patches cherry-picked from the `master` branch.  We started\\nworking toward integration these changes against the release branch of\\n`cardano-node`.  Early next week we ought to be able to have an early version\\nof `cardano-node` with _non experimental P2P support_!\\n\\nFor more detailed release plan please see [P2P - Single\\nRelay](https://github.com/input-output-hk/ouroboros-network/issues/3888)\\nissue.\\n\\n### Consensus\\n\\nWe identified and fixed missing error reporting in consensus\\ninitialisation phase.  See more at\\n[ouroboros-network#4015](https://github.com/input-output-hk/ouroboros-network/pull/4015)\\n\\n### Cardano Node\\n\\nWe also made changes in `cardano-node` in order to give better experience for\\nnode operators.  This includes updating severities of some of the traces as\\nwell as implementing new format of the p2p topology file.  For more see:\\n\\n* [cardano-node#4563](https://github.com/input-output-hk/cardano-node/pull/4563).\\n* [cardano-node#4561](https://github.com/input-output-hk/cardano-node/pull/4561)\\n\\n### Peer Sharing\\n\\nWe continued working on implementation of peer sharing.  We have an early\\nimplementation which will be reviewed and analysed in next weeks.  We started\\nworking on `cardano-node` integration.  We need\\n[PR #4392](https://github.com/input-output-hk/cardano-node/pull/4392) to be merged\\nbefore such integration will be able to land in `cardano-node`, although this\\nis _not blocking_ us currently.  See more at:\\n\\n* [ouroboros-network#4019](https://github.com/input-output-hk/ouroboros-network/pull/4019)\\n\\n### Eclipse Evasion\\n\\nWe held a session which included Alexander Russel, Sandro Coretti-Drayton and\\nNick Frisby from the consensus team.  We discussed high lever design of the\\neclipse evasion scheme, which is important for the design and implementation of\\n`ouroboros-genesis`.  We got a positive feedback from the researchers.\\n\\n### IO-Sim\\n\\nIn this period we made little progress towards releasing `IO-Sim` on Hackage.\\nA single [PR](https://github.com/input-output-hk/io-sim/pull/32) which added\\na few missing instances of the `STM` monad.\\n\\n### Open Source\\n\\nWe made sure the CI runs for PRs which comes from forks (which is important to\\naccept contributions from 3rd parties).\\n\\n### Mithril Cardano Integration\\n\\nWe held initial discussions with Arnaud Bailly about possible path to integrate\\nmithril to `cardano-node` and take advantage of the `ouroboros-network`\\ndiffusion layer."},{"id":"2022-10-28-performance-and-tracing","metadata":{"permalink":"/cardano-updates/2022-10-28-performance-and-tracing","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-28-performance-and-tracing.md","source":"@site/blog/2022-10-28-performance-and-tracing.md","title":"Performance & Tracing Team Update","description":"High level summary","date":"2022-10-28T00:00:00.000Z","formattedDate":"October 28, 2022","tags":[{"label":"performance-tracing","permalink":"/cardano-updates/tags/performance-tracing"}],"readingTime":1.155,"hasTruncateMarker":false,"authors":[{"name":"Serge Kosyrev","title":"Performance and Tracing Team Lead","url":"https://github.com/deepfire","imageURL":"https://github.com/deepfire.png","key":"deepfire"}],"frontMatter":{"title":"Performance & Tracing Team Update","slug":"2022-10-28-performance-and-tracing","authors":"deepfire","tags":["performance-tracing"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-10-28-network"},"nextItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2022-08-12-sre"}},"content":"## High level summary\\n\\nOn the performance side, the team ran benchmarks for the the P2P feature and the 1.35.4 release.  We finished a prototype for performance data publishing.  We almost finished the local deployment backend for the workbench using the new SRE deployment infra.  We worked on fixing and improving our data analysis pipeline.\\n\\nOn the tracing side, the team worked on isolating a critical issue causing message loss in the remote tracing backend.  The issue was resolved and we now have proper end-to-end coverage for the scenario.\\n\\n## Executive summary\\n\\n- The new tracing system public release is getting closer, as we\'re resolving remaining rough edges that are discovered in full-scale deployments.  The local benchmarks we ran were already showing improvement relative to legacy tracing, so we expect similar results at full scale.\\n- The first (local deployment) iteration of benchmarking adopting the new SRE deployment infra is nearly done.  We thank Michael Fellinger and Robin Stumm for their assistance.  Two further phases remain:  CI integration and cloud deployment.\\n- The benchmarking data publishing prototype is ready.  This serves as a springboard for both opening our performance assessment workflow (to support the wider Cardano developer community), and for data provision to the business community.  Our next steps are to secure a permanent deployment for this mechanism and to integrate it into the benchmarking infrastructure.  This requires collaboration with SRE."},{"id":"2022-08-12-sre","metadata":{"permalink":"/cardano-updates/2022-08-12-sre","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-28-sre.md","source":"@site/blog/2022-10-28-sre.md","title":"SRE Team Update","description":"High level summary","date":"2022-10-28T00:00:00.000Z","formattedDate":"October 28, 2022","tags":[{"label":"sre","permalink":"/cardano-updates/tags/sre"}],"readingTime":3.04,"hasTruncateMarker":false,"authors":[{"name":"Michael Fellinger","title":"SRE Team Lead","url":"https://github.com/manveru","imageURL":"https://github.com/manveru.png","key":"manveru"}],"frontMatter":{"title":"SRE Team Update","slug":"2022-08-12-sre","authors":"manveru","tags":["sre"],"hide_table_of_contents":false},"prevItem":{"title":"Performance & Tracing Team Update","permalink":"/cardano-updates/2022-10-28-performance-and-tracing"},"nextItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2022-10-27-crypto"}},"content":"## High level summary\\n\\nThe SRE team is heavily working on the Equinix Metal migration, replacing Hydra\\nwith Cicero, and a new version of Spongix.\\n\\n## Lower level summary\\n\\n### OpenZiti\\n\\n- Work is ongoing on our OpenZiti integration into Bitte in [[bitte-zt]].\\n- CI-World deployment of Darwin CI Ziti service in [[ci-world-commit-d40f4d]].\\n- Multiple issues filed, and a lot of discussion with the OpenZiti developers,\\n  we\'re making pretty rapid progress thanks to them.\\n- Work on getting Equinix baremetal machines integrated into AWS World Bitte\\n  clusters utilizing a Ziti ZTNA network overlay to bridge the networking of\\n  the two environments and get IAM extension to Equinix machine for Nomad\\n  client onboarding.\\n- A Nix Flake for most of our OpenZiti dependencies including the Console,\\n  Controller, Edge Tunnel, and Router is now at [[openziti-bins]].\\n- The Flake also includes a WiP NixOS modules for these components.\\n- Tested Ziti Desktop Edge official app for Darwin x86_64 w/ GUI -- works with\\n  no issues seen so far\\n- Moved the console to traefik routing service (`zac.$DOMAIN`) and\\n  controller/edge router stay at `zt.$DOMAIN`, but have registered consul\\n  services\\n\\n### Cicero & Tullia Integrations\\n\\n- Added webhook for [[haskell.nix]].\\n- Finished Cicero CI action for [[cardano-addresses-pull-205]].\\n- Fixed cardano-prelude cicero action in [[cardano-prelude-pull-176]].\\n- Fixed the `abcird-stdlib/publish` action [[abcirdc-pull-104]]\\n- fix error on vm-bigdisk flake configs [[cicero-pull-66]].\\n- Helped with Cicero actions and answered questions for [[plutus]]\\n  [[cardano-prelude]], and [[abcirdc]].\\n- Merged [[cardano-base-pull-323]] for Tullia on cardano-base.\\n- Merged Cicero action in [[cardano-ogmios-pull-5]].\\n- Opened [[cardano-explorer-app-pull-427]] to add Tullia and Cicero.\\n- Opened [[cardano-ledger-pull-3097]] to add Cicero CI action.\\n- Opened [[cardano-node-pull-4489]] to add Tullia and Cicero, including\\n  OS-agnostic jobs.\\n- Opened [[ouroboros-network-pull-4108]] to add Cicero action.\\n- Reviewed [[plutus-pull-4918]] and helped test it.\\n- Update Tullia in [[abcirdc-pull-97]] to build if a tag is given.\\n\\n### Cicero & Tullia Features\\n\\n- Improvements to Tullia task aggregation to make [[cardano-addresses]] build\\n  correctly.\\n- Better tullia CUE lib default for tags [[tullia-commit-4df3c5d]].\\n- Put `cache.nixos.org` back in `cache.iog.io`\'s upstreams. This is now\\n  considered a public cache again, and without it some Cicero evaluations had\\n  to build huge packages.\\n- Started working on a flake-parts module for Tullia.\\n- Started working on cutting down Tullia task build time by putting facts in\\n  JSON files.\\n- Fixed running into kernel arg limit by reading tullia\'s DAG from a file\\n- Merged [[tullia-pull-9]] that fixes several issues related to error reporting.\\n  and escaping.\\n- Added Mac builders in Cicero on CI-World.\\n- Started work on Tullia invocation caching.\\n\\n### Spongix\\n\\n- A lot of progress on an SQlite backed version of Spongix, it already supports\\n  the full HTTP binary cache protocol but still lacks comprehensive testing and\\n  some tuning, as well as recursive lookups.\\n- First steps in the implementation of the `nix-daemon` `ssh-ng` protocol so\\n  Spongix can be used via SSH and we can get rid of basic auth.\\n\\n### Bugs\\n\\n- Discovered Cicero bug where Nomad reschedules cause the Github commit status\\n  to get stuck in `pending`\\n- Discovered Cicero race condition bug around concurrent transactions for\\n  codependent actions.\\n- Fixed tullia task order bug in [[cardano-addresses]]\\n- Diagnose Cicero action not triggered in [[abcirdc]]\\n- Fixed meta/description of the Tullia package in [[tullia-pull-7]]\\n- Add Vault token loop alerts in [[bitte-cells-pull-40]]\\n- Ongoing investigation on recurring Patroni and nomad-follower issues related\\n  to token rotation.\\n\\n[abcirdc]: https://github.com/input-output-hk/abcirdc\\n[abcirdc-pull-104]: https://github.com/input-output-hk/abcirdc/pull/104\\n[abcirdc-pull-97]: https://github.com/input-output-hk/abcirdc/pull/97\\n[bitte-cells-pull-40]: https://github.com/input-output-hk/bitte-cells/pull/40\\n[bitte-zt]: https://github.com/input-output-hk/bitte/compare/zt\\n[cardano-addresses]: https://github.com/input-output-hk/cardano-addresses\\n[cardano-addresses-pull-205]: https://github.com/input-output-hk/cardano-addresses/pull/205\\n[cardano-base-pull-323]: https://github.com/input-output-hk/cardano-base/pull/323\\n[cardano-explorer-app-pull-427]: https://github.com/input-output-hk/cardano-explorer-app/pull/427\\n[cardano-ledger-pull-3097]: https://github.com/input-output-hk/cardano-ledger/pull/3097\\n[cardano-node-pull-4489]: https://github.com/input-output-hk/cardano-node/pull/4489\\n[cardano-ogmios-pull-5]: https://github.com/input-output-hk/cardano-ogmios/pull/5\\n[cardano-prelude]: https://github.com/input-output-hk/cardano-prelude\\n[cardano-prelude-pull-176]: https://github.com/input-output-hk/cardano-prelude/pull/176#issuecomment-1280947946\\n[cicero-pull-66]: https://github.com/input-output-hk/cicero/pull/66\\n[ci-world-commit-d40f4d]: https://github.com/input-output-hk/ci-world/commit/d40f4d19187a2128b6f0d63bde7e3f9a33071994\\n[haskell.nix]: https://github.com/input-output-hk/haskell.nix\\n[openziti-bins]: https://github.com/johnalotoski/openziti-bins\\n[ouroboros-network-pull-4108]: https://github.com/input-output-hk/ouroboros-network/pull/4108\\n[plutus]: https://github.com/input-output-hk/plutus\\n[plutus-pull-4918]: https://github.com/input-output-hk/plutus/pull/4918\\n[tullia-commit-4df3c5d]: https://github.com/input-output-hk/tullia/commit/4df3c5d956f1b062b950643da12768ae71acf245\\n[tullia-pull-7]: https://github.com/input-output-hk/tullia/pull/7\\n[tullia-pull-9]: https://github.com/input-output-hk/tullia/pull/9"},{"id":"2022-10-27-crypto","metadata":{"permalink":"/cardano-updates/2022-10-27-crypto","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-27-crypto.md","source":"@site/blog/2022-10-27-crypto.md","title":"Crypto Team Update","description":"High level overview","date":"2022-10-27T00:00:00.000Z","formattedDate":"October 27, 2022","tags":[{"label":"crypto","permalink":"/cardano-updates/tags/crypto"}],"readingTime":1.095,"hasTruncateMarker":false,"authors":[{"name":"I\xf1igo Querejeta Azurmendi","title":"Cardano Lead Cryptography Engineer","url":"https://github.com/iquerejeta","imageURL":"https://github.com/iquerejeta.png","key":"iquerejeta"}],"frontMatter":{"title":"Crypto Team Update","slug":"2022-10-27-crypto","authors":"iquerejeta","tags":["crypto"],"hide_table_of_contents":false},"prevItem":{"title":"SRE Team Update","permalink":"/cardano-updates/2022-08-12-sre"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-10-21-hydra"}},"content":"## High level overview\\n\\nThe crypto team is primarily focusing in enabling SECP primitives, and preparing the KES agent. We are close to\\nmeeting the [acceptance criteria](https://github.com/input-output-hk/cardano-base/issues/315) in cardano-base,\\nwhich lacks some editorial comments on the style of dQuandrant\'s PR, the inclusion of one additional test, and\\nwe are good to mark it as done. For the KES agent, we are still iterating over the best design of the solution,\\nbut also progressing on the implementation.\\n\\n## Low level overview\\n### SECP built-ins\\n* (missed last two weeks update) Audit was succesfully completed by bCryptic, and some minor changes where addressed in [PR 313](https://github.com/input-output-hk/cardano-base/pull/313)\\n* CIP-0049 was addressed in the editors meeting, and [PR 250](https://github.com/cardano-foundation/CIPs/pull/250) was merged\\n* The unit-tests [PR 320](https://github.com/input-output-hk/cardano-base/pull/320) is opened. Some editorial concerns still need to be addressed, and an additional (negative) test has been requested for addition.\\n\\n### KES agent\\n* We were working in investigating how to send OpCerts to KES agents, but turns out to be not necessary. OpCerts can be stored on-disk, so the agent does not need to be aware of them.\\n* We are redesigning the architecture. Instead of connecting the control server to the agent, and then the latter to the node, we are directly connecting the control server to the node, and the latter to the agent(s)."},{"id":"2022-10-21-hydra","metadata":{"permalink":"/cardano-updates/2022-10-21-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-21-hydra.md","source":"@site/blog/2022-10-21-hydra.md","title":"Hydra Team Update","description":"High level summary","date":"2022-10-21T00:00:00.000Z","formattedDate":"October 21, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":0.97,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-10-21-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Crypto Team Update","permalink":"/cardano-updates/2022-10-27-crypto"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-10-19-node-cli-api"}},"content":"## High level summary\\n\\nThis week, the hydra team reviewed and addressed several open comments on the\\nnew HeadV1 specification, completing a list the of identified gaps between\\nspecification and implementation while doing so. In the wake of the recent\\ndemonstration of SundaeSwap running their DEX in a Hydra Head, they met with\\nthem to capture feature ideas & incorporate their feedback on the roadmap, as\\nwell as potential research avenues.\\n\\n### What did the team achieve this week\\n\\n- Had the monthly review meeting, a bit earlier than expected: <https://input-output.atlassian.net/wiki/spaces/HYDRA/pages/3650813953/Monthly+report+-+October+2022>\\n- Reviewed and addressed several open comments on HeadV1 specification.\\n- Completed the list of identified gaps between specification and implementation [#452](https://github.com/input-output-hk/hydra-poc/issues/452)\\n- Had two meetings with SundaeSwap to incorporate their feedback (on research and on the roadmap).\\n- Some small fixes on TUI and our docker images. [#538](https://github.com/input-output-hk/hydra-poc/issues/538) [#562](https://github.com/input-output-hk/hydra-poc/pull/562)\\n- Met with the internal audit team and clarified scope.\\n\\n### What are the goals of next week\\n\\n- Complete the last two items required for a version `0.8.0`.\\n- Cut the next release, version `0.8.0`\\n- Get backup/recovery [#187](https://github.com/input-output-hk/hydra-poc/issues/187) done with proper event sourcing (ADR18)\\n- Have the CI build macos artifacts"},{"id":"2022-10-19-node-cli-api","metadata":{"permalink":"/cardano-updates/2022-10-19-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-19-node-cli-api.md","source":"@site/blog/2022-10-19-node-cli-api.md","title":"Node API & CLI Team Update","description":"High level summary","date":"2022-10-19T00:00:00.000Z","formattedDate":"October 19, 2022","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":1.57,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-10-19-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-10-21-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-10-18-consensus"}},"content":"# 2022-10-19 - 2022-11-01\\n\\n## High level summary\\n\\nThis sprint saw the addition of the long awaited tx-mempool command that allows user to query the local node\'s mempool for the following information:\\n- Ask the node about the current mempool\'s capacity and sizes\\n- Request the next transaction from the mempool\'s current list\\n- Query if a particular transaction exists in the mempool\\n\\nOutside of this feature the team has been focused on responding to user requests (e.g exposing functions, types and implementing instances they need) and refactoring cardano-cli/cardano-api. The metric `tx_submit_fail_count` has been added to the submit api so users can track how many transactions have failed. Other improvements have been made:\\n- Documentation improvments\\n- Release 1.35.4 was merged & released\\n- Exported various types from cardano-api that were requested by community members\\n\\n## Completed\\n\\n- [Release 1.35.4](https://github.com/input-output-hk/cardano-node/pull/4508)\\n\\n### cardano-cli\\n- [Add tx-mempool command to CLI](https://github.com/input-output-hk/cardano-node/pull/4276)\\n- [BUGFIX] - [Fix query era mismatch bug in transaction build command](https://github.com/input-output-hk/cardano-node/pull/4538)\\n- [Serenity] - [Condense Read and Validation modules in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4516)\\n\\n### cardano-api\\n- [Return Lovelace for calculateMinimumUTxO](https://github.com/input-output-hk/cardano-node/pull/4482)\\n- [Export IsPlutusScriptLanguage from cardano-api](https://github.com/input-output-hk/cardano-node/pull/4554)\\n- [Reduce exposed modules in cardano-api](https://github.com/input-output-hk/cardano-node/pull/4546)\\n- [Add ToJSON and FromJSON instances for Address](https://github.com/input-output-hk/cardano-node/pull/4568)\\n- [Export TxIns type alias from Cardano.Api](https://github.com/input-output-hk/cardano-node/pull/4565)\\n- [Export more generators from cardano-api](https://github.com/input-output-hk/cardano-node/pull/4534)\\n\\n### cardano-submit-api\\n- [Add tx_submit_fail_count metric](https://github.com/input-output-hk/cardano-node/pull/4566)\\n\\n### cardano-node\\n- [Upgrade to cabal-3.8.1.0](https://github.com/input-output-hk/cardano-node/pull/4549)\\n- [Update building-the-node-using-nix.md](https://github.com/input-output-hk/cardano-node/pull/4613)\\n\\n### cardano-testnet\\n- None\\n\\n## In Progress\\n\\n### cardano-cli\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Multiple pools support in query stake snapshot](https://github.com/input-output-hk/cardano-node/pull/4279)\\n- [Optimise query leadership schedule command](https://github.com/input-output-hk/cardano-node/pull/4250)\\n- [Optimise query stake snapshot command](https://github.com/input-output-hk/cardano-node/pull/4179)\\n- [Debug output for transaction submit](https://github.com/input-output-hk/cardano-node/pull/3819)\\n\\n### cardano-api\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n\\n### cardano-node\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-10-18-consensus","metadata":{"permalink":"/cardano-updates/2022-10-18-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-18-consensus.md","source":"@site/blog/2022-10-18-consensus.md","title":"Consensus Team Update","description":"High-level summary","date":"2022-10-18T00:00:00.000Z","formattedDate":"October 18, 2022","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":3.225,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-10-18-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-10-19-node-cli-api"},"nextItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-10-14-hydra"}},"content":"## High-level summary\\n\\nDuring the past two weeks, the consensus team worked on adding property test for\\ndifferent aspects of the UTxO HD prototype: era transitions, mempool, and\\nbacking store. Thanks to these tests we were able to uncover a bug in the\\nprototype. On the Genesis front, we benchmarked a different version of the\\nChainSync jumping prototype to try to improve its performance, but this did not\\nresult in any noticeable speedup.\\n\\n## High-level status report\\n\\n- Finish the UTxO HD prototype: on track.\\n  - We focused on increasing test coverage for the UTxO-HD prototype:\\n    - We started implementing Cadano-eras transition property-tests.\\n    - We started implementing state-machine property-tests for the mempool.\\n    - We merged the mempool rewrite.\\n    - We started working on state-machine tests for the backing store. This\\n      uncovered a bug in the range-read implementation of the LMDB backing\\n      store.\\n- Genesis: on track.\\n  - We benchmarked a version of the Genesis ChainSync Jumping prototype that\\n    spreads out the ChainSync updates over a longer period of time. This did not\\n    result in any noticeable speedup.\\n  - We investigated the overhead introduced by non-ChainSync components, but no\\n    conclusions could be drawn from the benchmarks we ran.\\n\\n## Workstreams\\n\\n### Finish the UTxO HD prototype\\n\\nWe focused on increasing test coverage for the UTxO HD prototype. We also merged\\nthe [mempool\\nrewrite](https://github.com/input-output-hk/ouroboros-network/pull/4049).\\n\\n#### Era transition property tests\\n\\nWe started implementing [Cardano era transition property\\ntests](https://github.com/input-output-hk/ouroboros-network/issues/4043),\\nwhich are needed for making sure that the ledger tables get updated in the\\nright way when we move from one era to the next. There are at the moment two\\nimportant transitions.\\n- Byron to Shelley: where all the UTxO is transferred from in-memory Byron\\n  state (which has no tables) to the ledger tables of the Shelley state.\\n- Shelley to Allegra: where the AVVM addresses must be deleted.\\n\\nWe have tests for the Byron to Shelley transitions. We are working on adding\\nthe remaining ones.\\n\\n#### Mempool state-machine tests\\n\\nWe started implementing [state-machine property tests for the\\nmempool](https://github.com/input-output-hk/ouroboros-network/issues/4044).\\nThe mempool is currently tested via pure property tests, and use a ledger\\nstate without tables. With the introduction of UTxO HD, testing the concurrent\\nbehavior of the mempool became of crucial importance (eg now we have to\\nacquire locks to flush the backing store). In addition, we need to test a\\nledger state with tables. These needs led to the creation of a new set of\\nproperty tests. In particular we aim to run parallel state-machine tests that\\nexercise the mempool in a way similar to how the node would make use of it.\\n\\n#### Backing store property tests\\n\\nWe started working on [state-machine tests for the backing\\nstore](https://github.com/input-output-hk/ouroboros-network/pull/4081) that UTxO\\nHD uses. The property tests uncovered errors in the range-reads implementation\\nof the LMDB backing store. To facilitate fixing this bug, we made\\n[changes](https://github.com/input-output-hk/lmdb-simple/pull/1) to the Haskell\\nLMDB bindings.\\n\\n### Benchmarking the CSJ prototype\\n\\nPrompted by previous benchmarks showing significant improvements in sync time by\\nusing more capabilities, we implemented a way to spread out the ChainSync\\nupdates over a larger period instead of firing them all at the same time. This\\ndidn\'t result in a noticeable speedup.\\n\\nWe also benchmarked the prototype with CSJ disabled (such that just the dynamo\\npeer is running ChainSync, but e.g. BlockFetch still sees all peers) to rule\\nout/confirm overhead by non-ChainSync (mainly BlockFetch) related components.\\nThis results in era-specific behavior (speed is like the prototype in Byron, but\\nlike the baseline in Shelley). This deserves a closer look in the future.\\n\\nThis diagram shows the respective syncing progress, starting at Genesis and\\ncontinuing a good part into Shelley (with the dashed line indicating the\\nByron-to-Shelley transition).\\n\\n - Red: baseline\\n - Green: CSJ prototype, 10 peers, jumps every 3000/f slots, jumps in clumps.\\n - Blue: like Green, jumps are spread out.\\n - Orange: variant with no jumping, to measure unrelated overhead.\\n\\n![](/images/happy-path-csj-prototype-bench-2.svg)"},{"id":"2022-10-14-hydra","metadata":{"permalink":"/cardano-updates/2022-10-14-hydra","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-14-hydra.md","source":"@site/blog/2022-10-14-hydra.md","title":"Hydra Team Update","description":"High level summary","date":"2022-10-14T00:00:00.000Z","formattedDate":"October 14, 2022","tags":[{"label":"hydra","permalink":"/cardano-updates/tags/hydra"}],"readingTime":1.26,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Nagel","title":"Hydra Team Lead","url":"https://github.com/ch1bo","imageURL":"https://github.com/ch1bo.png","key":"ch1bo"}],"frontMatter":{"title":"Hydra Team Update","slug":"2022-10-14-hydra","authors":"ch1bo","tags":["hydra"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-10-18-consensus"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-10-14-ledger"}},"content":"## High level summary\\n\\nThis week, the hydra team worked on implementing ADR18 to get backup & restore functionality of the `hydra-node` over the line. Although not fully there yet, an early version of that feature was already needed and succesfully tested by SundaeSwap in their recent demonstration of their DEX running on Hydra. The team also worked on the updated specificaton, met with the researchers and discussed a solution for how to secure rollbacks \\"past the opening of a Head\\". We also reponded to recent requests for static executables and prioritized that feature higher, implemented it and merged it.\\n\\n## What did the team achieve this week\\n\\n- Last week we thought we were done with [ADR18](https://hydra.family/head-protocol/adr/18/), but were not ...\\n- ... instead, SundaeSwap has been preparing their Rare bloom Hydra demo & needed assistence.\\n- Implemented a first version for persistence [#187](https://github.com/input-output-hk/hydra-poc/issues/187) in response.\\n- Enhanced CI to publish test results [on our website](https://hydra.family/head-protocol/benchmarks/tests/hydra-node/hspec-results)\\n- Engineering meeting -> discussed rollbacks and discovered a solution for the rollback past open problem!\\n- Pulled static executable feature [#200](https://github.com/input-output-hk/hydra-poc/issues/200) into scope, implemented it and merged it!\\n- Received and read through a project proposal by a vendor (building a Hydra platform).\\n\\n## What are the goals of next week\\n\\n- Get backup/recovery [#187](https://github.com/input-output-hk/hydra-poc/issues/187) done with proper event sourcing (ADR18)\\n- Cut the next release, version `0.8.0`\\n- Address open comments on specification document & complete the list of identified gaps between specification and implementation [#452](https://github.com/input-output-hk/hydra-poc/issues/452)\\n- Have the CI build macos artifacts"},{"id":"2022-10-14-ledger","metadata":{"permalink":"/cardano-updates/2022-10-14-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-14-ledger.md","source":"@site/blog/2022-10-14-ledger.md","title":"Ledger Team Update","description":"High level summary","date":"2022-10-14T00:00:00.000Z","formattedDate":"October 14, 2022","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":2.03,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-10-14-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Hydra Team Update","permalink":"/cardano-updates/2022-10-14-hydra"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-10-05-consensus"}},"content":"## High level summary\\n\\nThe ledger team is still primarily focused on addressing\\n[technical](https://github.com/input-output-hk/cardano-ledger/issues?q=is%3Aissue+is%3Aopen+label%3A%22%3Acredit_card%3A+technical-debt%22)\\n[debt](https://github.com/input-output-hk/cardano-ledger/projects/3).\\nWe now have the infrastructure for versioning our serialization schemes,\\nwhich we continue to put into action.\\nWe have made first steps towards getting proper support for the\\n[formal ledger repository](https://github.com/input-output-hk/formal-ledger-specifications)\\n(in particular, we\'ve added nix builds and\\ncontinuous integration support).\\nWe are wrapping up an investigation of the performance of a critical\\nfunction used by the consensus layer for leader checks.\\nFinally, we are improving the packaging and versioning of our code.\\n\\n## Lower level summary\\n\\n### Completed Technical Debt\\n\\n- Because the Shelley ledger era was a complete re-write of the Byron ledger era, a lot of\\n  our code lives in the `cardano-ledger-shelley` package, though with hindsight we can say that\\n  much of it should live in `cardano-ledger-core`.\\n  We continue to move things to `cardano-ledger-core`, and have much more to come. [[pull-3059]]\\n- We now have the infrastructure to support **versioned** serialization schemes.\\n  The inability to do this has caused us a lot difficulties,\\n  such as [[issue-3003]], [[issue-2965]] and [[issue-2444]].\\n  We are still in the process of switching to the versioned serialization scheme\\n  (such as [[pull-3078]]),\\n  but the infrastructure was completed in [[pull-3063]].\\n- We now have proper nix and CI support for the formal ledger project. [[pull-19]]\\n- A separate team is helping bring support for\\n  [CHaP](https://github.com/input-output-hk/cardano-haskell-packages)\\n  to all the cardano-node repositories.\\n  We have been helping out with this effort.\\n* A separate team continues working on upgrading all the\\n  cardano-node repositories to work with ghc 9.2.4.\\n  We have been helping out with this effort.\\n\\n### In-progress Technical Debt\\n\\nWe also have several fairly large pull-requests in review\\nthat we are working on.\\n\\n- In an on-going attempt to build out a more user-friendly API,\\n  we continue to remove `HasField` instances in place of using micro-lenses.\\n  The protocol parameters, in particular, are being worked on. [[pull-3045]]\\n- We are also renaming record fields to be consistent across the repository. [[pull-3062]]\\n- We are now cleaning up all the work we did to understand the performance\\n  of the TICKF transition. We have some improvements to the computatation\\n  as well. [[pull-3068]]\\n- We are adding more documentation, in particular to our `Twiddler` functionality. [[pull-3073]]\\n- The formal ledger is adding support for finite set theory. [[pull-20]]\\n\\n[issue-2444]: https://github.com/input-output-hk/cardano-ledger/issues/2444\\n[issue-2965]: https://github.com/input-output-hk/cardano-ledger/issues/2965\\n[issue-3003]: https://github.com/input-output-hk/cardano-ledger/issues/3003\\n\\n[pull-3059]: https://github.com/input-output-hk/cardano-ledger/pull/3059\\n[pull-3045]: https://github.com/input-output-hk/cardano-ledger/pull/3045\\n[pull-3062]: https://github.com/input-output-hk/cardano-ledger/pull/3062\\n[pull-3063]: https://github.com/input-output-hk/cardano-ledger/pull/3063\\n[pull-3068]: https://github.com/input-output-hk/cardano-ledger/pull/3068\\n[pull-3073]: https://github.com/input-output-hk/cardano-ledger/pull/3073\\n[pull-3078]: https://github.com/input-output-hk/cardano-ledger/pull/3078\\n[pull-19]: https://github.com/input-output-hk/formal-ledger-specifications/pull/19\\n[pull-20]: https://github.com/input-output-hk/formal-ledger-specifications/pull/20"},{"id":"2022-10-05-consensus","metadata":{"permalink":"/cardano-updates/2022-10-05-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-05-consensus.md","source":"@site/blog/2022-10-05-consensus.md","title":"Consensus Team Update","description":"High level summary","date":"2022-10-05T00:00:00.000Z","formattedDate":"October 5, 2022","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":1.825,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-10-05-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-10-14-ledger"},"nextItem":{"title":"DB Sync Team Update","permalink":"/cardano-updates/2022-10-04-db-sync"}},"content":"## High level summary\\n\\nDuring the past two weeks, the consensus team worked on improving the\\nperformance of the ChainSync jumping logic, which is needed for Genesis. We also\\nrewrote the implementation of the mempool in the UTxO HD prototype which solved\\nthe issues that prevented us from running system level benchmarks. Also on the\\nUTxO HD front, we have an improved implementation of the sequence-of-differences\\n(a crucial piece of UTxO HD), and we also elaborated a test sign-off list for\\nthe UTxO HD feature.\\n\\n## Executive summary\\n\\n- With the latest implementation of ChainSync jumping we are closer to the\\n  baseline performance. In particular, the prototype seems to benefit from the\\n  extra concurrency provided by additional capabilities.\\n- We rewrote the implementation of the mempool in the UTxO HD prototype. This\\n  rewrite was required due to performance problems we observed when running the\\n  [workbench](https://github.com/input-output-hk/cardano-node/blob/master/Makefile#L51).\\n  These performance problems prevented us from running system level benchmarks.\\n  The rewrite solved these issues. After the [UTxO-HD: mempool\\n  rewrite](https://github.com/input-output-hk/ouroboros-network/pull/4049) PR is\\n  merged, we will contact the Benchmarking team so that they run the system\\n  level benchmarks.\\n- The implementation of sequences of differences based on anti-diffs was\\n  integrated into the UTxO HD prototype. It is pending\\n  [review](https://github.com/input-output-hk/ouroboros-network/pull/4036) and\\n  we also need to run replay and syncing benchmarks to confirm that this will\\n  deliver a performance improvement, as observed in our micro-benchmarks.\\n- [The UTxO HD prototype\\n  inspection](https://github.com/input-output-hk/ouroboros-network/issues/3944)\\n  resulted in a [list of\\n  tests](https://github.com/input-output-hk/ouroboros-network/issues/4045)\\n  needed for consensus to consider the UTxO HD prototype as fully tested.\\n\\n## Additional information\\n\\n### Genesis\\n\\nBenchmarking setup: 50MBit/s, 50ms latency\\n\\n - Red: baseline\\n - Green: Current CSJ prototype, 10 peers, jumps every 3000/f slots.\\n\\nAs ChainSync Jumping involves many concurrent network operations at every jump,\\nwe tried to run the node with 6 instead of the default 2 capabilties.\\n\\n - Orange: baseline with 6 capabilities\\n - Blue: CSJ prototype with 6 capabilities\\n\\nThis diagram shows the respective syncing progress, starting at Genesis and\\ncontinuing a good part into Shelley (with the dashed line indicating the\\nByron-to-Shelley transition).\\n\\n![](/images/happy-path-csj-prototype-bench-1.svg)\\n\\nFurther work includes whether we can tune the prototype to better handle few\\ncapabilities, or to adapt the default number of capabilities (potentially just\\nwhile syncing)."},{"id":"2022-10-04-db-sync","metadata":{"permalink":"/cardano-updates/2022-10-04-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-04-db-sync.md","source":"@site/blog/2022-10-04-db-sync.md","title":"DB Sync Team Update","description":"DBSync Update","date":"2022-10-04T00:00:00.000Z","formattedDate":"October 4, 2022","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":1.65,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2022-10-04-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-10-05-consensus"},"nextItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-10-04-node-cli-api"}},"content":"## DBSync Update\\n\\n\\n### Fast restarts\\n We fixed a long overdue issue in db-sync which caused long delays on restarts\\n [1266](https://github.com/input-output-hk/cardano-db-sync/pull/1266). This has been\\n one of db-sync main objectives for this period. Restarts are now very fast,\\n because db-sync deletes almost nothing from the db, it just replays the ledger rules until it\\n reaches the tip of the db. The fix also improves reconnection speed, in cases where the node\\n restarts or the connection is temporarily lost. It also speeds up even more in cases where due to a\\n deployment mess up a very old snapshot or no snapshot at all is used.\\n\\n### Property based testing\\nWe added stateful property based testing, using `quickcheck-state-machine`\\n [1269](https://github.com/input-output-hk/cardano-db-sync/pull/1269). These tests use empty or\\n almost empty blocks to test the new behaviour of restarts and rollbacks.\\n\\n These tests generate arbitrarily a list of symbolic commands from these:\\n\\n```\\nRollForward Int\\nRollBack BlockNo\\nStopDBSync\\nStartDBSync\\nRestartNode\\nAssertBlockNo BlockNo\\n```\\n\\nThe commands are translated into real commands. For example `RollForward Int` will forge a new block\\nthat fits on the current chain. These real commands are executed against db-sync using the mock\\nchain-sync server. The symbolic commands are executed against a vesy simplistic Model of db-sync\\nwhich looks like this:\\n\\n``` haskell\\n  Model\\n    { serverTip :: BlockNo\\n    , dbSyncTip :: BlockNo\\n    , dbSynsIsOn :: Bool\\n    , dbSynsHasSynced :: Bool\\n    }\\n```\\n\\nFinally a number of postconditions are checked, related to the eventual block number of db-sync.\\n\\n### Tech Debt\\n\\nWe handled a number of tech debt in\\n [1275](https://github.com/input-output-hk/cardano-db-sync/pull/1275)\\n This improves the code format of db-sync, deletes many queries that were never used and groups the\\n others. This tech debt resolution not only improves the experience of working in db-sync, but can\\n facilitate some of our other objectives, as it makes it very explicit which queries are used\\n during syncing and which indexes are necessary.\\n\\n### Smash\\n\\nWe worked on fixing an issue related to fetching pool metadata\\n [1276](https://github.com/input-output-hk/cardano-db-sync/pull/1276).\\n The issue which is described in\\n [1270](https://github.com/input-output-hk/cardano-db-sync/issues/1270)"},{"id":"2022-10-04-node-cli-api","metadata":{"permalink":"/cardano-updates/2022-10-04-node-cli-api","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-04-node-cli-api.md","source":"@site/blog/2022-10-04-node-cli-api.md","title":"Node API & CLI Team Update","description":"Node-Api-Cli Update","date":"2022-10-04T00:00:00.000Z","formattedDate":"October 4, 2022","tags":[{"label":"cli-api","permalink":"/cardano-updates/tags/cli-api"}],"readingTime":0.98,"hasTruncateMarker":false,"authors":[{"name":"Jordan Millar","title":"Node Team Lead","url":"https://github.com/Jimbo4350","imageURL":"https://github.com/Jimbo4350.png","key":"Jimbo4350"}],"frontMatter":{"title":"Node API & CLI Team Update","slug":"2022-10-04-node-cli-api","authors":"Jimbo4350","tags":["cli-api"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/cardano-updates/2022-10-04-db-sync"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-09-30-ledger"}},"content":"## Node-Api-Cli Update\\n## 2022-10-04 - 2022-10-18\\n\\n### Executive Summary\\nThe majority of the team\'s time was spent between getting `1.34.4` ready, addressing various feature requests/issues/bugs that have arisen and refactoring components in the api and cli. The current refactoring is aimed at the long term goal of empowering users to be able to easily build applications similar to `cardano-cli`.\\n\\n### Completed\\n\\n- [GHC 9.2.4 preparations](https://github.com/input-output-hk/cardano-node/pull/4504)\\n\\n#### cardano-cli\\n\\n- [Serenity] - [Separate IO from txBuild and txBuildRaw functions](https://github.com/input-output-hk/cardano-node/pull/4491)\\n\\n#### cardano-api\\n\\n- [BUGFIX] - [TxWitness text envelope format does not roundtrip in Shelley era](https://github.com/input-output-hk/cardano-node/pull/4501)\\n\\n#### cardano-node\\n\\n- [Fix MacOS GHA CI](https://github.com/input-output-hk/cardano-node/pull/4526)\\n\\n### In Progress\\n\\n- [Release 1.34.4](https://github.com/input-output-hk/cardano-node/pull/4508)\\n\\n#### cardano-cli\\n\\n- [BUGFIX] - [Fix query era mismatch bug in transaction build command](https://github.com/input-output-hk/cardano-node/pull/4538)\\n- [Serenity] - [Condense Read and Validation modules in cardano-cli](https://github.com/input-output-hk/cardano-node/pull/4516)\\n- [BUGFIX]- [Stop the cli from changing the bytes in user-supplied data](https://github.com/input-output-hk/cardano-node/pull/4537)\\n- [Infer protocol params in transaction build](https://github.com/input-output-hk/cardano-node/pull/4431)\\n- [Allow assembling transactions with no witnesses](https://github.com/input-output-hk/cardano-node/pull/4408)\\n- [Add tx-mempool command to CLI](https://github.com/input-output-hk/cardano-node/pull/4276)\\n\\n### cardano-api\\n\\n- [Return Lovelace for calculateMinimumUTxO](https://github.com/input-output-hk/cardano-node/pull/4482)\\n- [Make TxBodyContent an instance of Monoid](https://github.com/input-output-hk/cardano-node/pull/4458)\\n- [Auto-balance multiasset transactions](https://github.com/input-output-hk/cardano-node/pull/4450)\\n\\n### cardano-node\\n\\n- [Stop running CI when the only changes are to docs](https://github.com/input-output-hk/cardano-node/pull/4263)\\n- [Rename TestEnableDevelopmentHardForkEras](https://github.com/input-output-hk/cardano-node/pull/4341)"},{"id":"2022-09-30-ledger","metadata":{"permalink":"/cardano-updates/2022-09-30-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-09-30-ledger.md","source":"@site/blog/2022-09-30-ledger.md","title":"Ledger Team Update","description":"Ledger Update","date":"2022-09-30T00:00:00.000Z","formattedDate":"September 30, 2022","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":2.285,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-09-30-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Node API & CLI Team Update","permalink":"/cardano-updates/2022-10-04-node-cli-api"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-09-27-network"}},"content":"## Ledger Update\\n\\nWe have continued focusing nearly entirely on addressing technical debt.\\nA lot of design work has begun for the next ledger era,\\nbut we do not yet have anything concrete to share.\\n\\n### Technical debt issues completed\\n\\n* [[issue-1676]][[pull-2992]] We have finally removed the ledger dependency on the\\n  `cardano-prelude` package. It was barely used in the ledger repository, and it added a dependency\\n  that we did not want to maintain. It was a bit difficult to remove, and we had\\n  to coordinate removing it from cardano-base.\\n  A lot ended up going into [pull-2992][pull-2992], due to the coordination effort, and we ended\\n  up updating Plutus as well.\\n  This means that we\'ve now also made a lot of progress on the problematic cost model serialization\\n  issues described in [issue-2902].\\n  In particular, after we resolve [issue-3014], we will not have to wait an epoch before\\n  releasing a cost model for a new version of Plutus, as we had to do for the Vasil HF.\\n* [[issue-3046]][[pull-3055]] We moved a module that is now only used in Byron to a Byron package.\\n* [[issue-3047]][[pull-3054]] We improved the interface to the `Value` (multi-asset) type.\\n* [[pull-3044]] We debugged and fixed a tricky compilation issue. Certain kinds of field updates\\n  were adding approximately 20 minutes to our compile time!\\n* [[issue-2932]][[pull-3036]] As a part of our ongoing re-organization of the codebase, we\\n  have added a `Cardano.Ledger.[Era].Core` module to each ledger era that has a TxBody class.\\n  Most classes defined in the era should go in this new module.\\n  We also re-export the `Cardno.Ledger.Core` module and the previous `Cardano.Ledger.[Era].Core`\\n  modules from each era.\\n\\n### Technical debt in progress\\n\\n* [[issue-3034]][[issue-3035]][[node-issue-4421]] We are continuing to write benchmarks to understand exactly where\\n  all the time is being spent on executing the `TICKF` transition.\\n  The consolidation of the per-stake-credential stake distribution to the per-stake-pool\\n  distribution does seem to account for a large amount of time (near a second as written, which we\\n  have down to about half a second with some optimizations),\\n  but this does not account for everything.\\n  Applying the reward update may also be a big contributing factor.\\n* [[pull-3033]][[pull-3038]][[pull-3041]] A separate team is working on upgrading all the\\n  cardano-node repositories to work with ghc 9.2.4. We have been helping out with this effort.\\n* The nix scripts used to build our new\\n  [formal ledger model](https://github.com/input-output-hk/formal-ledger-specifications)\\n  do not work consistently for everyone, and we have been working on fixing these issues.\\n* [[issue-3014]] We are still working on adding a versioning scheme to all of the ledger\\n  serializers.\\n\\n[issue-1676]: https://github.com/input-output-hk/cardano-ledger/issues/1676\\n[issue-2902]: https://github.com/input-output-hk/cardano-ledger/issues/2902\\n[issue-2932]: https://github.com/input-output-hk/cardano-ledger/issues/2932\\n[issue-3014]: https://github.com/input-output-hk/cardano-ledger/issues/3014\\n[issue-3034]: https://github.com/input-output-hk/cardano-ledger/issues/3034\\n[issue-3035]: https://github.com/input-output-hk/cardano-ledger/issues/3035\\n[issue-3046]: https://github.com/input-output-hk/cardano-ledger/issues/3046\\n[issue-3047]: https://github.com/input-output-hk/cardano-ledger/issues/3047\\n\\n[node-issue-4421]: https://github.com/input-output-hk/cardano-node/issues/4421\\n\\n[pull-2992]: https://github.com/input-output-hk/cardano-ledger/pull/2992\\n[pull-3033]: https://github.com/input-output-hk/cardano-ledger/pull/3033\\n[pull-3038]: https://github.com/input-output-hk/cardano-ledger/pull/3038\\n[pull-3036]: https://github.com/input-output-hk/cardano-ledger/pull/3036\\n[pull-3041]: https://github.com/input-output-hk/cardano-ledger/pull/3041\\n[pull-3044]: https://github.com/input-output-hk/cardano-ledger/pull/3044\\n[pull-3054]: https://github.com/input-output-hk/cardano-ledger/pull/3054\\n[pull-3055]: https://github.com/input-output-hk/cardano-ledger/pull/3055"},{"id":"2022-09-27-network","metadata":{"permalink":"/cardano-updates/2022-09-27-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-09-27-network.md","source":"@site/blog/2022-09-27-network.md","title":"Network Team Update","description":"Network Update","date":"2022-09-27T00:00:00.000Z","formattedDate":"September 27, 2022","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":2.24,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-09-27-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-09-30-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-09-20-consensus"}},"content":"```mdx-code-block\\nimport  ReactPlayer from \'react-player\'\\n```\\n\\n## Network Update\\n\\n### Ouroboros Network\\n\\n* We finished high and low level _peer sharing_ design. See\\n  [Peer Sharing Implementation Plan](https://github.com/input-output-hk/ouroboros-network/wiki/Peer-Sharing-Implementation-Plan)\\n* We started working on low-level design of _eclipse evasion_ (work in\\n  progress).\\n* We decided to use **peer sharing** instead of overloaded and ambiguous _gossip_ term.\\n  [PR input-output-hk/ouroboros-network#3980](https://github.com/input-output-hk/ouroboros-network/pull/3980)\\n* We fixed technical dept\\n  [issue input-output-hk/cardano-node#3905](https://github.com/input-output-hk/ouroboros-network/issues/3905) in\\n  the simulation testing of diffusion\\n  [PR input-output-hk/cardano-node#4004](https://github.com/input-output-hk/ouroboros-network/pull/4004)\\n* We deployed all our nodes using our new nix based deployment architecture.\\n  When deploying we found an issue in the\\n  [`RTView`](https://github.com/input-output-hk/cardano-node/issues/3752).\\n\\n### Ouroboros Consensus\\n\\n* Recently we found out that the consensus does not log exceptions thrown during\\n  intiialisation.  This was fixed in\\n  [PR input-output-hk/ouroboros-network#4015](https://github.com/input-output-hk/ouroboros-network/pull/4015)\\n  As part of this pull request we also changed that all exceptions rethrown by\\n  the connection handler thread are wrapped in `ExceptionInHandler`.\\n\\n#### Some older items, which were not announced\\n\\n* We identified and fixed an issue related to socket activation (socket options\\n  where not set for sockets passed through socket activation).\\n  [PR input-output-hk/cardano-node#3979](https://github.com/input-output-hk/ouroboros-network/pull/3979)\\n  This fix will be released in the next `cardano-node` release.\\n\\n### Cardano Node\\n\\n* We extended the NixOs service module so that one can modify `socketPath`,\\n  `runtimeDir`, `databasePath`, `traceSocketPathAccept`,\\n  `traceSocketPathConnect` and `stateDir` options.\\n   [PR input-output-hk/cardano-node#4196](https://github.com/input-output-hk/cardano-node/pull/4196)\\n\\n### IO-Sim\\n\\nWe resolved a number of issues before release of `io-sim` on hackage:\\n\\n* [issue input-output-hk/ouroboros-network#2797](https://github.com/input-output-hk/ouroboros-network/issues/2797)\\n* [issue input-output-hk/ouroboros-network#2650](https://github.com/input-output-hk/ouroboros-network/issues/2650)\\n* [issue input-output-hk/ouroboros-network#3436](https://github.com/input-output-hk/ouroboros-network/issues/3436)\\n* [issue input-output-hk/ouroboros-network#2588](https://github.com/input-output-hk/ouroboros-network/issues/2588)\\n* [issue input-output-hk/ouroboros-network#2587](https://github.com/input-output-hk/ouroboros-network/issues/2587)\\n* [issue input-output-hk/ouroboros-network#2586](https://github.com/input-output-hk/ouroboros-network/issues/2586)\\n\\nSee [PR #24](https://github.com/input-output-hk/io-sim/pull/24).\\n\\nWe also improved experience for contributors of `io-sim` and `typed-protocols` by adding issue templates:\\n* [PR input-output-hk/io-sim#25](https://github.com/input-output-hk/io-sim/pull/25)\\n\\n### Typed Protocols\\n\\n* We pushed a branch which identifies a GHC quirk:\\n  [coot/typed-protocols-rewrite-StateToken-problem](https://github.com/input-output-hk/typed-protocols/tree/coot/typed-protocols-rewrite-StateToken-problem).\\n  That\'s too be resolved in order to push forward review of the redesign in\\n  [PR input-output-hk/typed-protocols#3](https://github.com/input-output-hk/typed-protocols/pull/3).\\n* As for `io-sim`, we wrote issue templates:\\n  [PR input-output-hk/typed-protocols#11](https://github.com/input-output-hk/typed-protocols/pull/11)\\n\\n### Input Endorsers Simulation\\n\\nNew features include:\\n\\n* Histograms of block arrival frequency, for both network (inbound) and CPU\\n  (block validation). This is interesting to check that we\'re not overloading\\n  the CPU block validation capacity, or network link capacity. Or alternatively\\n  to observe the behaviour in an overload situation if we set the block\\n  generation rate high enough.\\n\\n* Pie chart of utilisation of TCP links. This shows how small a fraction of\\n  links are being used at any one time, and shows that once the system \\"warms\\n  up\\" and is operating stably, most block delivery is ballistic.\\n\\n* Showing off the new screen layout combinators, that let us put multiple\\n  charts, titles etc on screen at once and scale them to whatever screen or\\n  video resolution we like without having to tweak numbers (this example is\\n  scaled to fit 1080HD video resolution).\\n\\n\\n```mdx-code-block\\n<ReactPlayer playing controls url=\'/p2p-relay-5.mp4\' />\\n```"},{"id":"2022-09-20-consensus","metadata":{"permalink":"/cardano-updates/2022-09-20-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-09-20-consensus.md","source":"@site/blog/2022-09-20-consensus.md","title":"Consensus Team Update","description":"- We proposed a fix for the performance degradation observed when running","date":"2022-09-20T00:00:00.000Z","formattedDate":"September 20, 2022","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":3.895,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-09-20-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-09-27-network"},"nextItem":{"title":"DB Sync Team Update","permalink":"/cardano-updates/2022-09-19-db-sync"}},"content":"- We proposed a fix for the performance degradation observed when running\\n  distributed multi-node benchmarks in the UTxO HD feature branch. While this\\n  fixed the problems observed when running local benchmarks, it broke the\\n  `ThreadNet` tests due to concurrency issues. Therefore, we think it is wise to\\n  start redesigning the UTxO HD mempool integration.\\n- We did several rounds of code review on the alternative implementation of\\n  diff-sequences required by the UTxO HD feature based on the idea of\\n  anti-diffs. This alternative implementation is close to being merged, and the\\n  next step is to integrate this to the UTxO HD branch, so that we can run\\n  ad-hoc replaying and syncing from scratch benchmarks and compare these with\\n  the baseline. The micro-benchmarks we elaborated for the alternative\\n  implementation show speedups of up to 4x, so we are optimistic about the\\n  performance of replaying and syncing from scratch benchmarks, however it is\\n  important to notice that *due to the nature of UTxO HD* we will still be\\n  slower than the baseline.\\n- The final draft of the Genesis implementation specification is ready for\\n  review.\\n- We implemented a prototype for the happy path of Genesis\' ChainSync Jumping\\n  (CSJ). The prototype is slower than the baseline, however it is not the latest\\n  version of the prototype and the jump interval is very small.\\n- Work on integrating Conway has [stopped][nicks-comment-conway] since\\n  priorities have changed.\\n- We started work on benchmarking epoch-boundaries and epoch overhead\\n  [pr-4014][pr-4014]. To this end, we made use of a modified version of our\\n  `db-analyser` tool. We ran the new benchmarking setup using the Cardano\\n  mainnet chain, and we can see that block tick and application take\\n  substantially longer at epoch boundaries, although there are a couple of slots\\n  during an epoch in which these computations take more than normal. We notified\\n  the ledger team about these findings. We will use this modified version of\\n  `db-analyser` to investigate the epoch overhead.\\n\\n\\n# Workstreams\\n\\n## UTxO HD\\n\\n - Spent quite some time investigating the root cause of the degradation in\\n   performance observed in the benchmarks. We run the `make forge-stress`\\n   benchmarks locally in order to debug this behavior.\\n\\n    - Transaction batching doesn\'t make a notable difference in the outcome\\n      (considering we are using the in-memory backend).\\n\\n    - The mempool batching implementation required asynchronous transaction\\n      validation which is a violation of the `LocalTxSubmission` protocol\\n      contract and therefore if we continued on that route, the impact would\\n      have been quite big.\\n\\n    - The STM logic we implemented by using a `TMVar` for the mempool internal\\n      state was buggy and under certain circumstances it seemed to lock.\\n      Reverting the mempool internal state to be stored in a `TVar` seems to\\n      solve this problem.\\n\\n    - The results we get after this change look almost identical to the ones\\n      from the baseline.\\n\\n  - [The anti-diff prototype (PR\\n    #3997)](https://github.com/input-output-hk/ouroboros-network/pull/3997) has\\n    been reviewed and is close to being merged.\\n\\n    - A follow-up issue ([issue\\n      #4010](https://github.com/input-output-hk/ouroboros-network/issues/4010))\\n      to integrate the anti-diff prototype in the various `consensus` packages\\n      was created. A first version of the integration exists, and all tests\\n      pass. A next step is to get some indication of the \\"real\\" performance gain\\n      by profiling `db-analyser` (or `cardano-node`).\\n\\n## Genesis\\n\\n - Final draft of the Genesis implementation specification, now up for review.\\n\\n - Local benchmark setup for parameter tuning via the happy path ChainSync\\n   Jumping (CSJ) prototype ([Issue 3987][issue-3987]).\\n\\n    - Context: Our Genesis design requires us to check in with a large (~20)\\n      number of servers periodically while syncing. These servers are offered\\n      jump requests via the ChainSync protocol (hence the name), which they can\\n      accept or decline. If a peer declines, the Genesis rule allows us to\\n      determine whether a node actually has a better chain.\\n\\n    - The \\"happy path\\" is when no peer declines a jump. We want this to have\\n      close to no overhead compared to status quo, i.e. syncing without Genesis.\\n\\n    - We implemented a prototype for this happy path, and are now starting to\\n      test in various configurations (number of peers, latency, bandwidth) to\\n      tune the performance of ChainSync jumping, i.e. how complicated our logic\\n      of choosing when to jump needs to be.\\n\\n    **Example:**\\n\\n     - Simulated connection: 50 MBit/s, 50ms latency\\n\\n     - Jump interval: 3000 slots (on the low end, could be increased to up to\\n       `3k/f`)\\n\\n     - Red: baseline (1.35.3), one peer in topology file\\n\\n     - Blue: Preliminary version of our prototype, with 10 peers.\\n\\n    ![](/images/happy-path-csj-prototype-prelim.svg)\\n\\n    It is slower by about ~30%, but it is not the latest version of the\\n    prototype, and the jump interval is very small, making CSJ more of a\\n    bottleneck.\\n\\n## Technical debt\\n\\n- Fix flakiness in ChainDB QSM tests ([PR 3990](https://github.com/input-output-hk/ouroboros-network/pull/3990)).\\n\\n[issue-3987]: https://github.com/input-output-hk/ouroboros-network/issues/3987\\n[nicks-comment-conway]: https://github.com/input-output-hk/ouroboros-network/pull/3971#issuecomment-1252524031\\n[pr-4014]: https://github.com/input-output-hk/ouroboros-network/pull/4014"},{"id":"2022-09-19-db-sync","metadata":{"permalink":"/cardano-updates/2022-09-19-db-sync","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-09-19-db-sync.md","source":"@site/blog/2022-09-19-db-sync.md","title":"DB Sync Team Update","description":"DBSync Update","date":"2022-09-19T00:00:00.000Z","formattedDate":"September 19, 2022","tags":[{"label":"db-sync","permalink":"/cardano-updates/tags/db-sync"}],"readingTime":1.525,"hasTruncateMarker":false,"authors":[{"name":"Kostas Dermentzis","title":"Cardano DB-Sync Software Engineer","url":"https://github.com/kderme","imageURL":"https://github.com/kderme.png","key":"kderme"}],"frontMatter":{"title":"DB Sync Team Update","slug":"2022-09-19-db-sync","authors":"kderme","tags":["db-sync"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-09-20-consensus"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-09-16-ledger"}},"content":"## DBSync Update\\n\\n### New Tag\\nWe created a new db-sync tag 13.0.5 which addresses shortcomings of the last\\nrelease 13.0.4. It is currently under testing.\\nThe Changelog is\\n [here](https://github.com/input-output-hk/cardano-db-sync/blob/8ad98d48e0068f3768d48e18fdcbe254037cba3b/cardano-db-sync/CHANGELOG.md#1305) and in more details:\\n\\n* We fixed fees for tx with phase 2 failure that didn\'t include a total collateral field.\\n [1248](https://github.com/input-output-hk/cardano-db-sync/pull/1248)\\n\\n* We fixed an issue that could cause db-sync to crash if a specific rollback occured.\\n [1247](https://github.com/input-output-hk/cardano-db-sync/pull/1247)\\n\\n* DBSync will now avoid reserialising data, especially Datums, which not only slows down db-sync but\\n could result in the wrong CBOR encoding being inserted.\\n [1217](https://github.com/input-output-hk/cardano-db-sync/pull/1217)\\n\\n* All the fixes above come with unit tests which validates the fix.\\n\\n* Added support for preprod and preview from docker. DBSync no longer needs to include the configs\\n for different networks, these are directly fetched from the cardano world.\\n [1254](https://github.com/input-output-hk/cardano-db-sync/pull/1254)\\n\\n* We added better support from docker for the new disable options and the overall documentation.\\n [1260](https://github.com/input-output-hk/cardano-db-sync/pull/1260)\\n\\nAll the above were also backported to the master branch\\n\\n### Open source\\n\\nWe made the db-sync [board public](https://github.com/orgs/input-output-hk/projects/52/views/1), so\\n everyone can have access on the issues we prioritise.\\n We also added new tasks to the board, some of them could be approachable to newcomers or people who\\n want to contribute.\\n\\n### Progress on tech debt and new features\\n* [1223](https://github.com/input-output-hk/cardano-db-sync/pull/1223) was merged, which removes the\\n foreign keys from the db schema. This opens the road to a number of optimizations.\\n\\n* An additional fix on top of the previous work was added\\n [1250](https://github.com/input-output-hk/cardano-db-sync/pull/1250)\\n\\n* An initial version where DBSync does not rollback on restart is done here\\n [1266](https://github.com/input-output-hk/cardano-db-sync/pull/1266).\\nThis allows db-sync to restart much faster, without the need to delete data and reinsert them. In\\n the future it can also facilitate migrations in cases where the ledger snapshots have a breaking\\n  change, without the need to resync everything from genesis."},{"id":"2022-09-16-ledger","metadata":{"permalink":"/cardano-updates/2022-09-16-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-09-16-ledger.md","source":"@site/blog/2022-09-16-ledger.md","title":"Ledger Team Update","description":"Ledger Update","date":"2022-09-16T00:00:00.000Z","formattedDate":"September 16, 2022","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.625,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-09-16-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"DB Sync Team Update","permalink":"/cardano-updates/2022-09-19-db-sync"},"nextItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-09-01-ledger"}},"content":"## Ledger Update\\n\\nWe have been focused nearly entirely on addressing technical debt.\\n\\n* We introduced more consistent naming across eras, this time for the auxiliary data.\\n  See [3032](https://github.com/input-output-hk/cardano-ledger/pull/3032).\\n* We made clear how the `consumed` functions differs between eras (which was a previous source of\\n  confusion), and added some related support to the fledgling ledger API.\\n  See [3016](https://github.com/input-output-hk/cardano-ledger/pull/3016).\\n* We added clarity and organizational consistency to the main ledger era type synonyms.\\n  See [3017](https://github.com/input-output-hk/cardano-ledger/pull/3017).\\n* We removed code duplication related to the input data hashes.\\n  See [3018](https://github.com/input-output-hk/cardano-ledger/pull/3018).\\n* We split up a large module into smaller components. The large module was actually causing our\\n  CI to time out.\\n  See [3020](https://github.com/input-output-hk/cardano-ledger/pull/3020).\\n* We cleaned up stale information in our cabal files, and upgraded cabal 3.8.\\n  See [3023](https://github.com/input-output-hk/cardano-ledger/pull/3023),\\n  [3031](https://github.com/input-output-hk/cardano-ledger/pull/3031),\\n  and [3028](https://github.com/input-output-hk/cardano-ledger/pull/3028).\\n* We made consistent, standalone `TxOut` (transaction output) modules for every era.\\n  See [3024](https://github.com/input-output-hk/cardano-ledger/pull/3024).\\n* We brought consistency to a maddening inconsistent use of type variables indicating the specific\\n  choice of cryptographic primitives. In particular, all uses of `crypto` have been renamed to `c`.\\n  See [3027](https://github.com/input-output-hk/cardano-ledger/pull/3027).\\n* We did a clean up of the types in the Alonzo era. In particular, we switched to more parametric\\n  types that will compose better in the future and which simplifies the constraints.\\n  See [3029](https://github.com/input-output-hk/cardano-ledger/pull/3029).\\n* We consolidated some existing fragmented logic regarding how we gather the scripts needed for a\\n  given transaction. This is a much needed cleanup to prevent future mistakes.\\n  See [3019](https://github.com/input-output-hk/cardano-ledger/pull/3019).\\n* We fixed a problem with our generators that was causing a fair number of our property tests to\\n  fail in CI.\\n  See [3039](https://github.com/input-output-hk/cardano-ledger/pull/3039).\\n* We have started the work to update Plutus. This will bring support for SECP in the next major\\n  protocol version, and also address a\\n  [problem](https://github.com/input-output-hk/cardano-ledger/issues/2902)\\n  that we current have evolving the cost models.\\n  See [3030](https://github.com/input-output-hk/cardano-ledger/pull/3030).\\n* We addressed a small issue that came up when integrating the conway era downstream, namely\\n  the lack of some serialization instances.\\n  See [3022](https://github.com/input-output-hk/cardano-ledger/pull/3022)."},{"id":"2022-09-01-ledger","metadata":{"permalink":"/cardano-updates/2022-09-01-ledger","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-09-01-ledger.md","source":"@site/blog/2022-09-01-ledger.md","title":"Ledger Team Update","description":"Ledger Update","date":"2022-09-01T00:00:00.000Z","formattedDate":"September 1, 2022","tags":[{"label":"ledger","permalink":"/cardano-updates/tags/ledger"}],"readingTime":1.94,"hasTruncateMarker":false,"authors":[{"name":"Jared Corduan","title":"Ledger Team Lead","url":"https://github.com/JaredCorduan","imageURL":"https://github.com/JaredCorduan.png","key":"JaredCorduan"}],"frontMatter":{"title":"Ledger Team Update","slug":"2022-09-01-ledger","authors":"JaredCorduan","tags":["ledger"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-09-16-ledger"},"nextItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-08-31-consensus"}},"content":"## Ledger Update\\n\\nSince finishing up support for the Vasil Hardfork, the ledger team has been\\nfocused on two main things: a new ledger era and technical debt.\\n\\n### New minimal ledger era\\n\\nWe have implemented a new ledger era named `conway` which is nearly identical\\nto the `babbage` era. This has been the first time that we have been able to see\\nwhat a minimal ledger era looks like. We have finished this task, modulo any\\nintegration issues that might come up. The only thing that the `conway` era\\ndoes differently from the `babbage` era is provide support for rotating\\nthe master keys using the hardfork combinator\'s state translation.\\nWe may end up adding features to the `conway` era, but it is a nice exercise\\nseeing what it looks like to get a minimal ledger era supported in all the\\ndownstream components.\\n\\n### Addressing technical debt\\n\\nWe have been addressing technical debt, mostly in an effort to make the\\nrepository a more friendly code base to work in.\\n\\n- We have begun work on a ledger API, called `cardano-ledger-api`.\\n- We have done a big re-design of the major type classes used in the ledger.\\n  With hindsight on our side, we now have something much more organized and\\n  easier to use.\\n- We have done a lot of re-naming. The names across eras are now much more\\n  uniform, avoid certain confusions that plagued us, and are clearer in where\\n  they are from.\\n- We have reduced a lot of code duplication that could lead to bugs if you\\n  do not have the whole code base in your head.\\n- We have added a handful of performance improvements.\\n- We added type safety in a number of locations. In particular, the type of\\n  values that can be minted in a transaction no longer allow for Lovelace\\n  in the type, and some functions which used to handle both timelock scripts\\n  and plutus script now correctly enoforce at the type level that only one of\\n  them can be used.\\n- We made our generators so that they now produce a much richer set of\\n  valid serializations. There is room within CBOR to serialize the same\\n  data structure in multiple ways, and it is helpful to have the generators\\n  use a wide variety.\\n- We have begun re-organizing our test suites."},{"id":"2022-08-31-consensus","metadata":{"permalink":"/cardano-updates/2022-08-31-consensus","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-08-31-consensus.md","source":"@site/blog/2022-08-31-consensus.md","title":"Consensus Team Update","description":"Executive summary","date":"2022-08-31T00:00:00.000Z","formattedDate":"August 31, 2022","tags":[{"label":"consensus","permalink":"/cardano-updates/tags/consensus"}],"readingTime":8.925,"hasTruncateMarker":false,"authors":[{"name":"Damian Nadales","title":"Consensus Team Lead","url":"https://github.com/dnadales","imageURL":"https://github.com/dnadales.png","key":"dnadales"}],"frontMatter":{"title":"Consensus Team Update","slug":"2022-08-31-consensus","authors":"dnadales","tags":["consensus"],"hide_table_of_contents":false},"prevItem":{"title":"Ledger Team Update","permalink":"/cardano-updates/2022-09-01-ledger"},"nextItem":{"title":"Network Team Update","permalink":"/cardano-updates/2022-08-12-network"}},"content":"## Executive summary\\n\\n- We did most of the heavy lifting required to integrate the Conway era.\\n- We have property tests for the UTxO HD backing store API implementations. A\\n  possible bug was identified. Work is ongoing to make sure the property-tests\\n  cover all the relevant cases.\\n- We implemented and benchmarked the \\"anti-diff\\" prototype to speed up the UTxO\\n  HD functionality. Results show a rough speedup of `4x` to `5.5x` across\\n  several scenarios. Note that: [\\"Data reported by `tasty-bench` is only of\\n  indicative and comparative significance.\\"](https://hackage.haskell.org/package/tasty-bench-0.3.2/docs/Test-Tasty-Bench.html).\\n  We are investigating additional performance improvements. The \\"anti-diff\\"\\n  prototype and benchmarks are still pending code review.\\n- We elaborated a draft specification for the Genesis implementation and\\n  `ChainSync` jumping optimization.\\n\\n## Workstreams\\n\\n### Conway\\n\\n - Integration PR of the minimal Conway era ([Issue #3963][issue-3962], [PR\\n   #3971][pull-3971]).\\n - Discussions with Ledger revealed possible sources of confusion about which\\n   data should be changed in the Conway era. As a result, a new technical debt\\n   issue was raised, which does not block the integration of the Conway era\\n   ([Issue #3976][issue-3976]).\\n\\n### UTxO HD\\n\\n- [Issue #3954][issue-3954], [branch][branch-3954]: The functionality of a\\n  backing store, which is the interface to the on-disk part of ledger state in\\n  UTxO-HD, is tested at a high level through the `OnDisk` tests. However, some\\n  functionalities remain untested, e.g., reads of ranges of keys. As such, we\\n  have implemented `quickcheck-state-machine` tests that exercise backing stores\\n  directly. The tests are reusable for different backing store implementations\\n  because the tests are implementation-agnostic: Any backing store that conforms\\n  to the backing store interface can be plugged into the tests. Work is still\\n  ongoing to label/monitor the tests, such that we can verify that interesting\\n  cases are being tested. Furthermore, a possible bug has been identified in the\\n  LMDB backing store with respect to range reads, though the bug has not been\\n  resolved yet.\\n- [Issue #3946][issue-3946], [branch][branch-4199], [PR #3882][pull-3882]: The\\n  \\"anti-diff\\" prototype proposes an alternative approach to keeping track of\\n  sequences (more specifically, `FingerTree`s) of diffs. These diff sequences\\n  are a component of the in-memory parts of the ledger state in UTxO-HD. Since\\n  the consensus code often requires the cumulative diff of a sequence of diffs,\\n  the current implementation \\"caches\\" cumulative diffs of each subtree in the\\n  diff sequence. This caching allows relatively fast reconstruction of the total\\n  cumulative diff, but this caching proved to incur a non-negligible cost: when\\n  we manipulate diff sequences through splits and appends, we force re-computing\\n  a logarithmic number of caches. This is problematic, since we often split and\\n  append in consensus: we split when we flush diffs to a backing store or when\\n  we roll back blocks, and we append when pushing blocks. The new approach\\n  should reduce the overhead of this caching.\\n\\n  We implemented micro-benchmarks for the \\"anti-diff\\" prototype: we\\n  first generate a sequence of commands (`Forward`, `Push`, `Flush`, or\\n  `Rollback`) through a simulation, after which we measure the performance of\\n  applying the commands to a diff sequence. In this context, `Forward` means\\n  forwarding of values through a diff, whereas `Rollback` means switching to\\n  a different fork by rolling back diffs/blocks and pushing new ones.\\n  Moreover, we compare the performance for the two implementations: the\\n  \\"legacy\\" approach, and the anti-diff approach.\\n\\n  Some preliminary results were positive, but we needed to revisit the\\n  benchmark\'s configuration to obtain more definitive results. After a\\n  discussion with @dcoutts and the consensus team about this configuration\\n  (e.g., number of commands generated, choice of the security parameter `k`),\\n  the benchmarks should now be closer to the realistic setting. The following\\n  configuration specifies the default configuration that is used in the\\n  benchmarking code:\\n  * Number of commands generated: `10_000`\\n  * Security parameter `k`: `2160`\\n  * Number of initial backing values: `100`\\n  * Number of key-value pairs deleted by a push: `50`\\n  * Number of key-value pairs inserted by a push: `50`\\n  * Number of key-value pairs forwarded by a forward: `50`\\n  * Probability of a large (in the range `[1000, 2000]`) rollback: `0.05`\\n  * Probability of a small (in the range `[1, 10]`) rollback: `0.95`\\n  * Order of commands:\\n    * An equal number of forward and pushes.\\n    * `1` flush every `10` pushes.\\n    * `1` rollback every `100` pushes\\n\\n  Moreover, we run four benchmark scenarios:\\n  * Default configuration\\n  * Without rollbacks\\n  * With only small rollbacks\\n  * Without rollbacks, larger flushes (`1` flush every `100` pushes)\\n\\n  ### How to read results\\n\\n  Note: this section uses documentation from the\\n  [tasty-bench](https://hackage.haskell.org/package/tasty-bench) package to\\n  explain how to read the results of running our benchmarks.\\n\\n  Running a benchmark scenario gives us the following (curated) output:\\n  ```text\\n  ...\\n  AntiDiff:                               OK (18.27s)\\n    2.527 s \xb1  47 ms, 2.1 GB allocated, 544 MB copied, 2.2 GB peak memory, 0.23x\\n  LegacyDiff:                             OK (32.73s)\\n    10.829 s \xb1 148 ms, 6.8 GB allocated, 2.3 GB copied, 2.2 GB peak memory\\n  ...\\n  ```\\n\\n  The output says that the first benchmark, which exercises the anti-diff\\n  prototype, was repeatedly executed for `18.27` seconds (wall-clock time),\\n  its predicted mean CPU time was `2.527` seconds and means of individual\\n  samples do not often diverge from it further than `\xb1 47` milliseconds\\n  (double standard deviation). We also configure the RTS to collect GC\\n  statistics, which enables `tasty-bench` to estimate and report memory usage.\\n  This data is reported as per `RTSStats` fields: `allocated_bytes`,\\n  `copied_bytes` and `max_mem_in_use_bytes`. So, the output of the first\\n  benchmark says that a total of `2.1 GB` of memory was allocated, that a\\n  total of `544 MB` of memory were copied, and that the peak memory in usage\\n  was `2.2 GB`. We read the output for the second benchmark in the same way.\\n\\n  Furthermore, the benchmark compares the mean CPU times for\\n  both the anti-diff and legacy approaches: In this case, the mean CPU time\\n  for the anti-diff approach is `~0.23x` the mean CPU time for the legacy\\n  approach. Conversely, the mean CPU time for the legacy approach is\\n  `1 / 0.23 ~= 4.35x` the mean CPU time for the anti-diff approach. We will\\n  call `0.23x` the *improvement factor*. We will call `4.35x` the *speedup*.\\n\\n  Note that these improvement factors (and reported results) are subject to\\n  noise, randomness, the specific configuration parameters, and the whims\\n  of statistics. Data reported by `tasty-bench` is only of indicative and\\n  comparative significance.\\n\\n  ### Results\\n\\n  For each of the 4 scenarios, we list the results of running the anti-diff and\\n  legacy approaches 5 times. We run the benchmarks 5 times to get an indication\\n  of whether the results are similar across multiple runs. Furthermore, we\\n  calculate the accompanying *ranges* (if applicable) of improvement factors and\\n  speedups.\\n\\n  Note also the decrease in total bytes allocated and total bytes copied for\\n  the anti-diff approach compared to the legacy approach.\\n\\n  #### Default configuration\\n\\n  |Name|Mean CPU time|2*Stdev (CPU time)|Total bytes allocated|Total bytes copied|Peak memory|\\n  |-|-|-|-|-|-|\\n  |Run 1: AntiDiff|2.533 s (0.23x)|4.7 ms|2.1 GB|557 MB|2.4 GB|\\n  |Run 1: LegacyDiff|10.792 s|162 ms|6.8 GB|2.3 GB|2.4 GB|\\n  |Run 2: AntiDiff|2.508 s (0.23x)|245 ms|2.1 GB|515 MB|2.2 GB|\\n  |Run 2: LegacyDiff|10.850 s| 30 ms|6.9 GB|2.3 GB|2.2 GB|\\n  |Run 3: AntiDiff|2.562 s (0.23x)|5.0 ms|2.1 GB|552 MB|2.2 GB|\\n  |Run 3: LegacyDiff|10.993 s|149 ms|6.9 GB|2.3 GB|2.2 GB|\\n  |Run 4: AntiDiff|2.168 s (0.22x)|5.3 ms|1.8 GB|434 MB|2.0 GB|\\n  |Run 4: LegacyDiff|9.976 s| 39 ms|6.3 GB|2.0 GB|2.0 GB|\\n  |Run 5: AntiDiff|2.527 s (0.23x)| 47 ms|2.1 GB|544 MB|2.2 GB|\\n  |Run 5: LegacyDiff|10.829 s|148 ms|6.8 GB|2.3 GB|2.2 GB|\\n\\n  * Improvement factor: `[0.22, 0.23]`\\n  * Speedup : `[1 / 0.23 ~= 4.35, 1 / 0.22 ~= 4.55]`\\n\\n  #### No rollbacks\\n\\n  |Name|Mean CPU time|2*Stdev (CPU time)|Total bytes allocated|Total bytes copied|Peak memory|\\n  |-|-|-|-|-|-|\\n  |Run 1: AntiDiff|1.638 s (0.19x)| 36 ms|1.4 GB|181 MB|2.4 GB|\\n  |Run 1: LegacyDiff|8.656 s|207 ms|5.7 GB|1.5 GB|2.4 GB|\\n  |Run 2: AntiDiff|1.638 s (0.19x)| 75 ms|1.4 GB|181 MB|2.2 GB|\\n  |Run 2: LegacyDiff|8.654 s|322 ms|5.7 GB|1.5 GB|2.2 GB|\\n  |Run 3: AntiDiff|1.663 s (0.19x)| 74 ms|1.4 GB|181 MB|2.2 GB|\\n  |Run 3: LegacyDiff|8.799 s|216 ms|5.7 GB|1.5 GB|2.2 GB|\\n  |Run 4: AntiDiff|1.645 s (0.19x)| 51 ms|1.4 GB|181 MB|2.0 GB|\\n  |Run 4: LegacyDiff|8.732 s|261 ms|5.7 GB|1.5 GB|2.0 GB|\\n  |Run 5: AntiDiff|1.639 s (0.19x)| 19 ms|1.4 GB|181 MB|2.2 GB|\\n  |Run 5: LegacyDiff|8.653 s|234 ms|5.7 GB|1.5 GB|2.2 GB|\\n\\n  * Improvement factor: `0.19`\\n  * Speedup : `1 / 0.19 ~= 5.25`\\n\\n\\n  #### Only small rollbacks\\n\\n  |Name|Mean CPU time|2*Stdev (CPU time)|Total bytes allocated|Total bytes copied|Peak memory|\\n  |-|-|-|-|-|-|\\n  |Run 1: AntiDiff|1.833 s (0.18x)| 36 ms|1.5 GB|185 MB|2.4 GB|\\n  |Run 1: LegacyDiff|10.362 s|867 ms|5.8 GB|1.6 GB|2.4 GB|\\n  |Run 2: AntiDiff|1.696 s (0.19x)| 30 ms|1.5 GB|185 MB|2.2 GB|\\n  |Run 2: LegacyDiff|8.822 s|106 ms|5.8 GB|1.5 GB|2.2 GB|\\n  |Run 3: AntiDiff|1.702 s (0.19x)| 44 ms|1.5 GB|186 MB|2.2 GB|\\n  |Run 3: LegacyDiff|8.906 s|147 ms|5.8 GB|1.5 GB|2.2 GB|\\n  |Run 4: AntiDiff|1.701 s (0.19x)| 47 ms|1.5 GB|185 MB|2.0 GB|\\n  |Run 4: LegacyDiff|8.949 s|197 ms|5.8 GB|1.5 GB|2.0 GB|\\n  |Run 5: AntiDiff|1.677 s (0.19x)| 55 ms|1.5 GB|186 MB|2.2 GB|\\n  |Run 5: LegacyDiff|8.856 s|177 ms|5.8 GB|1.5 GB|2.2 GB|\\n\\n  * Improvement factor: `[0.18, 0.19]`\\n  * Speedup : `[1 / 0.19 ~= 5.25, 1 / 0.18 ~= 5.55]`\\n\\n  #### No rollbacks, larger flushes (every 100 pushes)\\n\\n  |Name|Mean CPU time|2*Stdev (CPU time)|Total bytes allocated|Total bytes copied|Peak memory|\\n  |-|-|-|-|-|-|\\n  |Run 1: AntiDiff|1.643 s (0.25x)| 21 ms|1.5 GB|196 MB|2.4 GB|\\n  |Run 1: LegacyDiff|6.591 s|351 ms|4.0 GB|1.4 GB|2.4 GB|\\n  |Run 2: AntiDiff|1.616 s (0.25x)| 47 ms|1.5 GB|196 MB|2.2 GB|\\n  |Run 2: LegacyDiff|6.520 s|232 ms|4.0 GB|1.4 GB|2.2 GB|\\n  |Run 3: AntiDiff|1.640 s (0.25x)| 34 ms|1.5 GB|196 MB|2.2 GB|\\n  |Run 3: LegacyDiff|6.540 s|150 ms|4.0 GB|1.4 GB|2.2 GB|\\n  |Run 4: AntiDiff|1.635 s (0.25x)| 76 ms|1.5 GB|196 MB|2.0 GB|\\n  |Run 4: LegacyDiff|6.589 s|131 ms|4.0 GB|1.4 GB|2.0 GB|\\n  |Run 5: AntiDiff|1.628 s (0.25x)| 19 ms|1.5 GB|196 MB|2.2 GB|\\n  |Run 5: LegacyDiff|6.490 s|5.9 ms|4.0 GB|1.4 GB|2.2 GB|\\n\\n  * Improvement factor: `0.25`\\n  * Speedup : `1 / 0.25 ~= 4`\\n\\n### Genesis\\n\\n - We elaborated a draft of the specification of the Genesis implementation and\\n   the ChainSync Jumping optimization. In particular, this includes a proof\\n   sketch that the latter preserves liveness and safety in all cases ([Issue\\n   3964][issue-3964]).\\n      - @nfrisby\'s main realization during this sprint was that he had been\\n        focusing so far on the case where the selected chain is an extension of\\n        the intersection of our peers\' ChainSync candidates.\\n      - This is the main case, ie an \\"absorbing\\" state, but it\'s not the only\\n        case.\\n      - The new proof sketch begins by case splitting on that predicate, and\\n        that made the sketch quite a bit easier to follow.\\n - We continued working on the \\"happy path\\" `ChainSync` Jumping prototype ([Issue\\n   3960][issue-3960]).\\n\\n### Technical debt\\n\\n - We started working on the issues required to re-enable nightly CI runs..\\n   Nightly CI runs have far more lax time constraints, which gives the option to\\n   run significantly more property tests than in our regular CI. To this end, we\\n   merged a PR to easily adapt the number of tests globally ([PR\\n   #3947][pull-3947]).\\n\\n[issue-3954]: https://github.com/input-output-hk/ouroboros-network/issues/3954\\n[branch-3954]: https://github.com/input-output-hk/ouroboros-network/tree/jdral/3954-backingstore-property-tests\\n[issue-3946]: https://github.com/input-output-hk/ouroboros-network/issues/3946\\n[branch-4199]: https://github.com/input-output-hk/ouroboros-network/tree/jdral/CAD-4199-prototype-anti-diffs\\n[pull-3882]: https://github.com/input-output-hk/ouroboros-network/pull/3882\\n[pull-3947]: https://github.com/input-output-hk/ouroboros-network/pull/3947\\n[issue-3960]: https://github.com/input-output-hk/ouroboros-network/issues/3960\\n[issue-3962]: https://github.com/input-output-hk/ouroboros-network/issues/3962\\n[issue-3964]: https://github.com/input-output-hk/ouroboros-network/issues/3964\\n[pull-3971]: https://github.com/input-output-hk/ouroboros-network/pull/3971\\n[issue-3976]: https://github.com/input-output-hk/ouroboros-network/issues/3976"},{"id":"2022-08-12-network","metadata":{"permalink":"/cardano-updates/2022-08-12-network","editUrl":"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-08-12-network.md","source":"@site/blog/2022-08-12-network.md","title":"Network Team Update","description":"The networking team took an active part in the project iteration (PI) planning","date":"2022-08-12T00:00:00.000Z","formattedDate":"August 12, 2022","tags":[{"label":"network","permalink":"/cardano-updates/tags/network"}],"readingTime":0.88,"hasTruncateMarker":false,"authors":[{"name":"Marcin Szamotulski","title":"Network Team Lead","url":"https://github.com/coot","imageURL":"https://github.com/coot.png","key":"coot"}],"frontMatter":{"title":"Network Team Update","slug":"2022-08-12-network","authors":"coot","tags":["network"],"hide_table_of_contents":false},"prevItem":{"title":"Consensus Team Update","permalink":"/cardano-updates/2022-08-31-consensus"}},"content":"```mdx-code-block\\nimport  ReactPlayer from \'react-player\'\\n```\\n\\n\\nThe networking team took an active part in the project iteration (PI) planning\\nsession, see cardano-node [backlog](https://github.com/orgs/input-output-hk/projects/39) for detailed\\noutcomes.\\n\\n\\n* We started working on a detailed design / implementation plan for gossip.\\n\\n* We merged [input-output-hk/ouroboros-network#3859](https://github.com/input-output-hk/ouroboros-network/pull/3859) which\\n  sets the ouroboros-network repository for the single relay release.\\n\\n* We identified a bug in the network simulator, which is fixed in the\\n  [input-output-hk/ouroboros-network#3852](https://github.com/input-output-hk/ouroboros-network/pull/3852).\\n  The above PR was reviewed.\\n\\n* We set the tracing configuration for nodes which we deploy and fixed and\\n  identified some deployment hiccups.  We identified some bugs in the RT view\\n  which were registered by the maintainers.\\n  [input-output-hk/ouroboros-network-ops#4](https://github.com/input-output-hk/ouroboros-network-ops/pull/4)\\n\\n* We fixed typos in network-mux library:\\n  [input-output-hk/ouroboros-network#3921](https://github.com/input-output-hk/ouroboros-network/pull/3921)\\n\\n* For easy of debugging we renamed a trace point:\\n  [input-output-hk/ouroboros-network#3922](https://github.com/input-output-hk/ouroboros-network/pull/3922)\\n\\n* Duncan iterated on his simulation / visualisation.  He also was able to\\n  identify and fix a bug in the simulator.  The simulation contains 50 nodes.\\n  Dashed lines indicate and established connection, while solid lines indicate\\n  a TCP connection with fully open TCP window.\\n\\n```mdx-code-block\\n<ReactPlayer playing controls url=\'/p2p-relay3.mp4\' />\\n```"}]}')}}]);