"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[2307],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),h=a,m=u["".concat(i,".").concat(h)]||u[h]||p[h]||s;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5889:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const s={title:"DB Sync Team Update",slug:"2022-10-04-db-sync",authors:"kderme",tags:["db-sync"],hide_table_of_contents:!1},o="DBSync Update",c={permalink:"/cardano-updates/2022-10-04-db-sync",editUrl:"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2022-10-04-db-sync.md",source:"@site/blog/2022-10-04-db-sync.md",title:"DB Sync Team Update",description:"Fast restarts",date:"2022-10-04T00:00:00.000Z",formattedDate:"October 4, 2022",tags:[{label:"db-sync",permalink:"/cardano-updates/tags/db-sync"}],readingTime:1.635,hasTruncateMarker:!1,authors:[{name:"Kostas Dermentzis",title:"Cardano DB-Sync Software Engineer",url:"https://github.com/kderme",imageURL:"https://github.com/kderme.png",key:"kderme"}],frontMatter:{title:"DB Sync Team Update",slug:"2022-10-04-db-sync",authors:"kderme",tags:["db-sync"],hide_table_of_contents:!1},prevItem:{title:"Consensus Team Update",permalink:"/cardano-updates/2022-10-05-consensus"},nextItem:{title:"Node API & CLI Team Update",permalink:"/cardano-updates/2022-10-04-node-cli-api"}},i={authorsImageUrls:[void 0]},l=[{value:"Fast restarts",id:"fast-restarts",level:3},{value:"Property based testing",id:"property-based-testing",level:3},{value:"Tech Debt",id:"tech-debt",level:3},{value:"Smash",id:"smash",level:3}],d={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"fast-restarts"},"Fast restarts"),(0,a.kt)("p",null," We fixed a long overdue issue in db-sync which caused long delays on restarts\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-db-sync/pull/1266"},"1266"),". This has been\none of db-sync main objectives for this period. Restarts are now very fast,\nbecause db-sync deletes almost nothing from the db, it just replays the ledger rules until it\nreaches the tip of the db. The fix also improves reconnection speed, in cases where the node\nrestarts or the connection is temporarily lost. It also speeds up even more in cases where due to a\ndeployment mess up a very old snapshot or no snapshot at all is used."),(0,a.kt)("h3",{id:"property-based-testing"},"Property based testing"),(0,a.kt)("p",null,"We added stateful property based testing, using ",(0,a.kt)("inlineCode",{parentName:"p"},"quickcheck-state-machine"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-db-sync/pull/1269"},"1269"),". These tests use empty or\nalmost empty blocks to test the new behaviour of restarts and rollbacks."),(0,a.kt)("p",null," These tests generate arbitrarily a list of symbolic commands from these:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"RollForward Int\nRollBack BlockNo\nStopDBSync\nStartDBSync\nRestartNode\nAssertBlockNo BlockNo\n")),(0,a.kt)("p",null,"The commands are translated into real commands. For example ",(0,a.kt)("inlineCode",{parentName:"p"},"RollForward Int")," will forge a new block\nthat fits on the current chain. These real commands are executed against db-sync using the mock\nchain-sync server. The symbolic commands are executed against a vesy simplistic Model of db-sync\nwhich looks like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"  Model\n    { serverTip :: BlockNo\n    , dbSyncTip :: BlockNo\n    , dbSynsIsOn :: Bool\n    , dbSynsHasSynced :: Bool\n    }\n")),(0,a.kt)("p",null,"Finally a number of postconditions are checked, related to the eventual block number of db-sync."),(0,a.kt)("h3",{id:"tech-debt"},"Tech Debt"),(0,a.kt)("p",null,"We handled a number of tech debt in\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-db-sync/pull/1275"},"1275"),"\nThis improves the code format of db-sync, deletes many queries that were never used and groups the\nothers. This tech debt resolution not only improves the experience of working in db-sync, but can\nfacilitate some of our other objectives, as it makes it very explicit which queries are used\nduring syncing and which indexes are necessary."),(0,a.kt)("h3",{id:"smash"},"Smash"),(0,a.kt)("p",null,"We worked on fixing an issue related to fetching pool metadata\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-db-sync/pull/1276"},"1276"),".\nThe issue which is described in\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-db-sync/issues/1270"},"1270")))}p.isMDXComponent=!0}}]);