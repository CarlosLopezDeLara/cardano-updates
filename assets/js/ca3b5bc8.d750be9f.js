"use strict";(self.webpackChunkcardano_updates=self.webpackChunkcardano_updates||[]).push([[96140],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},92861:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const o={title:"Consensus Team Update",slug:"2023-08-09-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},s=void 0,i={permalink:"/cardano-updates/2023-08-09-consensus",editUrl:"https://github.com/input-output-hk/cardano-updates/tree/main/blog/2023-08-09-consensus.md",source:"@site/blog/2023-08-09-consensus.md",title:"Consensus Team Update",description:"High level summary",date:"2023-08-09T00:00:00.000Z",formattedDate:"August 9, 2023",tags:[{label:"consensus",permalink:"/cardano-updates/tags/consensus"}],readingTime:1.46,hasTruncateMarker:!1,authors:[{name:"Damian Nadales",title:"Consensus Team Lead",url:"https://github.com/dnadales",imageURL:"https://github.com/dnadales.png",key:"dnadales"}],frontMatter:{title:"Consensus Team Update",slug:"2023-08-09-consensus",authors:"dnadales",tags:["consensus"],hide_table_of_contents:!1},prevItem:{title:"Mithril Team Update",permalink:"/cardano-updates/2023-08-10-mithril"},nextItem:{title:"Crypto Team Update",permalink:"/cardano-updates/2023-08-04-crypto"}},l={authorsImageUrls:[void 0]},u=[{value:"High level summary",id:"high-level-summary",level:2},{value:"UTxO-HD",id:"utxo-hd",level:2},{value:"Genesis",id:"genesis",level:2},{value:"Fostering collaboration",id:"fostering-collaboration",level:2},{value:"Support",id:"support",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,r.kt)("p",null,"This week the Consensus team worked on integrating the latest node release into the UTxO HD branch. Our ad-hoc benchmarks in which we sync a node from scratch showed that the LMDB backend uses around 8GB of memory.  We also released new versions of ",(0,r.kt)("inlineCode",{parentName:"p"},"fs-sim")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"fs-api"),", and released ",(0,r.kt)("inlineCode",{parentName:"p"},"strict-checked-vars"),"."),(0,r.kt)("h2",{id:"utxo-hd"},"UTxO-HD"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Rebased UTxO-HD on top of node 8.2 (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/issues/256"},"issue"),")"),(0,r.kt)("li",{parentName:"ul"},"Address new ",(0,r.kt)("inlineCode",{parentName:"li"},"Maybe")," translations for UTxOs in Conway 1.6. (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/pull/261"},"PR"),")."),(0,r.kt)("li",{parentName:"ul"},"Performed ad-hoc benchmarking syncs with both implementations. The LMDB backend uses around 8GB of memory."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-node/compare/96e92351ad35cfce1b0c2c47c4ed05792bf81fad..90d4c93af0846c9b027d530c042180c51aeee4fd"},"Fixed")," an infinite loop on the mempool tracing code that was preventing the node from shutting down gracefully."),(0,r.kt)("li",{parentName:"ul"},"Fixed an infinite loop on the ledger state query for traversing queries that prevented the node from running ",(0,r.kt)("inlineCode",{parentName:"li"},"QueryUTxOByAddress")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/pull/273"},"PR"),")."),(0,r.kt)("li",{parentName:"ul"},"Measured the speed of ",(0,r.kt)("inlineCode",{parentName:"li"},"QueryUTxOByAddress")," under different ",(0,r.kt)("inlineCode",{parentName:"li"},"queryBatchSize")," values. There is a significant performance degradation for these queries when using the UTxO-HD version. Using the mainnet UTxO set at slot 90 million, querying an address took 40 seconds using the in-memory backend and 90 seconds using the LMDB backend, whereas the baseline took 7 seconds. We need to investigate if we can improve this situation or whether an external service that runs alongside the node is a better solution."),(0,r.kt)("li",{parentName:"ul"},"Refactored and implemented ledgertable-related classes for the general ",(0,r.kt)("inlineCode",{parentName:"li"},"HardforkBlock"),".")),(0,r.kt)("h2",{id:"genesis"},"Genesis"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nfrisby"},"Frisby")," and ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/amesgen"},"Esgen")," continue to engage with the Researchers on grinding against the Genesis design.")),(0,r.kt)("h2",{id:"fostering-collaboration"},"Fostering collaboration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Drafted a document explaining versioning of local state queries ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/ouroboros-consensus/pull/273"},"#273"),".")),(0,r.kt)("h2",{id:"support"},"Support"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nfrisby"},"Frisby")," is the release engineer this cycle."),(0,r.kt)("li",{parentName:"ul"},"Successfully created work-in-progress ",(0,r.kt)("inlineCode",{parentName:"li"},"ouroboros-consensus")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"cardano-api")," commits that integrate the 2023 Aug 7 tip of ",(0,r.kt)("inlineCode",{parentName:"li"},"cardano-ledger"),". This will require a release of ",(0,r.kt)("inlineCode",{parentName:"li"},"ouroboros-consensus"),", which hasn't happened yet.")))}d.isMDXComponent=!0}}]);