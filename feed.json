{
    "version": "https://jsonfeed.org/version/1",
    "title": "Cardano Updates Feed",
    "home_page_url": "https://input-output-hk.github.io/cardano-updates/",
    "description": "Regular updates from Cardano Development Teams",
    "items": [
        {
            "id": "2022-12-01-db-sync",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>The DB Sync team prepared a release <code>13.1.0.0-rc2</code> which includes many improvements for db-sync,\nit makes rollbacks and syncing much faster, simplifies the schema, fixes bugs and introduces\nmigrations. This release finalises the objectives that were set for db-sync for the previous\n3 months period and part of the syncing speed objective set for the next period\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/blob/3640e5aa00b8bada61e5d4b6eee063749866711b/cardano-db-sync/CHANGELOG.md#13100\" target=\"_blank\" rel=\"noopener noreferrer\">Changelog</a></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lower-level-summary\">Lower level summary<a class=\"hash-link\" href=\"#lower-level-summary\" title=\"Direct link to heading\">​</a></h2><ul><li><p>Branch <a href=\"https://github.com/input-output-hk/cardano-db-sync/compare/release/13.0.x..3640e5aa00b8bada61e5d4b6eee063749866711b\" target=\"_blank\" rel=\"noopener noreferrer\">release/13.1.0.x</a>\nincludes all the improvements related to the release. The release is passing through the testing\nphase and a number of bugs and issues have been fixed, like\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/issues/1312\" target=\"_blank\" rel=\"noopener noreferrer\">#1312</a>\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/issues/1311\" target=\"_blank\" rel=\"noopener noreferrer\">#1311</a>.\nAlso many new unit tests have been added.</p></li><li><p>Part of the release branch is cherry-picked back into master, in a way that it respects the new\nrelease and development process, so that it takes into account migrations\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/issues/1305\" target=\"_blank\" rel=\"noopener noreferrer\">release process</a></p></li><li><p>The DB Sync team has also tagged release <code>13.0.6</code> which better supports preview and preprod for\ndocker.</p></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-12-01-db-sync",
            "title": "DB sync Team Update",
            "summary": "High level summary",
            "date_modified": "2022-12-01T00:00:00.000Z",
            "author": {
                "name": "Kostas Dermentzis",
                "url": "https://github.com/kderme"
            },
            "tags": [
                "db-sync"
            ]
        },
        {
            "id": "2022-12-01-system-test",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>During the last 2 weeks we did more improvements on our Test Framework, planned the testing of the <em>P2P Single\nRelay</em> functionality, and also tested some DB-Sync tags.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"workstreams\">Workstreams<a class=\"hash-link\" href=\"#workstreams\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"framework-improvements\">Framework improvements:<a class=\"hash-link\" href=\"#framework-improvements\" title=\"Direct link to heading\">​</a></h3><ul><li>moved the System Test CLI Pipelines from BuildKite to Github Actions</li><li>improved the reporting tools to support the rerun of the failled tests and update of the reports </li><li>added support for Github API in <a href=\"https://github.com/mkoura/report-aggregator\" target=\"_blank\" rel=\"noopener noreferrer\">report-aggregator</a>, so reports will be generated from the GitHub nightly jobs from now on</li><li>added support for mixed topology - P2P, legacy, mixed topologies</li><li>planned the P2P Single Relay system test activities </li><li>added support to start regression tests with PV8 + better selection of tests</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"db-sync\">DB-Sync:<a class=\"hash-link\" href=\"#db-sync\" title=\"Direct link to heading\">​</a></h3><ul><li>confirmed that DB-Sync release 13.0.5 is compatible with Node release 1.35.4 + Protocol Version 8 (on the Preview environment)</li><li>tested a couple db-sync tags - 13.1.0.0-rc1, 13.1.0.0-rc2</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-12-01-system-test",
            "title": "System Test Team Update",
            "summary": "High level summary",
            "date_modified": "2022-12-01T00:00:00.000Z",
            "author": {
                "name": "Dorin Solomon",
                "url": "https://github.com/dorin100"
            },
            "tags": [
                "system-test"
            ]
        },
        {
            "id": "2022-11-30-consensus",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>During the past two weeks, the consensus team merged improvements to the monadic\ncursor API that was needed to implement LMDB range reads, which is in turn\nrequired for the implementation of the UTxO HD feature. We added tables to\nseveral tests in for the UTxO HD feature, which increases our confidence in the\ncorrectness of the prototype. The mempool property tests are close to being\ncompleted. Also, we finished the LSM tree tuning algorithm.</p><p>On the Genesis front we started simplifying the BlockFetch logic with\nCSJ-specific workloads in mind. </p><p>We are also documenting the Block Diffusion Pipelining feature, and added a\nhigh-level overview of consensus to the top level documentation of\n<code>ouroboros-network</code>.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"workstreams\">Workstreams<a class=\"hash-link\" href=\"#workstreams\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"utxo-hd-prototype\">UTxO HD prototype<a class=\"hash-link\" href=\"#utxo-hd-prototype\" title=\"Direct link to heading\">​</a></h3><p>We merged the implementation of a monadic cursor API (<a href=\"https://github.com/input-output-hk/lmdb-simple/pull/1\" target=\"_blank\" rel=\"noopener noreferrer\">#1</a>)) which was\nneeded to solve a bug with LMDB range-reads. After this PR was merged, we focused on\nbridging the gap between the <code>lmdb-simple</code> interface and consensus by facilitating\nusing <code>lmdb-simple</code>'s cursor API without <code>Serialise</code> constraints (<a href=\"https://github.com/input-output-hk/lmdb-simple/pull/3\" target=\"_blank\" rel=\"noopener noreferrer\">#3</a>).</p><p>We refactored the backing store property tests to use <code>quickcheck-lockstep</code>\n(<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4081\" target=\"_blank\" rel=\"noopener noreferrer\">#4081</a>).</p><p>We added tables to the mock ledger in the UTxO-HD feature branch\n(<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4184\" target=\"_blank\" rel=\"noopener noreferrer\">#4184</a>). Every test that used to run with <code>SimpleBlocks</code> now uses\ntables. This will enable us to exercise the UTxO HD mempool integration by\nleveraging the existing mempool property-tests. The new state-machine\nproperty-tests are still needed for testing the parallel behaviour of the\nmempool.</p><p>Our work on the mempool state-machine tests revealed the need for improvements\nin the <code>quickcheck-state-machine</code> library. Parallel testing assumed that the\nstate machine did not have access to mutable references. However, the mempool\ntests require the use of such mutable references for mocking the ledger\ninterface. As a result, our parallel tests were failing with rather obscure\nmessages. @Jasagredo submitted a pull request (<a href=\"https://github.com/stevana/quickcheck-state-machine/pull/12\" target=\"_blank\" rel=\"noopener noreferrer\">#12</a>) that allows for\nnew mutable references to be created at each run of the state machine.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"backing-store-property-tests\">Backing store property tests<a class=\"hash-link\" href=\"#backing-store-property-tests\" title=\"Direct link to heading\">​</a></h4><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lsm-tree-implementation\">LSM tree implementation<a class=\"hash-link\" href=\"#lsm-tree-implementation\" title=\"Direct link to heading\">​</a></h3><p>We finished the LSM Tree tuning algorithm. We are currently tidying up the code\nand gathering results (i.e., plots and their interpretation).</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"csj-prototype\">CSJ prototype<a class=\"hash-link\" href=\"#csj-prototype\" title=\"Direct link to heading\">​</a></h3><p>We started simplifying the BlockFetch logic with CSJ-specific workloads in mind.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-vrf-and-kes-crypto-integration\">New VRF and KES crypto integration<a class=\"hash-link\" href=\"#new-vrf-and-kes-crypto-integration\" title=\"Direct link to heading\">​</a></h3><p>Started working on supporting new version of <code>StandardCrypto</code> which uses compact\nKES and batched VRF (<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4151\" target=\"_blank\" rel=\"noopener noreferrer\">#4151</a>).</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"technical-debt\">Technical debt<a class=\"hash-link\" href=\"#technical-debt\" title=\"Direct link to heading\">​</a></h3><p>We reviewed the existing state of the Block Diffusion Pipelining document. We\nare now working on the \"Implementation\" section (<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4020\" target=\"_blank\" rel=\"noopener noreferrer\">#4020</a>).</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"fostering-collaboration\">Fostering collaboration<a class=\"hash-link\" href=\"#fostering-collaboration\" title=\"Direct link to heading\">​</a></h3><p>We cleared up our understanding of the error dynamics of forecasting\n(<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4146\" target=\"_blank\" rel=\"noopener noreferrer\">#4146</a> and <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4174\" target=\"_blank\" rel=\"noopener noreferrer\">#4174</a>).</p><p>We submitted a pull request that adds an overview of consensus to the <a href=\"https://input-output-hk.github.io/ouroboros-network/\" target=\"_blank\" rel=\"noopener noreferrer\">top level\ndocumentation</a> of\nouroboros-network (<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4197\" target=\"_blank\" rel=\"noopener noreferrer\">#4197</a>). This overview describes the consensus components and adds a\nhyperlinked map to the modules documentation.</p><p><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4197\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/input-output-hk/ouroboros-network/pull/4197</a></p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-30-consensus",
            "title": "Consensus Team Update",
            "summary": "High level summary",
            "date_modified": "2022-11-30T00:00:00.000Z",
            "author": {
                "name": "Damian Nadales",
                "url": "https://github.com/dnadales"
            },
            "tags": [
                "consensus"
            ]
        },
        {
            "id": "2022-11-30-performance-and-tracing",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><ol><li>Benchmarks for the 1.36 first pre-release bump of the internal components have been delivered, and data shows the component bump is clear for release.</li><li>SECP benchmarking enablement is underway:  the necessary generator features have been implemented, and are now being integrated into the workbench.</li><li>The new tracing system:  in response to the performance regression we previously discovered we are working on pre-planned implementation improvements, and doing more benchmarks.</li><li>Infrastructure:  the Nomad-based workbench backend has been made closer to a cloud deployment scenario.  Cleanup in preparation for Cicero CI/CD integration started.</li><li>Open sourcing:  ongoing SRE collaboration on production deployment of performance data publishing.</li></ol><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"performance\">Performance<a class=\"hash-link\" href=\"#performance\" title=\"Direct link to heading\">​</a></h2><p>We have ran benchmarks for the first component bump of the upcoming 1.36 release, and we don't see any significant performance changes.  The component bumps are therefore clear for release.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"tracing\">Tracing<a class=\"hash-link\" href=\"#tracing\" title=\"Direct link to heading\">​</a></h2><p>For the tracing system regression that we spotted -- even before, we already had plans for further efficiency improvement, and now we are actively pursuing them.\nThe idea is to collect more statically-available information to enable shifting of more tracing decisions from message delivery time to configuration time.</p><p>To support this effort, we also started running more benchmarks and enhanced data analysis with relevant metrics.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"infrastructure\">Infrastructure<a class=\"hash-link\" href=\"#infrastructure\" title=\"Direct link to heading\">​</a></h2><p>Generation support for Plutus V2 has been implemented and so, with the help of the previously made looped signature-verifying script, the generator is now capable of producing two SECP workloads: verifying either ECDSA or Schnorr signatures.  This is now being integrated into the infrastructure -- the generator parametrisation API is being enhanced and the workbench is being extended to handle the new parametrisation.</p><p>In addition the workbench is now being enhanced to handle protocol-version-based choices for the Plutus cost model.</p><p>The intermediate cloud compatibility iteration of the workbench cloud enablement effort was merged.\nWe are now doing some cleanup work in preparation for starting the Cicero backend, which will bring us nearly completely to the CI/CD integration.</p><p>We continue collaboration with SRE on production deployment of data publishing.  We now have a gradual rollout plan, which respects the plans for SRE infrastructure feature availability.</p><p>We are working on recovering the software dependency manifest feature that was lost with the organisation-wide transition to CHaP.</p><p>As usual, a number of smaller workbench, data analysis &amp; reporting improvements have been made.</p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-30-performance-and-tracing",
            "title": "Performance & tracing update",
            "summary": "High level summary",
            "date_modified": "2022-11-30T00:00:00.000Z",
            "author": {
                "name": "Serge Kosyrev",
                "url": "https://github.com/deepfire"
            },
            "tags": [
                "performance-tracing"
            ]
        },
        {
            "id": "2022-11-28-network",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"stake-driven-data-diffusion-release-for-relays\">Stake-Driven Data Diffusion Release for Relays<a class=\"hash-link\" href=\"#stake-driven-data-diffusion-release-for-relays\" title=\"Direct link to heading\">​</a></h2><p>IOG networking team decided to release the <em>Stake-Driven Data Diffusion with\nRobust Optimised Peer Selection</em> also more commonly known as <em>P2P</em>.  In the\nlast update, we informed about a performance regression, but it turns out it\nonly affects block producers, and thus we highly advise against running it on\nsuch nodes.  Further investigation is required to find the cause of it.</p><p>On IOG's benchmarking cluster we have seen quite a good performance improvement\non block propagation itself.  The cluster is running a static topology with\nvalency 6 (each node is connected to 6 other nodes).  In which every of the 50\nnodes are block producers.  The setup of this network is the same as mainnet.\nWe've seen 40-50% performance improvement on block propagation comparing to the\nsame cluster deployed with the same topology but using non-P2P nodes.  We think\nthis performance improvement is caused by using full duplex connections.  Quite\nlikely the transaction traffic floating in both directions on the same TCP\nconnection helps to keep the TCP window open.  Note that in a cluster of 50\nnodes with valency 6 the probability of having at least one duplex connection\nis more than 50%.  We don't expect the same improvement on mainnet because the\nnetwork is much wider and the transaction traffic is not as large.</p><p>Just before the release we squashed two small bugs:</p><ul><li><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4163\" target=\"_blank\" rel=\"noopener noreferrer\">issue #4163</a> - top level integration bug in <code>keep-alive</code>;</li><li><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4177\" target=\"_blank\" rel=\"noopener noreferrer\">issue #4177</a> - a bug in <code>outbound-governor</code>;</li><li><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4165\" target=\"_blank\" rel=\"noopener noreferrer\">PR #4165</a> - a fix <code>cardano-ping</code> support of <code>NodeToNodeV_10</code>.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"peer-sharing\">Peer Sharing<a class=\"hash-link\" href=\"#peer-sharing\" title=\"Direct link to heading\">​</a></h3><p>We were carrying a review of <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4019\" target=\"_blank\" rel=\"noopener noreferrer\">peer sharing PR</a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"deltaq\">DeltaQ<a class=\"hash-link\" href=\"#deltaq\" title=\"Direct link to heading\">​</a></h3><p>Neil Davies was invited to give a guest lecture entitled <code>Avoiding System Catastrophes</code> at <a href=\"https://uclouvain.be/en/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">UCLouvain</a>.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-have-we-achieve-last-sprint\">What have we achieve last sprint<a class=\"hash-link\" href=\"#what-have-we-achieve-last-sprint\" title=\"Direct link to heading\">​</a></h2><ul><li><p><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4163\" target=\"_blank\" rel=\"noopener noreferrer\">issue #4163</a>: we found out that a control message is not passed to the\n<code>keep-alive</code> mini-protocol, this results in every demotion executing demotion\ntimeout rather than a graceful termination.  With the fix the node will no longer log:</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> </span><span class=\"token property\" style=\"color:#36acaa\">\"kind\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"PeerStatusChangeFailure\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token property\" style=\"color:#36acaa\">\"peerStatusChangeType\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"WarmToCold (ConnectionId {localAddress = 192.168.0.10:7000, remoteAddress = 3.129.186.40:3000})\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token property\" style=\"color:#36acaa\">\"reason\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"TimeoutError\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div></li><li><p><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4177\" target=\"_blank\" rel=\"noopener noreferrer\">issue #4177</a>: we fixed an assertion failure in the <code>outbound-governor</code>; now\nwe don't try demoted peers which are being demoted already.</p></li><li><p><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4155\" target=\"_blank\" rel=\"noopener noreferrer\">PR #4155</a>: we refactored <code>ouroboros-network</code> packages.  There's a top level\n<code>ouroboros-consensus-diffusion</code> package which integrates <code>network</code>\n&amp; <code>consensus</code> code.  We also introduced:</p><ul><li><code>ouroboros-network-api</code> package which contains the API shared between\n<code>network</code> &amp; <code>conensus</code>;</li><li><code>ouroboros-network-mock</code> package which contains mock API used for testing\n(e.g. a mock chain &amp; chain producer, etc.)</li><li><code>ouroboros-network-protocols</code> package which contains implementation of all\n(but <code>handshake</code>) mini-protocols, exposes a <code>testlib</code> and contains <code>test</code>\nand <code>cddl</code> components.</li></ul><p>This made the dependency tree of <code>network</code> &amp; <code>consensus</code> packages much\ncleaner.</p></li><li><p><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4169\" target=\"_blank\" rel=\"noopener noreferrer\">PR #4169</a>: we described the usage of release branches in <code>CONTRIBUTING.md</code>\ndoc.</p></li><li><p><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4165\" target=\"_blank\" rel=\"noopener noreferrer\">PR #4165</a>: we fixed <code>cardano-ping</code> support of <code>NodeToNodeV_10</code> protocol.</p></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"deltaq-1\">DeltaQ<a class=\"hash-link\" href=\"#deltaq-1\" title=\"Direct link to heading\">​</a></h3><p>The abstract of the talk:</p><blockquote><p>An essential step to ensuring that distributed systems are fit for\npurpose.</p><p>Distributed systems have become an integral part of our society and\ndaily lives. We are, both implicitly and explicitly, individually as well as\ncollectively, placing ever more trust in them.</p><p>Are they worthy of this trust?  Our need for them to be ‘fit-for-purpose’ goes\nwell beyond notions of functional correctness (i.e. never getting the wrong\nanswer). We need them to deliver the desired outcomes in a timely, robust,\nreliable, resilient fashion, at scale and in a sustainable way (both\neconomically and environmentally).</p><p>This all sounds like a worthy aspiration, but what would be a practical\napproach to capturing and reasoning about these issues? How can we ensure that\nsystems can meet their fit-for-purpose objectives, not just in their design but\nas they are deployed, encounter the imperfect world, are scaled to become\neconomic, and proceed into ongoing maintenance?</p><p>This talk will illustrate how the notions of Outcomes and Quality Attenuation\n(as captured by ‘∆Q’) are being used to both frame the necessary notions and\nprovide a basis for assuring the refinement and reification of such systems,\nfrom initial concept to operational infrastructure.</p></blockquote><p>You can download the slides from <a target=\"_blank\" href=\"/cardano-updates/assets/files/2022-11-24-UCL-60c46564c5dee25b0060304c060ab1cf.pdf\">here</a>.</p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-28-network",
            "title": "Network Team Update",
            "summary": "Stake-Driven Data Diffusion Release for Relays",
            "date_modified": "2022-11-28T00:00:00.000Z",
            "author": {
                "name": "Marcin Szamotulski",
                "url": "https://github.com/coot"
            },
            "tags": [
                "network",
                "release"
            ]
        },
        {
            "id": "2022-11-25-crypto",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>The four open fronts that the crypto team is working on are:</p><ul><li>MuSig2: We are almost ready to reach a point where the MuSig2 library is ready for usage by the Hydra team. </li><li>Mithril: We started to think how Mithril-core can be designed such that it can be leverage by contexts where the verifiers run full nodes</li><li>cardano-base: The VRF and BLS branchs are still open and in progress</li><li>KES agent: We keep progressing with KES secure forgetting implementation as well as the KES agent. </li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"low-level-summary\">Low level summary<a class=\"hash-link\" href=\"#low-level-summary\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"musig2\">MuSig2<a class=\"hash-link\" href=\"#musig2\" title=\"Direct link to heading\">​</a></h3><ul><li>We redesigned the library so that MuSig2 lib users don't need to be aware of the underlying secp256k1 library <a href=\"https://github.com/input-output-hk/musig2/pull/31\" target=\"_blank\" rel=\"noopener noreferrer\">PR#31</a></li><li>We are introducing a more granular error handling mechanism <a href=\"https://github.com/input-output-hk/musig2/pull/33\" target=\"_blank\" rel=\"noopener noreferrer\">PR#33</a></li><li>We rethought the API and made it more consistent with the underlying secp256k1 library <a href=\"https://github.com/input-output-hk/musig2/pull/35\" target=\"_blank\" rel=\"noopener noreferrer\">PR#35</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mithril\">Mithril<a class=\"hash-link\" href=\"#mithril\" title=\"Direct link to heading\">​</a></h3><ul><li>The mithril crates in general will be published in crates.io, and we adapted the core library's README <a href=\"https://github.com/input-output-hk/mithril/pull/616\" target=\"_blank\" rel=\"noopener noreferrer\">PR#616</a> </li><li>We are modifying the individual signature to not contain the VK and stake. This was not necessary, as the current design requires the aggregator of Mithril certificates to know this information <a href=\"https://github.com/input-output-hk/mithril/pull/620\" target=\"_blank\" rel=\"noopener noreferrer\">PR#620</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cardano-base\">cardano-base<a class=\"hash-link\" href=\"#cardano-base\" title=\"Direct link to heading\">​</a></h3><ul><li>We've been still working in updating to the latest version of the VRF. In particular we modified the cbits to use the latest version of libsodium stable (1.0.18) <a href=\"https://github.com/input-output-hk/cardano-base/pull/341\" target=\"_blank\" rel=\"noopener noreferrer\">PR#341</a></li><li>SKs, VKs and VRF outputs will be compatible across the different versions. We are implementing conversion functions for simple transitions <a href=\"https://github.com/input-output-hk/cardano-base/pull/344\" target=\"_blank\" rel=\"noopener noreferrer\">PR#344</a></li><li>Benchmarks on pairing built-ins have already started, so we were finalising some CI concerns and final remarks on the BLS PR, so that it can be merged as soon as we have green light from plutus <a href=\"https://github.com/input-output-hk/cardano-base/pull/266\" target=\"_blank\" rel=\"noopener noreferrer\">PR#266</a></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"kes-agent\">KES agent<a class=\"hash-link\" href=\"#kes-agent\" title=\"Direct link to heading\">​</a></h2><ul><li>We keep progressing in the secure forgetting PR and resolving some bugs on memory handling <a href=\"https://github.com/input-output-hk/cardano-base/pull/255\" target=\"_blank\" rel=\"noopener noreferrer\">PR#255</a></li><li>Increasing the test framework to make sure concurrency is properly treated by the KES Agent, for which we are including refcounted references. General progress in the implementation.</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-25-crypto",
            "title": "Crypto Team Update",
            "summary": "High level summary",
            "date_modified": "2022-11-25T00:00:00.000Z",
            "author": {
                "name": "Iñigo Querejeta Azurmendi",
                "url": "https://github.com/iquerejeta"
            },
            "tags": [
                "ledger"
            ]
        },
        {
            "id": "2022-11-25-hydra",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High-level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>This week, the Hydra team attended the Cardano Summit in Lausanne, where Sebastian gave a <a href=\"https://summit.cardano.org/agenda-day-2/cardano-ballot-speaker-winner-presentation-6/\" target=\"_blank\" rel=\"noopener noreferrer\">presentation</a> about Hydra and the whole team connected with the Cardano Community. After the public event, th Hydra team also conducted a workshop, which provided room for a retrospective, various planning sessions and they hacked together on different ideas.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-did-the-team-achieve-this-week\">What did the team achieve this week<a class=\"hash-link\" href=\"#what-did-the-team-achieve-this-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Attended the Cardano Summit in Lausanne. Hydra was topic of one talk: <a href=\"https://summit.cardano.org/agenda-day-2/cardano-ballot-speaker-winner-presentation-6/\" target=\"_blank\" rel=\"noopener noreferrer\">https://summit.cardano.org/agenda-day-2/cardano-ballot-speaker-winner-presentation-6/</a></li><li>Had a team workshop / hackathon after the summit:<ul><li>Retrospective</li><li>Impact mapping session</li><li>Hacked on smaller things</li></ul></li><li>Got a PR for tullia/cicero things by @kdermetfan</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-are-the-goals-of-next-week\">What are the goals of next week<a class=\"hash-link\" href=\"#what-are-the-goals-of-next-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Monthly report &amp; review meeting</li><li>Tie up several loose ends / branches.</li><li>Resolve Tx validity discussions &amp; PRs.</li><li>Review cicero PR &amp; try it out.</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-25-hydra",
            "title": "Hydra Team Update",
            "summary": "High-level summary",
            "date_modified": "2022-11-25T00:00:00.000Z",
            "author": {
                "name": "Sebastian Nagel",
                "url": "https://github.com/ch1bo"
            },
            "tags": [
                "hydra"
            ]
        },
        {
            "id": "2022-11-23-ledger",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>We released <a href=\"https://github.com/cardano-foundation/CIPs/pull/380\" target=\"_blank\" rel=\"noopener noreferrer\">CIP-1694</a>,\nour proposal for entering the <a href=\"https://roadmap.cardano.org/en/voltaire/\" target=\"_blank\" rel=\"noopener noreferrer\">Voltaire phase</a>.\n<strong>Please come join the discussion</strong>, this will be an incredibly exciting transition for\nCardano and we want everyone to participate!</p><p>We now have a sensible way to version all of the serialization schemes used in the ledger.\nThe draft pull request was polished, reviewed, and merged this week.\nThis solves many problems that have vexed us since the beginning of the Shelley ledger era.</p><p>Everyone working on the Cardano node is working together to improve our release process,\nand the ledger team in particular dedicated one engineer to help with these efforts\nfor the next release.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lower-level-summary\">Lower level summary<a class=\"hash-link\" href=\"#lower-level-summary\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-conway-ledger-era\">The Conway ledger era<a class=\"hash-link\" href=\"#the-conway-ledger-era\" title=\"Direct link to heading\">​</a></h3><p>The current proposal in <a href=\"https://github.com/cardano-foundation/CIPs/pull/380\" target=\"_blank\" rel=\"noopener noreferrer\">CIP-1694</a> encompasses two new ledger eras.\nThe first era will be called Conway, after the English mathematician John Horton Conway.\nThe community facing aspects of the Conway ledger era will be very minimal,\nbut it will pave the way for introducing liquid democracy.\nThe details can be viewed <a href=\"https://github.com/input-output-hk/cardano-ledger/projects/4\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\nWe do not yet have a formal specification for the Conway era.\nOur plan is to debut the\n<a href=\"https://github.com/input-output-hk/formal-ledger-specifications\" target=\"_blank\" rel=\"noopener noreferrer\">formal ledger model</a>.\nBriefly, the Conway ledger era will:</p><ul><li>introduce SPO voting for hard forks (in the spirit of the now abandoned <a href=\"https://github.com/cardano-foundation/CIPs/pull/318\" target=\"_blank\" rel=\"noopener noreferrer\">CIP-47</a>)</li><li>provide an on-chain mechanism for rotating the governance keys</li><li>re-plumb the ledger rules involving governance to be in line with <a href=\"https://github.com/cardano-foundation/CIPs/pull/380\" target=\"_blank\" rel=\"noopener noreferrer\">CIP-1694</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"versioned-cbor\">Versioned CBOR<a class=\"hash-link\" href=\"#versioned-cbor\" title=\"Direct link to heading\">​</a></h3><p>We now have the ability to easily tie our serialization schemes to the Cardano\nmajor protocol version.\nWe still aim to preserve backwards compatibility as much as possible, but we now have a principled\nplan for resolving problems (see <a href=\"https://github.com/cardano-foundation/CIPs/pull/372\" target=\"_blank\" rel=\"noopener noreferrer\">CIP-ledger-cbor</a>).\nIn particular, we can now address several long standing issues, such as\n<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/2444\" target=\"_blank\" rel=\"noopener noreferrer\">issue-2444</a>, <a href=\"https://github.com/input-output-hk/cardano-ledger/issues/2965\" target=\"_blank\" rel=\"noopener noreferrer\">issue-2965</a>, and <a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3003\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3003</a>. </p><p>The final (and massive!) pull request which brought us the versioning is <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3138\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3138</a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"deposit-tracking\">Deposit tracking<a class=\"hash-link\" href=\"#deposit-tracking\" title=\"Direct link to heading\">​</a></h3><p>The draft pull request which was exploring how best to track individual deposits\nis much closer now to being ready to take out of draft (<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3127\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3127</a>).\nFor background on the issue, see <a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3113\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3113</a>.\nThis is quite an invasive change which effects many of our tests, which we are now addressing.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"technical-debt\">Technical debt<a class=\"hash-link\" href=\"#technical-debt\" title=\"Direct link to heading\">​</a></h3><p>As always, we keep working on technical debt.\nWe have deduplicated a some things: <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3129\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3129</a>, <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3162\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3162</a>.\nWe have memoized a problematic computation (though more due diligence is needed before we can\nmerge): <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3141\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3141</a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"node-release\">Node release<a class=\"hash-link\" href=\"#node-release\" title=\"Direct link to heading\">​</a></h3><p>We have been helping with the node release efforts. See <a href=\"https://github.com/input-output-hk/cardano-node/pull/4608\" target=\"_blank\" rel=\"noopener noreferrer\">pull-4608</a>.</p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-23-ledger",
            "title": "Ledger Team Update",
            "summary": "High level summary",
            "date_modified": "2022-11-23T00:00:00.000Z",
            "author": {
                "name": "Jared Corduan",
                "url": "https://github.com/JaredCorduan"
            },
            "tags": [
                "ledger"
            ]
        },
        {
            "id": "2022-11-18-hydra",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High-level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>This week, the Hydra team released version <code>0.8.1</code>, which includes several fixes and a user-wished extension of the persistence introduced by <code>0.8.0</code> of replaying server outputs to make clients like the <code>hydra-tui</code> be aware of the latest <code>hydra-node</code> state. The team also worked on the specification and closing gaps in the on-chain scripts, collaborated with the education team on a Hydra tutorial and also renamed the repository from <code>hydra-poc</code> to <a href=\"https://github.com/input-output-hk/hydra\" target=\"_blank\" rel=\"noopener noreferrer\"><code>hydra</code></a>!</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-did-the-team-achieve-this-week\">What did the team achieve this week<a class=\"hash-link\" href=\"#what-did-the-team-achieve-this-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Implemented replaying of server outputs to address <a href=\"https://github.com/input-output-hk/hydra-poc/issues/580\" target=\"_blank\" rel=\"noopener noreferrer\">#580</a></li><li>Released version 0.8.1 containing this and other fixes <a href=\"https://github.com/input-output-hk/hydra/releases/tag/0.8.1\" target=\"_blank\" rel=\"noopener noreferrer\">Release notes</a></li><li>Worked on the bounded tx validity as one of the on-chain script fixes, but couldn<!-- -->’<!-- -->t finish it just yet <a href=\"https://github.com/input-output-hk/hydra/pull/615\" target=\"_blank\" rel=\"noopener noreferrer\">#615</a></li><li>Collaborated with the education team on a Hydra tutorial.</li><li>Discovered and discussed issues with the <!-- -->“<!-- -->seen ledger<!-- -->”<!-- -->.</li><li>Renamed the Hydra repository <code>hydra-poc</code> -&gt; <code>hydra</code></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-are-the-goals-of-next-week\">What are the goals of next week<a class=\"hash-link\" href=\"#what-are-the-goals-of-next-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Create and discuss an ADR about handling tx validity correctly.</li><li>Attend the Cardano Summit in Lausanne. Hydra will be topic of one talk! Save the date+time: <strong>\"Developing Hydra\" on Day 2, Nov 21st, 13:50 CET</strong></li><li>Have a team workshop / hackathon after the summit:<ul><li>Retrospective</li><li>Roadmapping session</li><li>Hack on something complex or useful</li></ul></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-18-hydra",
            "title": "Hydra Team Update",
            "summary": "High-level summary",
            "date_modified": "2022-11-18T00:00:00.000Z",
            "author": {
                "name": "Sebastian Nagel",
                "url": "https://github.com/ch1bo"
            },
            "tags": [
                "hydra"
            ]
        },
        {
            "id": "2022-11-18-mithril",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-overview\">High level overview<a class=\"hash-link\" href=\"#high-level-overview\" title=\"Direct link to heading\">​</a></h2><p>The Mithril team has released their second distribution 2246.1 following the activation of the alpha version of the new release process. They continued refining its implementation and added a new set of artifacts to the distributions, such as Debian packages and macOS/Windows binaries. The team also enhanced the Mithril Explorer, which now provides more detailed information about epoch settings and easier access to multiple aggregators for the users. They have also worked on an enhanced mechanism for node versioning, storage, and communication protocol. They also implemented version detections for the signer and aggregator nodes, designed the automatic store upgrade feature for these nodes, and enhanced the documentation of the configuration parameters of the several Mithril networks. </p><p>Finally, the team continued working on the elaboration of the CIP that will allow the decentralization of Mithril by relying on the Cardano node network layer.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"low-level-overview\">Low level overview<a class=\"hash-link\" href=\"#low-level-overview\" title=\"Direct link to heading\">​</a></h2><ul><li>Released a new Mithril distribution <a href=\"https://github.com/input-output-hk/mithril/releases/tag/2246.1\" target=\"_blank\" rel=\"noopener noreferrer\">2246.1</a></li><li>Completed the first stage of the store migrations process <a href=\"https://github.com/input-output-hk/mithril/issues/562\" target=\"_blank\" rel=\"noopener noreferrer\">#562</a></li><li>Added a Mithril API version that is now exposed in the headers of the requests sent and received by the nodes <a href=\"https://github.com/input-output-hk/mithril/issues/565\" target=\"_blank\" rel=\"noopener noreferrer\">#565</a></li><li>Enhanced the explorer UI with epoch settings information and aggregators management on browser local storage <a href=\"https://github.com/input-output-hk/mithril/issues/576\" target=\"_blank\" rel=\"noopener noreferrer\">#576</a></li><li>Prepared a Daedalus synchronization benchmark video with/without Mithril <a href=\"https://github.com/input-output-hk/mithril/issues/606\" target=\"_blank\" rel=\"noopener noreferrer\">#606</a></li><li>Upgraded the Cardano nodes of the testing Mithril networks to <code>1.35.4</code> <a href=\"https://github.com/input-output-hk/mithril/issues/594\" target=\"_blank\" rel=\"noopener noreferrer\">#594</a></li><li>Worked on implementing SPO tests nodes on testing Mithril networks <a href=\"https://github.com/input-output-hk/mithril/issues/563\" target=\"_blank\" rel=\"noopener noreferrer\">#563</a></li><li>Worked on the CIP design for Mithril piggybacked on the Cardano network layer <a href=\"https://github.com/input-output-hk/mithril/issues/588\" target=\"_blank\" rel=\"noopener noreferrer\">#588</a></li><li>Worked on the refactorizaton of the aggregator multi signer engine <a href=\"https://github.com/input-output-hk/mithril/issues/398\" target=\"_blank\" rel=\"noopener noreferrer\">#398</a></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-18-mithril",
            "title": "Mithril Team Update",
            "summary": "High level overview",
            "date_modified": "2022-11-18T00:00:00.000Z",
            "author": {
                "name": "Iñigo Querejeta Azurmendi",
                "url": "https://github.com/iquerejeta"
            },
            "tags": [
                "mithril"
            ]
        },
        {
            "id": "2022-11-16-consensus",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High-level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>During the past two weeks, the consensus team started documenting the\nimplementation of the UTxO HD feature and continued developing tests for it. As\npart of our work on UTxO HD, we improved the Haskell support for LMDB. We also\nspent time working on the LSM tree prototype, and designed a parameter tuning\nalgorithm for it. Regarding our work on Genesis, our investigation of the\n\"plateaus\" pointed at the <code>TICKF</code> slowdown on era boundaries as culprit. This\nled us to developing a caching strategy that will not only remove the\naforementioned \"plateaus\", but can help alleviating the growing block production\ndelay on epoch switch. We also helped reviewing the block forge credential\nhotswap feature, which is intended for use in the adoption of P2P.</p><p>We also worked on paying technical debt and fostering collaboration. In\nparticular, we improved the <code>io-sim</code> framework, which is crucial for testing and\nsimulating Cardano components. We also removed thunks that appeared on era\ntranslations, and improved our diffusion pipelining feature. We are working on a\npresentation for explaining Praos and Genesis.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-status-report\">High-level status report<a class=\"hash-link\" href=\"#high-level-status-report\" title=\"Direct link to heading\">​</a></h2><ul><li>Finish the UTxO HD prototype: in progress.<ul><li>We added documentation for this feature.</li><li>We developed the second version of the mempool tests.</li><li>We fixed benchmarks that were inflating the speedup we observed in the\nanti-diff implementation of sequences of differences. Speedups are now in the\nrange of <!-- -->[3.33, 4.75]<!-- -->, which remain significant.</li><li>We continued improving Haskell LMDB support.</li><li>We finished implementing a \"parameter tuning algorithm\" for the LSM tree\nprototype. This enables us to run experiments to check the correctness of\nthe algorithm.</li></ul></li><li>Genesis: in progress.<ul><li>Work investigating the \"plateaus\" in the <code>ChainSync</code> jumping prototype\npointed to the <code>TICKF</code> slowdown on era boundaries as culprit.</li></ul></li><li>Tech debt:<ul><li>We improved the capabilities of our <code>io-sim</code> library, which is crucial for\ntesting and simulating Cardano components.</li><li>We removed thunks from epoch translations in the ledger.</li><li>We added Linux CI support for <code>lmdb-simple</code>.</li><li>We got pending diffusion pipelining improvements merged.</li></ul></li><li>Fostering collaboration:<ul><li>We are working on a explanation of Praos and Genesis protocols.</li></ul></li><li>Support:<ul><li>Investigation of CSJ \"plateaus\" led us to developing a caching strategy for\n<code>TICKF</code> that will not only remove these \"plateaus\", but can help alleviating\nthe growing block production delay on epoch switch.</li><li>We reviewed the block forge credential hotswapping feature which is intended\nfor use in the adoption of P2P.</li></ul></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"workstreams\">Workstreams<a class=\"hash-link\" href=\"#workstreams\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"finish-the-utxo-hd-prototype\">Finish the UTxO HD prototype<a class=\"hash-link\" href=\"#finish-the-utxo-hd-prototype\" title=\"Direct link to heading\">​</a></h3><p>We merged PR <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4060\" target=\"_blank\" rel=\"noopener noreferrer\">#4060</a>, which adds a report documenting the UTxO HD\nfeature, and puts emphasis in explaining how the mempool works in combination\nwith UTxO HD.</p><p>We opened a draft PR with the second iteration of the property tests for the\nmempool (<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4076\" target=\"_blank\" rel=\"noopener noreferrer\">#4076</a>).</p><p>We fixed the <code>Arbitrary</code> instances for keys and values in <code>DiffSeq</code> benchmarks\n(<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4143\" target=\"_blank\" rel=\"noopener noreferrer\">#4143</a>). The problem was that we were testing with mostly small\nvalues, which artificially boosted the performance gains we saw on benhcmarks.\nSpeedups are now in the range of <!-- -->[3.33, 4.75]<!-- --> across the different\nconfigurations.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"backing-store-property-tests\">Backing store property tests<a class=\"hash-link\" href=\"#backing-store-property-tests\" title=\"Direct link to heading\">​</a></h4><p>We focused on incorporating feedback on the monadic cursor API PR (<a href=\"https://github.com/input-output-hk/lmdb-simple/pull/1\" target=\"_blank\" rel=\"noopener noreferrer\">#1</a>).\nThis required us to make small tweaks to <code>quickcheck-lockstep</code> to test the new\nAPI. We also updated the backing store property tests to use the new version of\nthe monadic cursor API.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lsm-tree-implementation\">LSM tree implementation<a class=\"hash-link\" href=\"#lsm-tree-implementation\" title=\"Direct link to heading\">​</a></h3><p>We worked on the LSM tree prototype. In particular: finished implementing a\n\"parameter tuning algorithm\" that adapts the LSM tree design based on factors\nlike:</p><ul><li>workload</li><li>machine specs, </li><li>and characteristics of the data being stored. </li></ul><p>We are now running experiments to gather results and cross-reference them with\nexisting experimental results from the LSM tree paper to see if the algorithm is\nworking correctly.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"benchmarking-the-csj-prototype\">Benchmarking the CSJ prototype<a class=\"hash-link\" href=\"#benchmarking-the-csj-prototype\" title=\"Direct link to heading\">​</a></h3><p>We focused on investigating the \"plateaus\" in the <code>ChainSync</code> tip, which turned\nout to be due to the <code>TICKF</code> bug which we previously were only aware of in the\ncontext of the long forging times near epoch boundaries. For the most drastic\npatch by @nfrisby to speed up <code>TICKF</code>, full sync is speeding up by 7%.</p><p>The following plot shows that by caching the <code>TICKF</code> the <code>ChainSync</code> tip and the\n<code>VolatileDB</code> tip progress at the same rate.</p><p><img loading=\"lazy\" src=\"/cardano-updates/assets/images/2022-11-16-removed-stuttering-e49aa27a0e549f0195373203da971ba7.png\" width=\"765\" height=\"445\" class=\"img_ev3q\"></p><p>The plot below shows the speedup observed by caching the <code>TICKF</code> rule wrt the\nbaseline.</p><p><img loading=\"lazy\" src=\"/cardano-updates/assets/images/2022-11-16-comparing-TICKF-batch-c6570a71c4a5d53b10cb7309d2cc742c.png\" width=\"773\" height=\"445\" class=\"img_ev3q\"></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"technical-debt\">Technical debt<a class=\"hash-link\" href=\"#technical-debt\" title=\"Direct link to heading\">​</a></h3><p>After addressing the PR comments, we merged PR <a href=\"https://github.com/input-output-hk/io-sim/pull/16\" target=\"_blank\" rel=\"noopener noreferrer\">#16</a>, which implements\nthe <code>MonadCatch</code> instance for <code>STM</code>. This extends the capability of our <code>io-sim</code>\nlibrary, which is crucial for testing and simulating Cardano components PR #16\nclosed <a href=\"https://github.com/input-output-hk/ouroboros-network/issues/1461\" target=\"_blank\" rel=\"noopener noreferrer\">#1461</a>. This new feature was published as version <code>0.4.0.0</code>\nof <code>io-sim</code>.</p><p>We continued with our work fixing the <code>NoThunk</code> errors required for enabling\nnightly tests, with the help of <code>TVarInvariant</code> checks in <code>strict-stm</code> and\n<code>nothunks</code> libraries. We proposed fixes in <code>cardano-ledger</code> that took care of\nthunks that appeared in era translations (<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3143\" target=\"_blank\" rel=\"noopener noreferrer\">#3143</a>). The fixes will be\nintegrated back into consensus when <code>cardano-ledger</code> approves and publish the\nchanges introduced in <code>#3143</code>.</p><p>We added CI support for <code>lmdb-simple</code> (<a href=\"https://github.com/input-output-hk/lmdb-simple/pull/2\" target=\"_blank\" rel=\"noopener noreferrer\">#2</a>). We currently test the build on\na Linux environment only.</p><p>We got pending diffusion pipelining PRs (<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3857\" target=\"_blank\" rel=\"noopener noreferrer\">#3857</a>, <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3860\" target=\"_blank\" rel=\"noopener noreferrer\">#3860</a>,\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3856\" target=\"_blank\" rel=\"noopener noreferrer\">#3856</a>) merged, after rebasing and addressing feedback.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"fostering-collaboration\">Fostering collaboration<a class=\"hash-link\" href=\"#fostering-collaboration\" title=\"Direct link to heading\">​</a></h3><p>@nfrisby finished a visualisation tool and outlined scripts for the Praos and\nGenesis explanation presentations. The idea is to produce a video that gives an\noverview of these protocols.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"support\">Support<a class=\"hash-link\" href=\"#support\" title=\"Direct link to heading\">​</a></h3><p>We started working on caching the computation of the <code>TICKF</code> rule\n(<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4054\" target=\"_blank\" rel=\"noopener noreferrer\">#4054</a>), since this was blocking our benchmarking work for\nGenesis. In addition, this issue has the Cardano community <a href=\"https://github.com/input-output-hk/cardano-node/issues/4421\" target=\"_blank\" rel=\"noopener noreferrer\">quite\nconcerned</a>, so we are hoping the work done in caching the\ncomputation of the <code>TICKF</code> rule can help alleviating the growing block\nproduction delay on epoch switch.</p><p>We reviewed the block forge credential hotswapping PR <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3800\" target=\"_blank\" rel=\"noopener noreferrer\">#3800</a> from the\nnetworking team, which is intended for use in the adoption of P2P.</p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-16-consensus",
            "title": "Consensus Team Update",
            "summary": "High-level summary",
            "date_modified": "2022-11-16T00:00:00.000Z",
            "author": {
                "name": "Damian Nadales",
                "url": "https://github.com/dnadales"
            },
            "tags": [
                "consensus"
            ]
        },
        {
            "id": "2022-11-16-performance-and-tracing",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><ol><li>P2P performance investigation is ongoing, in support of the networking team.</li><li>SECP benchmarking enablement is underway: we already have the script and are working on Plutus V2 generation support.</li><li>Unexpected setback in the new tracing system:  full scale benchmarks have shown a performance regression: local chain syncing benchmarks were an improvement over legacy tracing.</li><li>On the open sourcing front we added an integrated data dictionary, which is necessary for explaining ourselves to the world.  SRE collaboration on production deployment of performance data publishing has started.</li><li>We have started bringing the Nomad-based workbench backend closer to a cloud deployment scenario.</li></ol><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"performance\">Performance<a class=\"hash-link\" href=\"#performance\" title=\"Direct link to heading\">​</a></h2><p>We are supporting the networking team on P2P performance investigation.  Generation support for Plutus V2 was started.  We have collaborated with the Plutus team to get a SECP benchmark script, which is now ready for use, pending Plutus V2 support.  The transaction generator has also been updated to the cardano-api changes.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"tracing\">Tracing<a class=\"hash-link\" href=\"#tracing\" title=\"Direct link to heading\">​</a></h2><p>We ran an initial round of full-scale benchmarks for the new tracing system -- which uncovered a regression relative to legacy tracing, which is contrary to the local chain syncing benchmarks, that showed improvement instead.  We added tracing to cardano-tracer, fixing some minor bugs on the way.  Network and disk IO metrics are now collected once again and are integrated into analysis.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"infrastructure\">Infrastructure<a class=\"hash-link\" href=\"#infrastructure\" title=\"Direct link to heading\">​</a></h2><p>The first iteration of the Nomad-based local workbench backend was completed -- it has reached feature parity with the existing supervisor backend.  The next iteration started, bringing it closer to the cloud scenario, by deploying to separate Nomad tasks connected by a virtual network.  This will serve as basis for CI and full cloud backends.</p><p>We designed and implemented the authoring pipeline for the performance data dictionary, which will be henceforth embedded in our performance reports.  We are collaborating with SRE on production deployment of data publishing.</p><p>A number of smaller workbench, data analysis &amp; reporting improvements have been made.</p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-16-performance-and-tracing",
            "title": "Performance & tracing update",
            "summary": "High level summary",
            "date_modified": "2022-11-16T00:00:00.000Z",
            "author": {
                "name": "Serge Kosyrev",
                "url": "https://github.com/deepfire"
            },
            "tags": [
                "performance-tracing"
            ]
        },
        {
            "id": "2022-11-11-crypto",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-overview\">High level overview<a class=\"hash-link\" href=\"#high-level-overview\" title=\"Direct link to heading\">​</a></h2><p>The SECP primitives AC has been met, and the test-vectors <a href=\"https://github.com/input-output-hk/cardano-base/pull/320\" target=\"_blank\" rel=\"noopener noreferrer\">PR</a> has been merged. Another of the main short-term goals is to implement KES secure forgetting. In the past week the mempool <a href=\"https://github.com/input-output-hk/cardano-base/pull/336\" target=\"_blank\" rel=\"noopener noreferrer\">PR</a> has been merged, and we've adapted the KES secure <a href=\"https://github.com/input-output-hk/cardano-base/pull/255\" target=\"_blank\" rel=\"noopener noreferrer\">PR</a> to the new mempool design. On top of this, we are working in updating the VRF batch compat version to use the audited version of the libsodium fork (<a href=\"https://github.com/input-output-hk/cardano-base/pull/341\" target=\"_blank\" rel=\"noopener noreferrer\">PR#</a>). Finally, we've 'cleaned' our libsodium fork, and we directly fork upstream, rather than forking Algorand's fork. </p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"low-level-overview\">Low level overview<a class=\"hash-link\" href=\"#low-level-overview\" title=\"Direct link to heading\">​</a></h2><ul><li>With the AC met, there was no more blockers from crypto to release the node tag with the SECP primitives. We are now working closely with dQuadrant to to implement some E2E tests with an actual bridge implementation.  </li><li>We previously had a C implementation of a memory pool for usage in KES secure forgetting. After a discussion with Alexey, we decided to use his implementation of a mempool in Haskell. We are working in adapting KES Secure forgetting to use this Haskell mempool. </li><li>In parallel, we keep progressing on the <a href=\"https://github.com/input-output-hk/kes-agent\" target=\"_blank\" rel=\"noopener noreferrer\">KES agent</a></li><li>VRFBatchCompat was deactivated due to a lack of an external audit. This audit was finished a few weeks back, and we are updating cardano base to use this new librar. In particular, this library implements the latest changing version of the VRF draft (13, which seems to remain stable), and links to the libsodium fork which implements batch verification. </li><li>Our libsodium fork now links directly to upstream libsodium.</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-11-crypto",
            "title": "Crypto Team Update",
            "summary": "High level overview",
            "date_modified": "2022-11-11T00:00:00.000Z",
            "author": {
                "name": "Iñigo Querejeta Azurmendi",
                "url": "https://github.com/iquerejeta"
            },
            "tags": [
                "crypto"
            ]
        },
        {
            "id": "2022-11-11-hydra",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High-level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>This week, the Hydra team published together with Obsidian Systems a light paper\non our \"Hydra for Payments\" project (<a href=\"https://iohk.io/en/blog/posts/2022/11/10/hydra-for-payments-introducing-developer-tooling-to-unlock-micropayments-on-cardano/\" target=\"_blank\" rel=\"noopener noreferrer\">Link</a>). They have created a draft scope RFP for the external audit and worked with the internal audit team to clear up the specification. From the development side, they have fixed a bug with chain-following when using persistence and improved logs for better observability of <code>hydra-node</code> processes. </p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-did-the-team-achieve-this-week\">What did the team achieve this week<a class=\"hash-link\" href=\"#what-did-the-team-achieve-this-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Published Hydra for Payments light paper (<a href=\"https://iohk.io/en/blog/posts/2022/11/10/hydra-for-payments-introducing-developer-tooling-to-unlock-micropayments-on-cardano/\" target=\"_blank\" rel=\"noopener noreferrer\">Link</a>)</li><li>Have a draft RFP ready for a first review internally</li><li>Answered the internal auditor<!-- -->’<!-- -->s questions</li><li>Fixed a bug with following the chain when starting with persistence (<a href=\"https://github.com/input-output-hk/hydra-poc/issues/599\" target=\"_blank\" rel=\"noopener noreferrer\">#599</a>)</li><li>Minor improvements to logging for better observability (<a href=\"https://github.com/input-output-hk/hydra-poc/issues/598\" target=\"_blank\" rel=\"noopener noreferrer\">#598</a>, <a href=\"https://github.com/input-output-hk/hydra-poc/issues/600\" target=\"_blank\" rel=\"noopener noreferrer\">#600</a>)</li><li>Non-achievement: Needed to work around flaky TUI ci, follow-up issue if anyone wants to have a look (<a href=\"https://github.com/input-output-hk/hydra-poc/issues/590\" target=\"_blank\" rel=\"noopener noreferrer\">#590</a>)</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-are-the-goals-of-next-week\">What are the goals of next week<a class=\"hash-link\" href=\"#what-are-the-goals-of-next-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Implement event-sourced persistence <a href=\"https://github.com/input-output-hk/hydra-poc/issues/580\" target=\"_blank\" rel=\"noopener noreferrer\">#580</a></li><li>Close more gaps <a href=\"https://github.com/input-output-hk/hydra-poc/pull/452\" target=\"_blank\" rel=\"noopener noreferrer\">#452</a></li><li>Attend the Cardano Summit in Lausanne. Hydra will be topic of one talk! Save the date+time: <strong>\"Developing Hydra\" on Day 2, Nov 21st, 13:50 CET</strong></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-11-hydra",
            "title": "Hydra Team Update",
            "summary": "High-level summary",
            "date_modified": "2022-11-11T00:00:00.000Z",
            "author": {
                "name": "Sebastian Nagel",
                "url": "https://github.com/ch1bo"
            },
            "tags": [
                "hydra"
            ]
        },
        {
            "id": "2022-11-11-ledger",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>I am extremely excited to say that we now have a pull request up which introduces our new versioned\nCBOR serialization. This was an enormous effort, but it will solve a host of problems that we have\nhad since the Shelley phase. It will take time to properly review it, and we will\nneed to put in a lot of effort to integrate it with the downstream components, but this is  a huge\nmilestone. Additionally, we have a new CIP proposing a deprecation cycle for the transaction\nserialization schemes.</p><p>We also have a draft pull request that reworks how deposits are tracked. Users of the system will\nnot notice any difference, but it is a necessary change needed to prepare the way for\ndecentralizing the governance of Cardano.</p><p>Finally, we continued to address technical debt. In particular, we continued to make progress on\nbringing coherency and consistency to the code base with a common naming convention, and\nimproving some error messages.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lower-level-summary\">Lower level summary<a class=\"hash-link\" href=\"#lower-level-summary\" title=\"Direct link to heading\">​</a></h2><ul><li>We have a pull request up for our new versioned CBOR serialization.\nWhen we encounter a problem with our deserializers, it can be very difficult to implement a fix.\nIt is difficult because we can only fix such issues during a hard fork, and leading up to the\nhard fork we must maintain two serializations for the same type in order to not cause unintended\nnetwork splitting (the problematic version must be used before the hard fork,\nand the fixed version is used afterwards).\nThis can be especially tricky with the <code>FromCBOR</code> typeclass, since it is not always easy to\nsearch for where all the problematic uses are located.\nThe new versioned CBOR serialization allows us to gracefully handle this transition.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3138\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3138</a>].</li><li>We proposed a CIP for backwards compatibility of the transaction serialization schemes.\nSee [<a href=\"https://github.com/cardano-foundation/CIPs/pull/372\" target=\"_blank\" rel=\"noopener noreferrer\">pull-372</a>].</li><li>We have draft for the new deposit tracking.\nThis draft is not as memory efficient as the final version will be,\nbut it is a sufficient proof of concept that we can write property tests against, ensuring\nthat we have not changed the semantics.\nWe will optimize after we are sure of the correctness.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3127\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3127</a>].</li><li>We now provide better support for debugging failed Plutus scripts in an important helper\nfunction, named <code>evaluateTransactionExecutionUnits</code>.\nIn particular, it now returns all the information needed to rerun the script with exactly the\nsame arguments. This feature will end up appearing in the CLI and other tools from the Plutus\ntools team.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3135\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3135</a>].</li><li>We did a lot more renaming to bring coherency and consistency to the code base.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3126\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3126</a>], [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3120\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3120</a>], [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3118\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3118</a>], and [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3116\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3116</a>].</li><li>We have added a few things to the ledger repository to make it conform to the\n<a href=\"https://input-output-hk.github.io/cardano-engineering-handbook/\" target=\"_blank\" rel=\"noopener noreferrer\">Cardano Engineering Handbook</a>\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3139\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3139</a>].</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-11-ledger",
            "title": "Ledger Team Update",
            "summary": "High level summary",
            "date_modified": "2022-11-11T00:00:00.000Z",
            "author": {
                "name": "Jared Corduan",
                "url": "https://github.com/JaredCorduan"
            },
            "tags": [
                "ledger"
            ]
        },
        {
            "id": "2022-11-11-network",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High-level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>In last sprint we got a performance report of P2P performance testing cluster\n(which consists of 50 nodes).  There is a performance regression in the header\nnotification metric.  The P2P cluster is constructed with the same\ntopology as the non-p2p reference one this indicates some regression which\nneeds to be further investigated.  This poses a risk for releasing P2P.</p><p>We also continued to work on peer sharing: <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4019\" target=\"_blank\" rel=\"noopener noreferrer\">pull #4019</a>.</p><p>We continued working on dynamic block production which is required for P2P\nrelease for BP nodes: <a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3159\" target=\"_blank\" rel=\"noopener noreferrer\">pull #3159</a>.</p><p>We simplified the P2P topology format: <a href=\"https://github.com/input-output-hk/cardano-node/issues/4559\" target=\"_blank\" rel=\"noopener noreferrer\">issue #4559</a>, <a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3888\" target=\"_blank\" rel=\"noopener noreferrer\">pull #3888</a>.</p><p>We added a new trace point for asynchronous demotions of local peers with\n<code>Warning</code> severity.  This trace is <strong>important</strong> for SPOs.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"detail-description\">Detail description<a class=\"hash-link\" href=\"#detail-description\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"performance-regression\">Performance regression<a class=\"hash-link\" href=\"#performance-regression\" title=\"Direct link to heading\">​</a></h3><p>Below we include a graph which shows the performance regression of the P2P code base vs non P2P.</p><img loading=\"lazy\" src=\"/cardano-updates/assets/images/2022-11-11-noticed-headers-55bb0b4d41e8f0cff0066e1bec91bdd2.png\" class=\"img_ev3q\"><p>On the <code>x</code> axis is time in seconds which measures the delay from the start of\nthe slot to when a header was received. The <code>y</code> axis is the percentile of nodes\nthat received a header.  We are currently investigating possible causes of the\nregression. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-p2p-topology-form\">New P2P topology form<a class=\"hash-link\" href=\"#new-p2p-topology-form\" title=\"Direct link to heading\">​</a></h3><p>The new topology file format is described in this <a href=\"https://github.com/input-output-hk/cardano-node/issues/4559\" target=\"_blank\" rel=\"noopener noreferrer\">issue #4559</a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"tracing-improvements\">Tracing improvements<a class=\"hash-link\" href=\"#tracing-improvements\" title=\"Direct link to heading\">​</a></h3><ul><li>We improved a handshake error reporting, <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4136\" target=\"_blank\" rel=\"noopener noreferrer\">pull #4136</a></li><li>We added <code>TraceDemoteLocalAsynchronous</code> rendered as <code>DemoteLocalAsynchronous</code>\nin <code>json</code> format, <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4127\" target=\"_blank\" rel=\"noopener noreferrer\">pull #4127</a>.  Such demotions should be investigated by the\npool operator.  They can indicate a problem in the deployed system, but also\nthey could indicate a remote problem in arranged connections with other SPOs.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"open-source-improvements\">Open Source Improvements<a class=\"hash-link\" href=\"#open-source-improvements\" title=\"Direct link to heading\">​</a></h3><p>We improved documentation of <code>io-sim</code> and <code>typed-protocols</code> for open-source\ncontributors and/or maintenance tasks: <a href=\"https://github.com/input-output-hk/typed-protocols/pull/22\" target=\"_blank\" rel=\"noopener noreferrer\">pull #22</a>, <a href=\"https://github.com/input-output-hk/io-sim/pull/45\" target=\"_blank\" rel=\"noopener noreferrer\">pull #45</a>, <a href=\"https://github.com/input-output-hk/io-sim/pull/48\" target=\"_blank\" rel=\"noopener noreferrer\">pull #48</a>. </p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-11-network",
            "title": "Network Team Update",
            "summary": "High-level summary",
            "date_modified": "2022-11-11T00:00:00.000Z",
            "author": {
                "name": "Marcin Szamotulski",
                "url": "https://github.com/coot"
            },
            "tags": [
                "network"
            ]
        },
        {
            "id": "2022-11-04-hydra",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>This week, the hydra team first re-deployed the latest Hydra scripts to the re-spun <code>preview</code> network, see <a href=\"https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0\" target=\"_blank\" rel=\"noopener noreferrer\">0.8.0 release notes</a>. They also completed implementation of <a href=\"https://hydra.family/head-protocol/adr/18/\" target=\"_blank\" rel=\"noopener noreferrer\">ADR18</a> and worked on the validators, but development got impacted by some CI flakyness. The team also met to discuss hard forks &amp; protocol parameter updates <a href=\"https://github.com/input-output-hk/hydra-poc/issues/195#issuecomment-1300503557\" target=\"_blank\" rel=\"noopener noreferrer\">#195</a> and alignment of the specification document with auditors.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-did-the-team-achieve-this-week\">What did the team achieve this week<a class=\"hash-link\" href=\"#what-did-the-team-achieve-this-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Complete and merge ADR18 <a href=\"https://github.com/input-output-hk/hydra-poc/pull/579\" target=\"_blank\" rel=\"noopener noreferrer\">#579</a></li><li>Re-deploy hydra scripts to respun <code>preview</code> network, see <a href=\"https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0\" target=\"_blank\" rel=\"noopener noreferrer\">0.8.0 release notes</a> <a href=\"https://github.com/input-output-hk/hydra-poc/pull/595\" target=\"_blank\" rel=\"noopener noreferrer\">#595</a></li><li>Have first gap of <a href=\"https://github.com/input-output-hk/hydra-poc/pull/452\" target=\"_blank\" rel=\"noopener noreferrer\">#452</a> in review.</li><li>Non-achievement: Flaky CI for TUI was impacting us, so we investigated this a lot.</li><li>Engineering meeting to discuss hard forks and protocol parameter updates <a href=\"https://github.com/input-output-hk/hydra-poc/issues/195#issuecomment-1300503557\" target=\"_blank\" rel=\"noopener noreferrer\">#195</a></li><li>Met the internal audit team on the specification to set scope, expectations and collected requirements/open questions.</li><li>Drafted project scope for an external audit RFP.</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-are-the-goals-of-next-week\">What are the goals of next week<a class=\"hash-link\" href=\"#what-are-the-goals-of-next-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Implement event-sourced persistence <a href=\"https://github.com/input-output-hk/hydra-poc/issues/580\" target=\"_blank\" rel=\"noopener noreferrer\">#580</a></li><li>Answer the internal auditor<!-- -->’<!-- -->s questions</li><li>Have a draft RFP ready for a first review internally</li><li>Close some gaps <a href=\"https://github.com/input-output-hk/hydra-poc/pull/452\" target=\"_blank\" rel=\"noopener noreferrer\">#452</a></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-04-hydra",
            "title": "Hydra Team Update",
            "summary": "High level summary",
            "date_modified": "2022-11-04T00:00:00.000Z",
            "author": {
                "name": "Sebastian Nagel",
                "url": "https://github.com/ch1bo"
            },
            "tags": [
                "hydra"
            ]
        },
        {
            "id": "2022-11-04-mithril",
            "content_html": "<p>This sprint, the team has been working on the new continuous integration and delivery (CI/CD) pipelines and the automated deployment of environments as part of the new version of the release process. They also coordinated the migration of the pioneer SPO nodes to these new Mithril networks. They have been implementing the automatic data storage upgrade of the signer and the aggregator nodes. Finally, on the crypto side of things, we've implemented an efficiency improvement on the size of the mithril certificates.</p><h1>Low level overview</h1><ul><li>We have been moving forward on the implementation of the release process <a href=\"https://github.com/input-output-hk/mithril/issues/500\" target=\"_blank\" rel=\"noopener noreferrer\">#500</a>:<ul><li>Setup of the new hosted environments for <code>testing-preview</code>, <code>pre-release-preview</code> and <code>release-preprod</code> with their terraform and GitHub environments <a href=\"https://github.com/input-output-hk/mithril/issues/542\" target=\"_blank\" rel=\"noopener noreferrer\">#542</a></li><li>Adapted the CI workflows to work with the new release process <a href=\"https://github.com/input-output-hk/mithril/issues/543\" target=\"_blank\" rel=\"noopener noreferrer\">#543</a></li><li>Publication of an <a href=\"https://mithril.network/doc/adr/3\" target=\"_blank\" rel=\"noopener noreferrer\">ADR3</a></li><li>Publication of a <a href=\"https://mithril.network/doc/dev-blog/2022/10/28/updated-environments\" target=\"_blank\" rel=\"noopener noreferrer\">dev blog post</a> about Mithril networks evolution </li><li>Releasing our first Mithril distribution <a href=\"https://github.com/input-output-hk/mithril/releases/tag/2244.0\" target=\"_blank\" rel=\"noopener noreferrer\">2244.0</a></li></ul></li><li>Worked on the API versioning mechanism <a href=\"https://github.com/input-output-hk/mithril/issues/565\" target=\"_blank\" rel=\"noopener noreferrer\">#565</a></li><li>Worked on the implementation of the stores migration process for the signer and aggregator nodes <a href=\"https://github.com/input-output-hk/mithril/issues/562\" target=\"_blank\" rel=\"noopener noreferrer\">#562</a></li><li>Prepared a Mithril <code>devnet</code> video demo <a href=\"https://github.com/input-output-hk/mithril/issues/526\" target=\"_blank\" rel=\"noopener noreferrer\">#526</a></li><li>Implemented a batch Merkle Tree proof, which reduces the size of certificates considerably <a href=\"https://github.com/input-output-hk/mithril/pull/484\" target=\"_blank\" rel=\"noopener noreferrer\">#484</a></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-04-mithril",
            "title": "Mithril Team Update",
            "summary": "This sprint, the team has been working on the new continuous integration and delivery (CI/CD) pipelines and the automated deployment of environments as part of the new version of the release process. They also coordinated the migration of the pioneer SPO nodes to these new Mithril networks. They have been implementing the automatic data storage upgrade of the signer and the aggregator nodes. Finally, on the crypto side of things, we've implemented an efficiency improvement on the size of the mithril certificates.",
            "date_modified": "2022-11-04T00:00:00.000Z",
            "author": {
                "name": "Iñigo Querejeta Azurmendi",
                "url": "https://github.com/iquerejeta"
            },
            "tags": [
                "mithril"
            ]
        },
        {
            "id": "2022-10-31-open-source",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High Level Summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><ul><li>We've been working toward publishing <em>Cardano Backlog</em>, currently its in\nreview by the IOG communication team.</li><li>We identified a number of libraries which can be published.</li><li>We setup and enhanced <a href=\"https://input-output-hk.github.io/cardano-updates\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-updates</a>.</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"detailed-description\">Detailed description<a class=\"hash-link\" href=\"#detailed-description\" title=\"Direct link to heading\">​</a></h2><p>I am glad to announce that I was given the role of open-source advocate for\ncardano project.  In last few weeks we were making steps towards publishing our\nbacklog.  It's currently under review by the communication team, although most\nof the issues are already visible across various repositories.</p><p>The open-source initiatives have their own\n<a href=\"https://github.com/orgs/input-output-hk/projects/60\" target=\"_blank\" rel=\"noopener noreferrer\">project</a>.  It is set up\nto help us track our major open-source activities.  Right now there are two\nwork streams:</p><ul><li>the work on <a href=\"https://input-output-hk.github.io/cardano-engineering-handbook/\" target=\"_blank\" rel=\"noopener noreferrer\"><em>Cardano Engineering Handbook</em></a>;</li><li>libraries to be release on <a href=\"https://hackage.haskell.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Hackage</a> or <a href=\"https://crates.io\" target=\"_blank\" rel=\"noopener noreferrer\">crates.io</a>.</li></ul><p>We identifies a number of libraries across all the teams which contribute to\n<em>Cardano</em> which we would like publish to publish, see the following\n<a href=\"https://github.com/orgs/input-output-hk/projects/60/views/3\" target=\"_blank\" rel=\"noopener noreferrer\">link</a>.  Arnauld Bailly recently published\n<a href=\"https://hackage.haskell.org/package/quickcheck-dynamic\" target=\"_blank\" rel=\"noopener noreferrer\"><code>quickcheck-dynamic</code></a>\nlibrary on Hackage.  The networking team is slowly progressing towards\npublishing <a href=\"https://github.com/input-output-hk/io-sim\" target=\"_blank\" rel=\"noopener noreferrer\">io-sim</a> and related packages, checkout the progress\n<a href=\"https://github.com/orgs/input-output-hk/projects/19/views/24\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p><p>Thanks to Arnaud Bailly our <a href=\"https://input-output-hk.github.io/cardano-updates\" target=\"_blank\" rel=\"noopener noreferrer\">Cardano Updates</a> website has\na new look &amp; feel!  It's using <a href=\"https://docusaurus.io\" target=\"_blank\" rel=\"noopener noreferrer\">docusaurus.io</a>.</p><p>Christian Taylor carried recently a detailed analysis of our open-source\nrepositories.  He collected many interesting metrics, which allows us to see\nwhere we need to improve as an open-source project to make the Cardano project\nand many smaller related libraries which we maintain be more open and available\nfor open-source contributors.</p><p>The graph below shows which documents the 55 most important Cardano\nrepositories are missing the most:\n<img loading=\"lazy\" alt=\"Documentation Adoption\" src=\"/cardano-updates/assets/images/doc-adoption-cd944582f02809777c58be53e13453c5.png\" width=\"1493\" height=\"716\" class=\"img_ev3q\">\nYou can expect we will improve in these metrics in the coming weeks.</p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-31-open-source",
            "title": "Open-Source Team",
            "summary": "High Level Summary",
            "date_modified": "2022-11-04T00:00:00.000Z",
            "author": {
                "name": "Marcin Szamotulski",
                "url": "https://github.com/coot"
            },
            "tags": [
                "open-source"
            ]
        },
        {
            "id": "2022-11-03-embedding-quality",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>We made good progress on most of the Action Items we agreed on Lisbon, like:</p><ul><li>Cardano System Tests was fully open to public (tools, tests, results)\nSee <a href=\"https://input-output-hk.github.io/cardano-node-tests\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-node-tests webpage</a>.</li><li>We defined an <a href=\"https://github.com/input-output-hk/cardano-node/blob/master/.github/ISSUE_TEMPLATE/user-facing-feature.md\" target=\"_blank\" rel=\"noopener noreferrer\">user-facing-functionality template</a> that is used with the cardano-cli team <ul><li>this includes acceptance criteria &amp; user stories, and definition of done</li></ul></li><li>We are in the process of running the cardano-node-tests at commit &amp; PR level in cardano-node (we are affected by the Cicero migration right now but we did most of the work already)</li><li>We started to apply a <em>labelling convention</em> on <a href=\"https://github.com/input-output-hk/cardano-node/issues\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-node issues</a> that will be used to generate some visual dashboards with some metrics <!-- -->[TBD]</li><li>Ziyand Liu started an <em>End-to-End Development and Testing Process for Plutus Features</em></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-03-embedding-quality",
            "title": "Embedding Quality Workstream",
            "summary": "High level summary",
            "date_modified": "2022-11-03T00:00:00.000Z",
            "author": {
                "name": "Dorin Solomon",
                "url": "https://github.com/dorin100"
            },
            "tags": [
                "embedding-quality"
            ]
        },
        {
            "id": "2022-10-02-consensus",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High-level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>During the past two weeks, the consensus team continued its work on testing the\nUTxO HD prototype. We completed the era-transition and backing store tests, and\nthe mempool tests are advancing at a steady pace. Regarding our work in the\nGenesis design, we continued our collaboration with the research and networking\nteams, and we continue investigating strategies for making the chain-sync\njumping prototype faster.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-status-report\">High-level status report<a class=\"hash-link\" href=\"#high-level-status-report\" title=\"Direct link to heading\">​</a></h2><ul><li>Finish the UTxO HD prototype: on track.<ul><li>We worked on state-machine tests for the mempool, and spotted potential bugs\nin the implementation. Investigation is ongoing.</li><li>We have a set of property tests for the backing store. We still need to\nincorporate the improvements to the LMDB cursor API that these tests\nmade possible.</li><li>We merged the era-transition tests PR.</li></ul></li><li>Genesis: on track.<ul><li>Design work around Genesis continues in collaboration with researchers and\nthe networking team.</li><li>We continued trying to improve the performance of the chain-sync jumping\nprototype. We gained additional insight on which parameters to tweak next.\nIn spite of the baseline still being faster, the current prototype already\nachieves a significant speedup when compared to the naive approach of simply\nrunning full chain-sync with all peers.</li></ul></li><li>Tech debt: on track.<ul><li>We clarified a common source of confusion around VRF tie-breaking and\ncross-era chain selection.</li></ul></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"workstreams\">Workstreams<a class=\"hash-link\" href=\"#workstreams\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"finish-the-utxo-hd-prototype\">Finish the UTxO HD prototype<a class=\"hash-link\" href=\"#finish-the-utxo-hd-prototype\" title=\"Direct link to heading\">​</a></h3><p>We continued working on property-tests for the UTxO HD prototype. In particular\nwe merged the <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4073\" target=\"_blank\" rel=\"noopener noreferrer\">era-transition tests\nPR</a>.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"backing-store-property-tests\">Backing store property tests<a class=\"hash-link\" href=\"#backing-store-property-tests\" title=\"Direct link to heading\">​</a></h4><p>The <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4081\" target=\"_blank\" rel=\"noopener noreferrer\">backing store property tests\nPR</a> has been\nreviewed. The next steps are:</p><ul><li>Improve error handling and command generation.</li><li>Add coverage testing to check that we are not failing to cover interesting\ntest cases.</li></ul><p>The <a href=\"https://github.com/input-output-hk/lmdb-simple/pull/1\" target=\"_blank\" rel=\"noopener noreferrer\">monadic cursor API</a>\nwent through its first review round. The API is in a relatively stable state.\nThis PR also unifies the <code>cborg</code> and <code>serialise</code>-based interfaces to LMDB\noperations. The next steps are:</p><ul><li>Write\n<a href=\"https://hackage.haskell.org/package/quickcheck-dynamic\" target=\"_blank\" rel=\"noopener noreferrer\"><code>quickcheck-dynamic</code></a>\nstate-machine tests for this API.</li><li>Adapt the changes in the serialisation interface in the backing store property\ntests. This will involve adding boilerplate code in consensus to make up for\nthe removal of the <code>cborg</code>-based interface.</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lsm-tree-implementation\">LSM tree implementation<a class=\"hash-link\" href=\"#lsm-tree-implementation\" title=\"Direct link to heading\">​</a></h2><p>We worked on the <a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4121\" target=\"_blank\" rel=\"noopener noreferrer\">LSM tree\nprototype</a>. In\nparticular, we focused on tuning the LSM tree design to the different workloads\nthat consensus has (eg syncing, normal node operation, etc).</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"benchmarking-the-csj-prototype\">Benchmarking the CSJ prototype<a class=\"hash-link\" href=\"#benchmarking-the-csj-prototype\" title=\"Direct link to heading\">​</a></h3><p>Work on improving the chain-sync jumping performance is ongoing. In particular\nwe compared the performance of different jump intervals, which, somewhat\nsurprisingly, do not make a significant difference. In particular, we are seeing\nperiodic \"plateaus\" where the chain-sync tip does not progress, but they are\nmuch longer for the prototype. Our hypothesis is that this seem to be due to a\ncombination of the garbage collector (GC) pauses, and the actual time it takes\nthe non-dynamo chain-sync peers to jump to the tip of the slot of the dynamo\nfragment.</p><p>In the coming weeks we will try to shorten these plateaus via a combination of\ntweaking GC options and less synchronisation in the CSJ governor.</p><p>The following plot shows the performance of the chain-sync jumping prototype\nusing different jumping intervals. It compares the syncing progress by plotting\nthe slots of adopted blocks against time. The baseline is still faster, however\nit is worth noting that the current prototype already achieves a significant\nspeedup when compared to the naive approach of simply running full chain-sync\nwith all peers.</p><p><img loading=\"lazy\" src=\"/cardano-updates/assets/images/2022-11-02-csj-vs-baseline-9fd0e0e080975cc6cfbe035731b4f38d.svg\" width=\"998\" height=\"445\" class=\"img_ev3q\"></p><p>The second plot shows the syncing progress sliced to a chosen ~5min interval,\nand includes, in addition to the slots of adopted blocks, the slots of the tip\nof the ChainSync fragment. This allows us to see how far ahead of the selected\ntip the CS dynamo is, i.e. how much room we have for BlockFetch not to get\nstalled. It shows periodic behaviour (due to the forecasting limit), and shows\nthat the CS fragment tip is not progressing for significant periods\n(\"plateaus\").</p><p><img loading=\"lazy\" src=\"/cardano-updates/assets/images/2022-11-02-csj-vs-baseline-sliced-77ff018af70191b4122b1e7cf56c79b8.svg\" width=\"998\" height=\"445\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"technical-debt\">Technical debt<a class=\"hash-link\" href=\"#technical-debt\" title=\"Direct link to heading\">​</a></h2><p>We <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4098\" target=\"_blank\" rel=\"noopener noreferrer\">clarified</a> a\ncommon source of confusion around VRF tie-breaking and cross-era chain\nselection. This PR involved correcting potentially misleading names of\nVRF-related functions, and providing context for a particular VRF value is\nused for tie-breaking.</p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-02-consensus",
            "title": "Consensus Team Update",
            "summary": "High-level summary",
            "date_modified": "2022-11-02T00:00:00.000Z",
            "author": {
                "name": "Damian Nadales",
                "url": "https://github.com/dnadales"
            },
            "tags": [
                "consensus"
            ]
        },
        {
            "id": "2022-11-02-ledger",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>We have made the decision to use the\n<a href=\"https://github.com/input-output-hk/formal-ledger-specifications\" target=\"_blank\" rel=\"noopener noreferrer\">formal ledger repository</a>\nin place of a LaTeX spec for the next ledger era, and have added a lot of basic infrastructure\nto the model. In particular, we now have a lot of support for axiomatic set theory.\nWhile the next ledger era is still in the design phase, most of the team remains working\non technical debt.\nIn particular, we have moved a lot more code out of the Shelley specific modules and into\na ledger core module, we have finished up our benchmarking around the problematic <code>TICKF</code>\nledger transition (while improving the performance), made conveniences to the development\nenvironment, cleaned up all the recent changes to the cost model, added a lot of documentation,\nfixed some flaky tests, and deleted some dead code.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lower-level-summary\">Lower level summary<a class=\"hash-link\" href=\"#lower-level-summary\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"axiomatic-set-theory\">Axiomatic Set Theory<a class=\"hash-link\" href=\"#axiomatic-set-theory\" title=\"Direct link to heading\">​</a></h3><p>The formal ledger model now has support for much of the set theory that we make use of in\nthe formal ledger specifications. See [<a href=\"https://github.com/input-output-hk/formal-ledger-specifications/pull/20\" target=\"_blank\" rel=\"noopener noreferrer\">pull-20</a>].</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"completed-technical-debt\">Completed Technical Debt<a class=\"hash-link\" href=\"#completed-technical-debt\" title=\"Direct link to heading\">​</a></h3><ul><li>We have addressed issues with two of our most problematic and flaky tests.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3039\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3039</a>] and [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3093\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3093</a>].</li><li>We have added more documentation and tests to the Twiddler module. This is a module which\nmakes our CBOR serialization round-trip tests much more robust, and will also hopefully\nhelp enforce the mandate for downstream libraries to never re-serialize data that needs\nto be hashed. See [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3073\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3073</a>] and [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3095\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3095</a>]\n(we cannot merge 3095 just yet, due to a preference for merging other features).</li><li>We have finished our long analysis of the problematic <code>TICKF</code> transition.\nWe now have a lot of benchmarks surrounding this code, and have added performance improvements.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3068\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3068</a>] and [<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3035\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3035</a>].</li><li>We have restored support for\n<a href=\"https://hackage.haskell.org/package/ghcid\" target=\"_blank\" rel=\"noopener noreferrer\">ghcid</a>\nin our repository. This is a tool for developing with Haskell that many of us find greatly\nimproves our productivity by providing us with constant feedback from the type checker.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3112\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3112</a>].</li><li>After much activity on the cost model, we have done some final clean up of the code.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3075\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3075</a>] and [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3101\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3101</a>].</li><li>We moved a lot of the existing user facing documentation regarding native tokens into the\nledger repository, and cleaned it up\n(most of the heavy lifting was done by our amazing technical writers).\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3091\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3091</a>].</li><li>We removed dead code. See [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3089\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3089</a>].</li><li>We moved a lot of code from the Shelley specific libraries to the ledger core library.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3109\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3109</a>] and [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3110\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3110</a>].</li><li>We've removed more of the awkward legacy template Haskell names.\nSee [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3108\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3108</a>].</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-02-ledger",
            "title": "Ledger Team Update",
            "summary": "High level summary",
            "date_modified": "2022-11-02T00:00:00.000Z",
            "author": {
                "name": "Jared Corduan",
                "url": "https://github.com/JaredCorduan"
            },
            "tags": [
                "ledger"
            ]
        },
        {
            "id": "2022-11-02-release",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"node-reelease-update\">Node Reelease Update<a class=\"hash-link\" href=\"#node-reelease-update\" title=\"Direct link to heading\">​</a></h2><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"2022-10-19---2022-11-02\">2022-10-19 - 2022-11-02<a class=\"hash-link\" href=\"#2022-10-19---2022-11-02\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"executive-summary\">Executive Summary<a class=\"hash-link\" href=\"#executive-summary\" title=\"Direct link to heading\">​</a></h3><p>The team is formalizing the new release process and team structure. Both preview/preprod environments have been reset,\na temporary pv8 environment has been created for testing SECP before preview is updated to protocol version 8.</p><p>1.35.4 release candidates have been created and are being tested internally and externally.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"completed\">Completed<a class=\"hash-link\" href=\"#completed\" title=\"Direct link to heading\">​</a></h3><ul><li><a href=\"https://github.com/input-output-hk/cardano-node/commits/1.35.4-rc1\" target=\"_blank\" rel=\"noopener noreferrer\">1.35.4-rc1 tag</a></li><li><a href=\"https://github.com/input-output-hk/cardano-node/commits/1.35.4-rc1\" target=\"_blank\" rel=\"noopener noreferrer\">1.35.4-rc2 tag (config changes only for preview)</a></li><li>[CHaP Migration]<!-- --> (<a href=\"https://github.com/input-output-hk/cardano-node/pull/4540\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/input-output-hk/cardano-node/pull/4540</a>)</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"in-progress\">In Progress<a class=\"hash-link\" href=\"#in-progress\" title=\"Direct link to heading\">​</a></h3><ul><li><p><a href=\"https://github.com/input-output-hk/cardano-node/commits/release/1.35\" target=\"_blank\" rel=\"noopener noreferrer\">Release 1.35.4</a></p><ul><li><a href=\"https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.4_rc1/src_docs/source/test_results/node/tag_1_35_4_rc1.rst\" target=\"_blank\" rel=\"noopener noreferrer\">Test Status</a></li></ul></li><li><p><a href=\"https://input-output-hk.github.io/cardano-updates/2022-08-12-sre\" target=\"_blank\" rel=\"noopener noreferrer\">Cicero CI Migration</a></p></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-02-release",
            "title": "Node Release Team Update",
            "summary": "Node Reelease Update",
            "date_modified": "2022-11-02T00:00:00.000Z",
            "author": {
                "name": "Samuel Leathers",
                "url": "https://github.com/disassembler"
            },
            "tags": [
                "release"
            ]
        },
        {
            "id": "2022-11-02-system-test",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>We have been focused on:</p><ul><li>Fully opening our test results (on top of the existing tests &amp; tools):<br>See <a href=\"https://input-output-hk.github.io/cardano-node-tests/\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-node-tests webpage</a>.</li><li>Started to test and automate the new functionalities added in the <code>1.35.4-rc1</code> node tag<br>See <a href=\"https://github.com/input-output-hk/cardano-node-tests/blob/tag_test_1.35.4_rc1/src_docs/source/test_results/node/tag_1_35_4_rc1.rst\" target=\"_blank\" rel=\"noopener noreferrer\">test results tracking page</a>.</li><li>Made some improvements to the automated db-sync sync tests<br>See <a href=\"https://github.com/input-output-hk/cardano-node-tests/tree/db_sync_tests/db_sync_tests\" target=\"_blank\" rel=\"noopener noreferrer\">db-sync tests</a>.</li><li>Multiple cleanups and updates to the cardano-node-tests framework</li><li>Updated the nightly pipelines for the cardano-node-tests after the Babbage HF</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-02-system-test",
            "title": "System Test Team Update",
            "summary": "High level summary",
            "date_modified": "2022-11-02T00:00:00.000Z",
            "author": {
                "name": "Dorin Solomon",
                "url": "https://github.com/dorin100"
            },
            "tags": [
                "system-test"
            ]
        },
        {
            "id": "2022-11-01-db-sync",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>The DBSync team is preparing a release which introduces schema simplifications, removes indexes,\nunique and foreign keys. It also provides a way to fix older values and migrates without the need to\nresync from genesis.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lower-level-summary\">Lower level summary<a class=\"hash-link\" href=\"#lower-level-summary\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"schema-simplifications\">Schema simplifications<a class=\"hash-link\" href=\"#schema-simplifications\" title=\"Direct link to heading\">​</a></h3><p>Indexes, Unique and Foreign keys are removed in order to speedup syncing\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1295\" target=\"_blank\" rel=\"noopener noreferrer\">#1295</a>\nThe same pr also introduces a different way to rollback, which doesn't rely on foreign keys and\nindexes.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"performance\">Performance<a class=\"hash-link\" href=\"#performance\" title=\"Direct link to heading\">​</a></h3><p>The DBSync team ran a big number of benchmarks and investigated ways to speedup syncing. A\nconservative number of these will be included in the next release and the rest can be found in\n<a href=\"https://github.com/orgs/input-output-hk/projects/52/views/7\" target=\"_blank\" rel=\"noopener noreferrer\">performance view</a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"migrations-and-resyncing\">Migrations and resyncing<a class=\"hash-link\" href=\"#migrations-and-resyncing\" title=\"Direct link to heading\">​</a></h3><p>The next release will be 13.1.0, it will enable a migration without the need to resync. It will also\nintroduce a procedure that fixes bytes values of Datum and RedeemerData in existing databases\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1294\" target=\"_blank\" rel=\"noopener noreferrer\">#1294</a></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"release\">Release<a class=\"hash-link\" href=\"#release\" title=\"Direct link to heading\">​</a></h3><p>The release has been mostly cherry-picked from master\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1294\" target=\"_blank\" rel=\"noopener noreferrer\">#1294</a> and its scope can be seen\n<a href=\"https://github.com/orgs/input-output-hk/projects/52/views/6\" target=\"_blank\" rel=\"noopener noreferrer\">release view</a></p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-11-01-db-sync",
            "title": "DB Sync Team Update",
            "summary": "High level summary",
            "date_modified": "2022-11-01T00:00:00.000Z",
            "author": {
                "name": "Kostas Dermentzis",
                "url": "https://github.com/kderme"
            },
            "tags": [
                "db-sync"
            ]
        },
        {
            "id": "2022-10-28-hydra",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>This week, the hydra team completed several user experience improvements to the\n<code>hydra-tui</code> and <code>hydra-node</code>, and delivered a first version of persisted head\nstates by publishing release version\n<a href=\"https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0\" target=\"_blank\" rel=\"noopener noreferrer\"><code>0.8.0</code></a>.\nBesides this, they met with researchers on topic of the HeadV1 specification and\nkicked-off work on the RFP for an external audit of the Hydra Head protocol and implementation.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-did-the-team-achieve-this-week\">What did the team achieve this week<a class=\"hash-link\" href=\"#what-did-the-team-achieve-this-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Completed the UX improvements on the <code>hydra-tui</code></li><li>Released version <a href=\"https://github.com/input-output-hk/hydra-poc/releases/tag/0.8.0\" target=\"_blank\" rel=\"noopener noreferrer\"><code>0.8.0</code></a>, which delivers a first version of persisted head states</li><li>Met with researchers on the HeadV1 specification</li><li>Started work on the RFP for our external audit</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-are-the-goals-of-next-week\">What are the goals of next week<a class=\"hash-link\" href=\"#what-are-the-goals-of-next-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Complete ADR18 implementation and get it merged</li><li>Start work on event-sourced persistence <a href=\"https://github.com/input-output-hk/hydra-poc/issues/580\" target=\"_blank\" rel=\"noopener noreferrer\">#580</a></li><li>Have a first plutus script gap closed <a href=\"https://github.com/input-output-hk/hydra-poc/issues/452\" target=\"_blank\" rel=\"noopener noreferrer\">#452</a></li><li>Revamp CI to use flakes and build macos artifacts (stretch goal: migrate to cicero for nix builds)</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-28-hydra",
            "title": "Hydra Team Update",
            "summary": "High level summary",
            "date_modified": "2022-10-28T00:00:00.000Z",
            "author": {
                "name": "Sebastian Nagel",
                "url": "https://github.com/ch1bo"
            },
            "tags": [
                "hydra"
            ]
        },
        {
            "id": "2022-10-28-network",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High-level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>The team has focused on debuging &amp; fixing bugs for the <strong>P2P single relay release</strong>, which included</p><ul><li>diagnosing, fixing and writing tests for a bug in <code>peer-state-actions</code> which\nfortunately hasn't been released;</li><li>diagnosing &amp; preventing misconfiguration of DNS</li></ul><p>We also focused on developing <strong>peer sharing</strong>.  We also held a session with\nthe scientists on eclipse evasion.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"detailed-description\">Detailed description<a class=\"hash-link\" href=\"#detailed-description\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"p2p-network-stack\">P2P Network Stack<a class=\"hash-link\" href=\"#p2p-network-stack\" title=\"Direct link to heading\">​</a></h3><p>During the past two weeks the team focused on p2p single relay release and peer\nsharing.  We found and fixed an important bug recently introduced in one of the\ncomponents of p2p networking stack (fortunately never released).  Together with\na fix, we designed a unit test diffusion simulation as well as quickcheck\nproperty test (both could reproduce it). We also changed the code in a way that\nif such a bug is reintroduced in the future, it will be obvious to diagnose.\nFor more see:</p><ul><li><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4067\" target=\"_blank\" rel=\"noopener noreferrer\">ouroboros-network#4067</a></li><li><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4086\" target=\"_blank\" rel=\"noopener noreferrer\">ouroboros-network#4086</a></li></ul><p>Initial benchmarking run of the P2P code was executed.  The results where\nunlike what we see on the mainnet.  We found a possible misconfiguration of the\ncluster (caused by 0 TTL on domain names), which could be the direct cause of\nit.  We wrote a PR which rules out such misconfiguration.  We are awaiting on\nthe next benchmarking results.  See more at:</p><p><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4106\" target=\"_blank\" rel=\"noopener noreferrer\">ouroboros-network#4106</a></p><p>We also started working on P2P single relay release.  The PR\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4120\" target=\"_blank\" rel=\"noopener noreferrer\">ouroboros-network#4120</a>\nincludes <em>108</em> patches cherry-picked from the <code>master</code> branch.  We started\nworking toward integration these changes against the release branch of\n<code>cardano-node</code>.  Early next week we ought to be able to have an early version\nof <code>cardano-node</code> with <em>non experimental P2P support</em>!</p><p>For more detailed release plan please see <a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3888\" target=\"_blank\" rel=\"noopener noreferrer\">P2P - Single\nRelay</a>\nissue.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"consensus\">Consensus<a class=\"hash-link\" href=\"#consensus\" title=\"Direct link to heading\">​</a></h3><p>We identified and fixed missing error reporting in consensus\ninitialisation phase.  See more at\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4015\" target=\"_blank\" rel=\"noopener noreferrer\">ouroboros-network#4015</a></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cardano-node\">Cardano Node<a class=\"hash-link\" href=\"#cardano-node\" title=\"Direct link to heading\">​</a></h3><p>We also made changes in <code>cardano-node</code> in order to give better experience for\nnode operators.  This includes updating severities of some of the traces as\nwell as implementing new format of the p2p topology file.  For more see:</p><ul><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4563\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-node#4563</a>.</li><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4561\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-node#4561</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"peer-sharing\">Peer Sharing<a class=\"hash-link\" href=\"#peer-sharing\" title=\"Direct link to heading\">​</a></h3><p>We continued working on implementation of peer sharing.  We have an early\nimplementation which will be reviewed and analysed in next weeks.  We started\nworking on <code>cardano-node</code> integration.  We need\n<a href=\"https://github.com/input-output-hk/cardano-node/pull/4392\" target=\"_blank\" rel=\"noopener noreferrer\">PR #4392</a> to be merged\nbefore such integration will be able to land in <code>cardano-node</code>, although this\nis <em>not blocking</em> us currently.  See more at:</p><ul><li><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4019\" target=\"_blank\" rel=\"noopener noreferrer\">ouroboros-network#4019</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"eclipse-evasion\">Eclipse Evasion<a class=\"hash-link\" href=\"#eclipse-evasion\" title=\"Direct link to heading\">​</a></h3><p>We held a session which included Alexander Russel, Sandro Coretti-Drayton and\nNick Frisby from the consensus team.  We discussed high lever design of the\neclipse evasion scheme, which is important for the design and implementation of\n<code>ouroboros-genesis</code>.  We got a positive feedback from the researchers.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"io-sim\">IO-Sim<a class=\"hash-link\" href=\"#io-sim\" title=\"Direct link to heading\">​</a></h3><p>In this period we made little progress towards releasing <code>IO-Sim</code> on Hackage.\nA single <a href=\"https://github.com/input-output-hk/io-sim/pull/32\" target=\"_blank\" rel=\"noopener noreferrer\">PR</a> which added\na few missing instances of the <code>STM</code> monad.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"open-source\">Open Source<a class=\"hash-link\" href=\"#open-source\" title=\"Direct link to heading\">​</a></h3><p>We made sure the CI runs for PRs which comes from forks (which is important to\naccept contributions from 3rd parties).</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mithril-cardano-integration\">Mithril Cardano Integration<a class=\"hash-link\" href=\"#mithril-cardano-integration\" title=\"Direct link to heading\">​</a></h3><p>We held initial discussions with Arnaud Bailly about possible path to integrate\nmithril to <code>cardano-node</code> and take advantage of the <code>ouroboros-network</code>\ndiffusion layer.</p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-28-network",
            "title": "Network Team Update",
            "summary": "High-level summary",
            "date_modified": "2022-10-28T00:00:00.000Z",
            "author": {
                "name": "Marcin Szamotulski",
                "url": "https://github.com/coot"
            },
            "tags": [
                "network"
            ]
        },
        {
            "id": "2022-10-28-performance-and-tracing",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>On the performance side, the team ran benchmarks for the the P2P feature and the 1.35.4 release.  We finished a prototype for performance data publishing.  We almost finished the local deployment backend for the workbench using the new SRE deployment infra.  We worked on fixing and improving our data analysis pipeline.</p><p>On the tracing side, the team worked on isolating a critical issue causing message loss in the remote tracing backend.  The issue was resolved and we now have proper end-to-end coverage for the scenario.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"executive-summary\">Executive summary<a class=\"hash-link\" href=\"#executive-summary\" title=\"Direct link to heading\">​</a></h2><ul><li>The new tracing system public release is getting closer, as we're resolving remaining rough edges that are discovered in full-scale deployments.  The local benchmarks we ran were already showing improvement relative to legacy tracing, so we expect similar results at full scale.</li><li>The first (local deployment) iteration of benchmarking adopting the new SRE deployment infra is nearly done.  We thank Michael Fellinger and Robin Stumm for their assistance.  Two further phases remain:  CI integration and cloud deployment.</li><li>The benchmarking data publishing prototype is ready.  This serves as a springboard for both opening our performance assessment workflow (to support the wider Cardano developer community), and for data provision to the business community.  Our next steps are to secure a permanent deployment for this mechanism and to integrate it into the benchmarking infrastructure.  This requires collaboration with SRE.</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-28-performance-and-tracing",
            "title": "Performance & Tracing Team Update",
            "summary": "High level summary",
            "date_modified": "2022-10-28T00:00:00.000Z",
            "author": {
                "name": "Serge Kosyrev",
                "url": "https://github.com/deepfire"
            },
            "tags": [
                "performance-tracing"
            ]
        },
        {
            "id": "2022-08-12-sre",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>The SRE team is heavily working on the Equinix Metal migration, replacing Hydra\nwith Cicero, and a new version of Spongix.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lower-level-summary\">Lower level summary<a class=\"hash-link\" href=\"#lower-level-summary\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"openziti\">OpenZiti<a class=\"hash-link\" href=\"#openziti\" title=\"Direct link to heading\">​</a></h3><ul><li>Work is ongoing on our OpenZiti integration into Bitte in [<a href=\"https://github.com/input-output-hk/bitte/compare/zt\" target=\"_blank\" rel=\"noopener noreferrer\">bitte-zt</a>].</li><li>CI-World deployment of Darwin CI Ziti service in [<a href=\"https://github.com/input-output-hk/ci-world/commit/d40f4d19187a2128b6f0d63bde7e3f9a33071994\" target=\"_blank\" rel=\"noopener noreferrer\">ci-world-commit-d40f4d</a>].</li><li>Multiple issues filed, and a lot of discussion with the OpenZiti developers,\nwe're making pretty rapid progress thanks to them.</li><li>Work on getting Equinix baremetal machines integrated into AWS World Bitte\nclusters utilizing a Ziti ZTNA network overlay to bridge the networking of\nthe two environments and get IAM extension to Equinix machine for Nomad\nclient onboarding.</li><li>A Nix Flake for most of our OpenZiti dependencies including the Console,\nController, Edge Tunnel, and Router is now at [<a href=\"https://github.com/johnalotoski/openziti-bins\" target=\"_blank\" rel=\"noopener noreferrer\">openziti-bins</a>].</li><li>The Flake also includes a WiP NixOS modules for these components.</li><li>Tested Ziti Desktop Edge official app for Darwin x86_64 w/ GUI -- works with\nno issues seen so far</li><li>Moved the console to traefik routing service (<code>zac.$DOMAIN</code>) and\ncontroller/edge router stay at <code>zt.$DOMAIN</code>, but have registered consul\nservices</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cicero--tullia-integrations\">Cicero &amp; Tullia Integrations<a class=\"hash-link\" href=\"#cicero--tullia-integrations\" title=\"Direct link to heading\">​</a></h3><ul><li>Added webhook for [<a href=\"https://github.com/input-output-hk/haskell.nix\" target=\"_blank\" rel=\"noopener noreferrer\">haskell.nix</a>].</li><li>Finished Cicero CI action for [<a href=\"https://github.com/input-output-hk/cardano-addresses/pull/205\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-addresses-pull-205</a>].</li><li>Fixed cardano-prelude cicero action in [<a href=\"https://github.com/input-output-hk/cardano-prelude/pull/176#issuecomment-1280947946\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-prelude-pull-176</a>].</li><li>Fixed the <code>abcird-stdlib/publish</code> action [<a href=\"https://github.com/input-output-hk/abcirdc/pull/104\" target=\"_blank\" rel=\"noopener noreferrer\">abcirdc-pull-104</a>]</li><li>fix error on vm-bigdisk flake configs [<a href=\"https://github.com/input-output-hk/cicero/pull/66\" target=\"_blank\" rel=\"noopener noreferrer\">cicero-pull-66</a>].</li><li>Helped with Cicero actions and answered questions for [<a href=\"https://github.com/input-output-hk/plutus\" target=\"_blank\" rel=\"noopener noreferrer\">plutus</a>]\n[<a href=\"https://github.com/input-output-hk/cardano-prelude\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-prelude</a>], and [<a href=\"https://github.com/input-output-hk/abcirdc\" target=\"_blank\" rel=\"noopener noreferrer\">abcirdc</a>].</li><li>Merged [<a href=\"https://github.com/input-output-hk/cardano-base/pull/323\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-base-pull-323</a>] for Tullia on cardano-base.</li><li>Merged Cicero action in [<a href=\"https://github.com/input-output-hk/cardano-ogmios/pull/5\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-ogmios-pull-5</a>].</li><li>Opened [<a href=\"https://github.com/input-output-hk/cardano-explorer-app/pull/427\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-explorer-app-pull-427</a>] to add Tullia and Cicero.</li><li>Opened [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3097\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-ledger-pull-3097</a>] to add Cicero CI action.</li><li>Opened [<a href=\"https://github.com/input-output-hk/cardano-node/pull/4489\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-node-pull-4489</a>] to add Tullia and Cicero, including\nOS-agnostic jobs.</li><li>Opened [<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4108\" target=\"_blank\" rel=\"noopener noreferrer\">ouroboros-network-pull-4108</a>] to add Cicero action.</li><li>Reviewed [<a href=\"https://github.com/input-output-hk/plutus/pull/4918\" target=\"_blank\" rel=\"noopener noreferrer\">plutus-pull-4918</a>] and helped test it.</li><li>Update Tullia in [<a href=\"https://github.com/input-output-hk/abcirdc/pull/97\" target=\"_blank\" rel=\"noopener noreferrer\">abcirdc-pull-97</a>] to build if a tag is given.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cicero--tullia-features\">Cicero &amp; Tullia Features<a class=\"hash-link\" href=\"#cicero--tullia-features\" title=\"Direct link to heading\">​</a></h3><ul><li>Improvements to Tullia task aggregation to make [<a href=\"https://github.com/input-output-hk/cardano-addresses\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-addresses</a>] build\ncorrectly.</li><li>Better tullia CUE lib default for tags [<a href=\"https://github.com/input-output-hk/tullia/commit/4df3c5d956f1b062b950643da12768ae71acf245\" target=\"_blank\" rel=\"noopener noreferrer\">tullia-commit-4df3c5d</a>].</li><li>Put <code>cache.nixos.org</code> back in <code>cache.iog.io</code>'s upstreams. This is now\nconsidered a public cache again, and without it some Cicero evaluations had\nto build huge packages.</li><li>Started working on a flake-parts module for Tullia.</li><li>Started working on cutting down Tullia task build time by putting facts in\nJSON files.</li><li>Fixed running into kernel arg limit by reading tullia's DAG from a file</li><li>Merged [<a href=\"https://github.com/input-output-hk/tullia/pull/9\" target=\"_blank\" rel=\"noopener noreferrer\">tullia-pull-9</a>] that fixes several issues related to error reporting.\nand escaping.</li><li>Added Mac builders in Cicero on CI-World.</li><li>Started work on Tullia invocation caching.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"spongix\">Spongix<a class=\"hash-link\" href=\"#spongix\" title=\"Direct link to heading\">​</a></h3><ul><li>A lot of progress on an SQlite backed version of Spongix, it already supports\nthe full HTTP binary cache protocol but still lacks comprehensive testing and\nsome tuning, as well as recursive lookups.</li><li>First steps in the implementation of the <code>nix-daemon</code> <code>ssh-ng</code> protocol so\nSpongix can be used via SSH and we can get rid of basic auth.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"bugs\">Bugs<a class=\"hash-link\" href=\"#bugs\" title=\"Direct link to heading\">​</a></h3><ul><li>Discovered Cicero bug where Nomad reschedules cause the Github commit status\nto get stuck in <code>pending</code></li><li>Discovered Cicero race condition bug around concurrent transactions for\ncodependent actions.</li><li>Fixed tullia task order bug in [<a href=\"https://github.com/input-output-hk/cardano-addresses\" target=\"_blank\" rel=\"noopener noreferrer\">cardano-addresses</a>]</li><li>Diagnose Cicero action not triggered in [<a href=\"https://github.com/input-output-hk/abcirdc\" target=\"_blank\" rel=\"noopener noreferrer\">abcirdc</a>]</li><li>Fixed meta/description of the Tullia package in [<a href=\"https://github.com/input-output-hk/tullia/pull/7\" target=\"_blank\" rel=\"noopener noreferrer\">tullia-pull-7</a>]</li><li>Add Vault token loop alerts in [<a href=\"https://github.com/input-output-hk/bitte-cells/pull/40\" target=\"_blank\" rel=\"noopener noreferrer\">bitte-cells-pull-40</a>]</li><li>Ongoing investigation on recurring Patroni and nomad-follower issues related\nto token rotation.</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-08-12-sre",
            "title": "SRE Team Update",
            "summary": "High level summary",
            "date_modified": "2022-10-28T00:00:00.000Z",
            "author": {
                "name": "Michael Fellinger",
                "url": "https://github.com/manveru"
            },
            "tags": [
                "sre"
            ]
        },
        {
            "id": "2022-10-27-crypto",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-overview\">High level overview<a class=\"hash-link\" href=\"#high-level-overview\" title=\"Direct link to heading\">​</a></h2><p>The crypto team is primarily focusing in enabling SECP primitives, and preparing the KES agent. We are close to\nmeeting the <a href=\"https://github.com/input-output-hk/cardano-base/issues/315\" target=\"_blank\" rel=\"noopener noreferrer\">acceptance criteria</a> in cardano-base,\nwhich lacks some editorial comments on the style of dQuandrant's PR, the inclusion of one additional test, and\nwe are good to mark it as done. For the KES agent, we are still iterating over the best design of the solution,\nbut also progressing on the implementation.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"low-level-overview\">Low level overview<a class=\"hash-link\" href=\"#low-level-overview\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"secp-built-ins\">SECP built-ins<a class=\"hash-link\" href=\"#secp-built-ins\" title=\"Direct link to heading\">​</a></h3><ul><li>(missed last two weeks update) Audit was succesfully completed by bCryptic, and some minor changes where addressed in <a href=\"https://github.com/input-output-hk/cardano-base/pull/313\" target=\"_blank\" rel=\"noopener noreferrer\">PR 313</a></li><li>CIP-0049 was addressed in the editors meeting, and <a href=\"https://github.com/cardano-foundation/CIPs/pull/250\" target=\"_blank\" rel=\"noopener noreferrer\">PR 250</a> was merged</li><li>The unit-tests <a href=\"https://github.com/input-output-hk/cardano-base/pull/320\" target=\"_blank\" rel=\"noopener noreferrer\">PR 320</a> is opened. Some editorial concerns still need to be addressed, and an additional (negative) test has been requested for addition.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"kes-agent\">KES agent<a class=\"hash-link\" href=\"#kes-agent\" title=\"Direct link to heading\">​</a></h3><ul><li>We were working in investigating how to send OpCerts to KES agents, but turns out to be not necessary. OpCerts can be stored on-disk, so the agent does not need to be aware of them.</li><li>We are redesigning the architecture. Instead of connecting the control server to the agent, and then the latter to the node, we are directly connecting the control server to the node, and the latter to the agent(s).</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-27-crypto",
            "title": "Crypto Team Update",
            "summary": "High level overview",
            "date_modified": "2022-10-27T00:00:00.000Z",
            "author": {
                "name": "Iñigo Querejeta Azurmendi",
                "url": "https://github.com/iquerejeta"
            },
            "tags": [
                "crypto"
            ]
        },
        {
            "id": "2022-10-21-hydra",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>This week, the hydra team reviewed and addressed several open comments on the\nnew HeadV1 specification, completing a list the of identified gaps between\nspecification and implementation while doing so. In the wake of the recent\ndemonstration of SundaeSwap running their DEX in a Hydra Head, they met with\nthem to capture feature ideas &amp; incorporate their feedback on the roadmap, as\nwell as potential research avenues.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-did-the-team-achieve-this-week\">What did the team achieve this week<a class=\"hash-link\" href=\"#what-did-the-team-achieve-this-week\" title=\"Direct link to heading\">​</a></h3><ul><li>Had the monthly review meeting, a bit earlier than expected: <a href=\"https://input-output.atlassian.net/wiki/spaces/HYDRA/pages/3650813953/Monthly+report+-+October+2022\" target=\"_blank\" rel=\"noopener noreferrer\">https://input-output.atlassian.net/wiki/spaces/HYDRA/pages/3650813953/Monthly+report+-+October+2022</a></li><li>Reviewed and addressed several open comments on HeadV1 specification.</li><li>Completed the list of identified gaps between specification and implementation <a href=\"https://github.com/input-output-hk/hydra-poc/issues/452\" target=\"_blank\" rel=\"noopener noreferrer\">#452</a></li><li>Had two meetings with SundaeSwap to incorporate their feedback (on research and on the roadmap).</li><li>Some small fixes on TUI and our docker images. <a href=\"https://github.com/input-output-hk/hydra-poc/issues/538\" target=\"_blank\" rel=\"noopener noreferrer\">#538</a> <a href=\"https://github.com/input-output-hk/hydra-poc/pull/562\" target=\"_blank\" rel=\"noopener noreferrer\">#562</a></li><li>Met with the internal audit team and clarified scope.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-are-the-goals-of-next-week\">What are the goals of next week<a class=\"hash-link\" href=\"#what-are-the-goals-of-next-week\" title=\"Direct link to heading\">​</a></h3><ul><li>Complete the last two items required for a version <code>0.8.0</code>.</li><li>Cut the next release, version <code>0.8.0</code></li><li>Get backup/recovery <a href=\"https://github.com/input-output-hk/hydra-poc/issues/187\" target=\"_blank\" rel=\"noopener noreferrer\">#187</a> done with proper event sourcing (ADR18)</li><li>Have the CI build macos artifacts</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-21-hydra",
            "title": "Hydra Team Update",
            "summary": "High level summary",
            "date_modified": "2022-10-21T00:00:00.000Z",
            "author": {
                "name": "Sebastian Nagel",
                "url": "https://github.com/ch1bo"
            },
            "tags": [
                "hydra"
            ]
        },
        {
            "id": "2022-10-18-consensus",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High-level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>During the past two weeks, the consensus team worked on adding property test for\ndifferent aspects of the UTxO HD prototype: era transitions, mempool, and\nbacking store. Thanks to these tests we were able to uncover a bug in the\nprototype. On the Genesis front, we benchmarked a different version of the\nChainSync jumping prototype to try to improve its performance, but this did not\nresult in any noticeable speedup.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-status-report\">High-level status report<a class=\"hash-link\" href=\"#high-level-status-report\" title=\"Direct link to heading\">​</a></h2><ul><li>Finish the UTxO HD prototype: on track.<ul><li>We focused on increasing test coverage for the UTxO-HD prototype:<ul><li>We started implementing Cadano-eras transition property-tests.</li><li>We started implementing state-machine property-tests for the mempool.</li><li>We merged the mempool rewrite.</li><li>We started working on state-machine tests for the backing store. This\nuncovered a bug in the range-read implementation of the LMDB backing\nstore.</li></ul></li></ul></li><li>Genesis: on track.<ul><li>We benchmarked a version of the Genesis ChainSync Jumping prototype that\nspreads out the ChainSync updates over a longer period of time. This did not\nresult in any noticeable speedup.</li><li>We investigated the overhead introduced by non-ChainSync components, but no\nconclusions could be drawn from the benchmarks we ran.</li></ul></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"workstreams\">Workstreams<a class=\"hash-link\" href=\"#workstreams\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"finish-the-utxo-hd-prototype\">Finish the UTxO HD prototype<a class=\"hash-link\" href=\"#finish-the-utxo-hd-prototype\" title=\"Direct link to heading\">​</a></h3><p>We focused on increasing test coverage for the UTxO HD prototype. We also merged\nthe <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4049\" target=\"_blank\" rel=\"noopener noreferrer\">mempool\nrewrite</a>.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"era-transition-property-tests\">Era transition property tests<a class=\"hash-link\" href=\"#era-transition-property-tests\" title=\"Direct link to heading\">​</a></h4><p>We started implementing <a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4043\" target=\"_blank\" rel=\"noopener noreferrer\">Cardano era transition property\ntests</a>,\nwhich are needed for making sure that the ledger tables get updated in the\nright way when we move from one era to the next. There are at the moment two\nimportant transitions.</p><ul><li>Byron to Shelley: where all the UTxO is transferred from in-memory Byron\nstate (which has no tables) to the ledger tables of the Shelley state.</li><li>Shelley to Allegra: where the AVVM addresses must be deleted.</li></ul><p>We have tests for the Byron to Shelley transitions. We are working on adding\nthe remaining ones.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mempool-state-machine-tests\">Mempool state-machine tests<a class=\"hash-link\" href=\"#mempool-state-machine-tests\" title=\"Direct link to heading\">​</a></h4><p>We started implementing <a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4044\" target=\"_blank\" rel=\"noopener noreferrer\">state-machine property tests for the\nmempool</a>.\nThe mempool is currently tested via pure property tests, and use a ledger\nstate without tables. With the introduction of UTxO HD, testing the concurrent\nbehavior of the mempool became of crucial importance (eg now we have to\nacquire locks to flush the backing store). In addition, we need to test a\nledger state with tables. These needs led to the creation of a new set of\nproperty tests. In particular we aim to run parallel state-machine tests that\nexercise the mempool in a way similar to how the node would make use of it.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"backing-store-property-tests\">Backing store property tests<a class=\"hash-link\" href=\"#backing-store-property-tests\" title=\"Direct link to heading\">​</a></h4><p>We started working on <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4081\" target=\"_blank\" rel=\"noopener noreferrer\">state-machine tests for the backing\nstore</a> that UTxO\nHD uses. The property tests uncovered errors in the range-reads implementation\nof the LMDB backing store. To facilitate fixing this bug, we made\n<a href=\"https://github.com/input-output-hk/lmdb-simple/pull/1\" target=\"_blank\" rel=\"noopener noreferrer\">changes</a> to the Haskell\nLMDB bindings.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"benchmarking-the-csj-prototype\">Benchmarking the CSJ prototype<a class=\"hash-link\" href=\"#benchmarking-the-csj-prototype\" title=\"Direct link to heading\">​</a></h3><p>Prompted by previous benchmarks showing significant improvements in sync time by\nusing more capabilities, we implemented a way to spread out the ChainSync\nupdates over a larger period instead of firing them all at the same time. This\ndidn't result in a noticeable speedup.</p><p>We also benchmarked the prototype with CSJ disabled (such that just the dynamo\npeer is running ChainSync, but e.g. BlockFetch still sees all peers) to rule\nout/confirm overhead by non-ChainSync (mainly BlockFetch) related components.\nThis results in era-specific behavior (speed is like the prototype in Byron, but\nlike the baseline in Shelley). This deserves a closer look in the future.</p><p>This diagram shows the respective syncing progress, starting at Genesis and\ncontinuing a good part into Shelley (with the dashed line indicating the\nByron-to-Shelley transition).</p><ul><li>Red: baseline</li><li>Green: CSJ prototype, 10 peers, jumps every 3000/f slots, jumps in clumps.</li><li>Blue: like Green, jumps are spread out.</li><li>Orange: variant with no jumping, to measure unrelated overhead.</li></ul><p><img loading=\"lazy\" src=\"/cardano-updates/assets/images/happy-path-csj-prototype-bench-2-e23d2986ddef0a187df9ce336b2db116.svg\" width=\"654\" height=\"459\" class=\"img_ev3q\"></p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-18-consensus",
            "title": "Consensus Team Update",
            "summary": "High-level summary",
            "date_modified": "2022-10-18T00:00:00.000Z",
            "author": {
                "name": "Damian Nadales",
                "url": "https://github.com/dnadales"
            },
            "tags": [
                "consensus"
            ]
        },
        {
            "id": "2022-10-14-hydra",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>This week, the hydra team worked on implementing ADR18 to get backup &amp; restore functionality of the <code>hydra-node</code> over the line. Although not fully there yet, an early version of that feature was already needed and succesfully tested by SundaeSwap in their recent demonstration of their DEX running on Hydra. The team also worked on the updated specificaton, met with the researchers and discussed a solution for how to secure rollbacks \"past the opening of a Head\". We also reponded to recent requests for static executables and prioritized that feature higher, implemented it and merged it.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-did-the-team-achieve-this-week\">What did the team achieve this week<a class=\"hash-link\" href=\"#what-did-the-team-achieve-this-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Last week we thought we were done with <a href=\"https://hydra.family/head-protocol/adr/18/\" target=\"_blank\" rel=\"noopener noreferrer\">ADR18</a>, but were not ...</li><li>... instead, SundaeSwap has been preparing their Rare bloom Hydra demo &amp; needed assistence.</li><li>Implemented a first version for persistence <a href=\"https://github.com/input-output-hk/hydra-poc/issues/187\" target=\"_blank\" rel=\"noopener noreferrer\">#187</a> in response.</li><li>Enhanced CI to publish test results <a href=\"https://hydra.family/head-protocol/benchmarks/tests/hydra-node/hspec-results\" target=\"_blank\" rel=\"noopener noreferrer\">on our website</a></li><li>Engineering meeting -&gt; discussed rollbacks and discovered a solution for the rollback past open problem!</li><li>Pulled static executable feature <a href=\"https://github.com/input-output-hk/hydra-poc/issues/200\" target=\"_blank\" rel=\"noopener noreferrer\">#200</a> into scope, implemented it and merged it!</li><li>Received and read through a project proposal by a vendor (building a Hydra platform).</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-are-the-goals-of-next-week\">What are the goals of next week<a class=\"hash-link\" href=\"#what-are-the-goals-of-next-week\" title=\"Direct link to heading\">​</a></h2><ul><li>Get backup/recovery <a href=\"https://github.com/input-output-hk/hydra-poc/issues/187\" target=\"_blank\" rel=\"noopener noreferrer\">#187</a> done with proper event sourcing (ADR18)</li><li>Cut the next release, version <code>0.8.0</code></li><li>Address open comments on specification document &amp; complete the list of identified gaps between specification and implementation <a href=\"https://github.com/input-output-hk/hydra-poc/issues/452\" target=\"_blank\" rel=\"noopener noreferrer\">#452</a></li><li>Have the CI build macos artifacts</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-14-hydra",
            "title": "Hydra Team Update",
            "summary": "High level summary",
            "date_modified": "2022-10-14T00:00:00.000Z",
            "author": {
                "name": "Sebastian Nagel",
                "url": "https://github.com/ch1bo"
            },
            "tags": [
                "hydra"
            ]
        },
        {
            "id": "2022-10-14-ledger",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>The ledger team is still primarily focused on addressing\n<a href=\"https://github.com/input-output-hk/cardano-ledger/issues?q=is%3Aissue+is%3Aopen+label%3A%22%3Acredit_card%3A+technical-debt%22\" target=\"_blank\" rel=\"noopener noreferrer\">technical</a>\n<a href=\"https://github.com/input-output-hk/cardano-ledger/projects/3\" target=\"_blank\" rel=\"noopener noreferrer\">debt</a>.\nWe now have the infrastructure for versioning our serialization schemes,\nwhich we continue to put into action.\nWe have made first steps towards getting proper support for the\n<a href=\"https://github.com/input-output-hk/formal-ledger-specifications\" target=\"_blank\" rel=\"noopener noreferrer\">formal ledger repository</a>\n(in particular, we've added nix builds and\ncontinuous integration support).\nWe are wrapping up an investigation of the performance of a critical\nfunction used by the consensus layer for leader checks.\nFinally, we are improving the packaging and versioning of our code.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lower-level-summary\">Lower level summary<a class=\"hash-link\" href=\"#lower-level-summary\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"completed-technical-debt\">Completed Technical Debt<a class=\"hash-link\" href=\"#completed-technical-debt\" title=\"Direct link to heading\">​</a></h3><ul><li>Because the Shelley ledger era was a complete re-write of the Byron ledger era, a lot of\nour code lives in the <code>cardano-ledger-shelley</code> package, though with hindsight we can say that\nmuch of it should live in <code>cardano-ledger-core</code>.\nWe continue to move things to <code>cardano-ledger-core</code>, and have much more to come. [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3059\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3059</a>]</li><li>We now have the infrastructure to support <strong>versioned</strong> serialization schemes.\nThe inability to do this has caused us a lot difficulties,\nsuch as [<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3003\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3003</a>], [<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/2965\" target=\"_blank\" rel=\"noopener noreferrer\">issue-2965</a>] and [<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/2444\" target=\"_blank\" rel=\"noopener noreferrer\">issue-2444</a>].\nWe are still in the process of switching to the versioned serialization scheme\n(such as [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3078\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3078</a>]),\nbut the infrastructure was completed in [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3063\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3063</a>].</li><li>We now have proper nix and CI support for the formal ledger project. [<a href=\"https://github.com/input-output-hk/formal-ledger-specifications/pull/19\" target=\"_blank\" rel=\"noopener noreferrer\">pull-19</a>]</li><li>A separate team is helping bring support for\n<a href=\"https://github.com/input-output-hk/cardano-haskell-packages\" target=\"_blank\" rel=\"noopener noreferrer\">CHaP</a>\nto all the cardano-node repositories.\nWe have been helping out with this effort.</li></ul><ul><li>A separate team continues working on upgrading all the\ncardano-node repositories to work with ghc 9.2.4.\nWe have been helping out with this effort.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"in-progress-technical-debt\">In-progress Technical Debt<a class=\"hash-link\" href=\"#in-progress-technical-debt\" title=\"Direct link to heading\">​</a></h3><p>We also have several fairly large pull-requests in review\nthat we are working on.</p><ul><li>In an on-going attempt to build out a more user-friendly API,\nwe continue to remove <code>HasField</code> instances in place of using micro-lenses.\nThe protocol parameters, in particular, are being worked on. [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3045\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3045</a>]</li><li>We are also renaming record fields to be consistent across the repository. [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3062\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3062</a>]</li><li>We are now cleaning up all the work we did to understand the performance\nof the TICKF transition. We have some improvements to the computatation\nas well. [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3068\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3068</a>]</li><li>We are adding more documentation, in particular to our <code>Twiddler</code> functionality. [<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3073\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3073</a>]</li><li>The formal ledger is adding support for finite set theory. [<a href=\"https://github.com/input-output-hk/formal-ledger-specifications/pull/20\" target=\"_blank\" rel=\"noopener noreferrer\">pull-20</a>]</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-14-ledger",
            "title": "Ledger Team Update",
            "summary": "High level summary",
            "date_modified": "2022-10-14T00:00:00.000Z",
            "author": {
                "name": "Jared Corduan",
                "url": "https://github.com/JaredCorduan"
            },
            "tags": [
                "ledger"
            ]
        },
        {
            "id": "2022-10-05-consensus",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-summary\">High level summary<a class=\"hash-link\" href=\"#high-level-summary\" title=\"Direct link to heading\">​</a></h2><p>During the past two weeks, the consensus team worked on improving the\nperformance of the ChainSync jumping logic, which is needed for Genesis. We also\nrewrote the implementation of the mempool in the UTxO HD prototype which solved\nthe issues that prevented us from running system level benchmarks. Also on the\nUTxO HD front, we have an improved implementation of the sequence-of-differences\n(a crucial piece of UTxO HD), and we also elaborated a test sign-off list for\nthe UTxO HD feature.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"executive-summary\">Executive summary<a class=\"hash-link\" href=\"#executive-summary\" title=\"Direct link to heading\">​</a></h2><ul><li>With the latest implementation of ChainSync jumping we are closer to the\nbaseline performance. In particular, the prototype seems to benefit from the\nextra concurrency provided by additional capabilities.</li><li>We rewrote the implementation of the mempool in the UTxO HD prototype. This\nrewrite was required due to performance problems we observed when running the\n<a href=\"https://github.com/input-output-hk/cardano-node/blob/master/Makefile#L51\" target=\"_blank\" rel=\"noopener noreferrer\">workbench</a>.\nThese performance problems prevented us from running system level benchmarks.\nThe rewrite solved these issues. After the <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4049\" target=\"_blank\" rel=\"noopener noreferrer\">UTxO-HD: mempool\nrewrite</a> PR is\nmerged, we will contact the Benchmarking team so that they run the system\nlevel benchmarks.</li><li>The implementation of sequences of differences based on anti-diffs was\nintegrated into the UTxO HD prototype. It is pending\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4036\" target=\"_blank\" rel=\"noopener noreferrer\">review</a> and\nwe also need to run replay and syncing benchmarks to confirm that this will\ndeliver a performance improvement, as observed in our micro-benchmarks.</li><li><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3944\" target=\"_blank\" rel=\"noopener noreferrer\">The UTxO HD prototype\ninspection</a>\nresulted in a <a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4045\" target=\"_blank\" rel=\"noopener noreferrer\">list of\ntests</a>\nneeded for consensus to consider the UTxO HD prototype as fully tested.</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"additional-information\">Additional information<a class=\"hash-link\" href=\"#additional-information\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"genesis\">Genesis<a class=\"hash-link\" href=\"#genesis\" title=\"Direct link to heading\">​</a></h3><p>Benchmarking setup: 50MBit/s, 50ms latency</p><ul><li>Red: baseline</li><li>Green: Current CSJ prototype, 10 peers, jumps every 3000/f slots.</li></ul><p>As ChainSync Jumping involves many concurrent network operations at every jump,\nwe tried to run the node with 6 instead of the default 2 capabilties.</p><ul><li>Orange: baseline with 6 capabilities</li><li>Blue: CSJ prototype with 6 capabilities</li></ul><p>This diagram shows the respective syncing progress, starting at Genesis and\ncontinuing a good part into Shelley (with the dashed line indicating the\nByron-to-Shelley transition).</p><p><img loading=\"lazy\" src=\"/cardano-updates/assets/images/happy-path-csj-prototype-bench-1-2c33ba45f44a086415e703fe8f0f7ad1.svg\" width=\"654\" height=\"459\" class=\"img_ev3q\"></p><p>Further work includes whether we can tune the prototype to better handle few\ncapabilities, or to adapt the default number of capabilities (potentially just\nwhile syncing).</p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-05-consensus",
            "title": "Consensus Team Update",
            "summary": "High level summary",
            "date_modified": "2022-10-05T00:00:00.000Z",
            "author": {
                "name": "Damian Nadales",
                "url": "https://github.com/dnadales"
            },
            "tags": [
                "consensus"
            ]
        },
        {
            "id": "2022-10-04-db-sync",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"dbsync-update\">DBSync Update<a class=\"hash-link\" href=\"#dbsync-update\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"fast-restarts\">Fast restarts<a class=\"hash-link\" href=\"#fast-restarts\" title=\"Direct link to heading\">​</a></h3><p> We fixed a long overdue issue in db-sync which caused long delays on restarts\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1266\" target=\"_blank\" rel=\"noopener noreferrer\">1266</a>. This has been\none of db-sync main objectives for this period. Restarts are now very fast,\nbecause db-sync deletes almost nothing from the db, it just replays the ledger rules until it\nreaches the tip of the db. The fix also improves reconnection speed, in cases where the node\nrestarts or the connection is temporarily lost. It also speeds up even more in cases where due to a\ndeployment mess up a very old snapshot or no snapshot at all is used.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"property-based-testing\">Property based testing<a class=\"hash-link\" href=\"#property-based-testing\" title=\"Direct link to heading\">​</a></h3><p>We added stateful property based testing, using <code>quickcheck-state-machine</code>\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1269\" target=\"_blank\" rel=\"noopener noreferrer\">1269</a>. These tests use empty or\nalmost empty blocks to test the new behaviour of restarts and rollbacks.</p><p> These tests generate arbitrarily a list of symbolic commands from these:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">RollForward Int</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">RollBack BlockNo</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">StopDBSync</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">StartDBSync</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">RestartNode</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">AssertBlockNo BlockNo</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The commands are translated into real commands. For example <code>RollForward Int</code> will forge a new block\nthat fits on the current chain. These real commands are executed against db-sync using the mock\nchain-sync server. The symbolic commands are executed against a vesy simplistic Model of db-sync\nwhich looks like this:</p><div class=\"language-haskell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-haskell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  Model</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    { serverTip :: BlockNo</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    , dbSyncTip :: BlockNo</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    , dbSynsIsOn :: Bool</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    , dbSynsHasSynced :: Bool</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Finally a number of postconditions are checked, related to the eventual block number of db-sync.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"tech-debt\">Tech Debt<a class=\"hash-link\" href=\"#tech-debt\" title=\"Direct link to heading\">​</a></h3><p>We handled a number of tech debt in\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1275\" target=\"_blank\" rel=\"noopener noreferrer\">1275</a>\nThis improves the code format of db-sync, deletes many queries that were never used and groups the\nothers. This tech debt resolution not only improves the experience of working in db-sync, but can\nfacilitate some of our other objectives, as it makes it very explicit which queries are used\nduring syncing and which indexes are necessary.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"smash\">Smash<a class=\"hash-link\" href=\"#smash\" title=\"Direct link to heading\">​</a></h3><p>We worked on fixing an issue related to fetching pool metadata\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1276\" target=\"_blank\" rel=\"noopener noreferrer\">1276</a>.\nThe issue which is described in\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/issues/1270\" target=\"_blank\" rel=\"noopener noreferrer\">1270</a></p>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-04-db-sync",
            "title": "DB Sync Team Update",
            "summary": "DBSync Update",
            "date_modified": "2022-10-04T00:00:00.000Z",
            "author": {
                "name": "Kostas Dermentzis",
                "url": "https://github.com/kderme"
            },
            "tags": [
                "db-sync"
            ]
        },
        {
            "id": "2022-10-04-node-cli-api",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"node-api-cli-update\">Node-Api-Cli Update<a class=\"hash-link\" href=\"#node-api-cli-update\" title=\"Direct link to heading\">​</a></h2><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"2022-10-04---2022-10-18\">2022-10-04 - 2022-10-18<a class=\"hash-link\" href=\"#2022-10-04---2022-10-18\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"executive-summary\">Executive Summary<a class=\"hash-link\" href=\"#executive-summary\" title=\"Direct link to heading\">​</a></h3><p>The majority of the team's time was spent between getting <code>1.34.4</code> ready, addressing various feature requests/issues/bugs that have arisen and refactoring components in the api and cli. The current refactoring is aimed at the long term goal of empowering users to be able to easily build applications similar to <code>cardano-cli</code>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"completed\">Completed<a class=\"hash-link\" href=\"#completed\" title=\"Direct link to heading\">​</a></h3><ul><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4504\" target=\"_blank\" rel=\"noopener noreferrer\">GHC 9.2.4 preparations</a></li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cardano-cli\">cardano-cli<a class=\"hash-link\" href=\"#cardano-cli\" title=\"Direct link to heading\">​</a></h4><ul><li>[Serenity]<!-- --> - <a href=\"https://github.com/input-output-hk/cardano-node/pull/4491\" target=\"_blank\" rel=\"noopener noreferrer\">Separate IO from txBuild and txBuildRaw functions</a></li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cardano-api\">cardano-api<a class=\"hash-link\" href=\"#cardano-api\" title=\"Direct link to heading\">​</a></h4><ul><li>[BUGFIX]<!-- --> - <a href=\"https://github.com/input-output-hk/cardano-node/pull/4501\" target=\"_blank\" rel=\"noopener noreferrer\">TxWitness text envelope format does not roundtrip in Shelley era</a></li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cardano-node\">cardano-node<a class=\"hash-link\" href=\"#cardano-node\" title=\"Direct link to heading\">​</a></h4><ul><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4526\" target=\"_blank\" rel=\"noopener noreferrer\">Fix MacOS GHA CI</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"in-progress\">In Progress<a class=\"hash-link\" href=\"#in-progress\" title=\"Direct link to heading\">​</a></h3><ul><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4508\" target=\"_blank\" rel=\"noopener noreferrer\">Release 1.34.4</a></li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cardano-cli-1\">cardano-cli<a class=\"hash-link\" href=\"#cardano-cli-1\" title=\"Direct link to heading\">​</a></h4><ul><li>[BUGFIX]<!-- --> - <a href=\"https://github.com/input-output-hk/cardano-node/pull/4538\" target=\"_blank\" rel=\"noopener noreferrer\">Fix query era mismatch bug in transaction build command</a></li><li>[Serenity]<!-- --> - <a href=\"https://github.com/input-output-hk/cardano-node/pull/4516\" target=\"_blank\" rel=\"noopener noreferrer\">Condense Read and Validation modules in cardano-cli</a></li><li>[BUGFIX]<!-- -->- <a href=\"https://github.com/input-output-hk/cardano-node/pull/4537\" target=\"_blank\" rel=\"noopener noreferrer\">Stop the cli from changing the bytes in user-supplied data</a></li><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4431\" target=\"_blank\" rel=\"noopener noreferrer\">Infer protocol params in transaction build</a></li><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4408\" target=\"_blank\" rel=\"noopener noreferrer\">Allow assembling transactions with no witnesses</a></li><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4276\" target=\"_blank\" rel=\"noopener noreferrer\">Add tx-mempool command to CLI</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cardano-api-1\">cardano-api<a class=\"hash-link\" href=\"#cardano-api-1\" title=\"Direct link to heading\">​</a></h3><ul><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4482\" target=\"_blank\" rel=\"noopener noreferrer\">Return Lovelace for calculateMinimumUTxO</a></li><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4458\" target=\"_blank\" rel=\"noopener noreferrer\">Make TxBodyContent an instance of Monoid</a></li><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4450\" target=\"_blank\" rel=\"noopener noreferrer\">Auto-balance multiasset transactions</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cardano-node-1\">cardano-node<a class=\"hash-link\" href=\"#cardano-node-1\" title=\"Direct link to heading\">​</a></h3><ul><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4263\" target=\"_blank\" rel=\"noopener noreferrer\">Stop running CI when the only changes are to docs</a></li><li><a href=\"https://github.com/input-output-hk/cardano-node/pull/4341\" target=\"_blank\" rel=\"noopener noreferrer\">Rename TestEnableDevelopmentHardForkEras</a></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-10-04-node-cli-api",
            "title": "Node API & CLI Team Update",
            "summary": "Node-Api-Cli Update",
            "date_modified": "2022-10-04T00:00:00.000Z",
            "author": {
                "name": "Jordan Millar",
                "url": "https://github.com/Jimbo4350"
            },
            "tags": [
                "cli-api"
            ]
        },
        {
            "id": "2022-09-30-ledger",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ledger-update\">Ledger Update<a class=\"hash-link\" href=\"#ledger-update\" title=\"Direct link to heading\">​</a></h2><p>We have continued focusing nearly entirely on addressing technical debt.\nA lot of design work has begun for the next ledger era,\nbut we do not yet have anything concrete to share.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"technical-debt-issues-completed\">Technical debt issues completed<a class=\"hash-link\" href=\"#technical-debt-issues-completed\" title=\"Direct link to heading\">​</a></h3><ul><li>[<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/1676\" target=\"_blank\" rel=\"noopener noreferrer\">issue-1676</a>][<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/2992\" target=\"_blank\" rel=\"noopener noreferrer\">pull-2992</a>] We have finally removed the ledger dependency on the\n<code>cardano-prelude</code> package. It was barely used in the ledger repository, and it added a dependency\nthat we did not want to maintain. It was a bit difficult to remove, and we had\nto coordinate removing it from cardano-base.\nA lot ended up going into <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/2992\" target=\"_blank\" rel=\"noopener noreferrer\">pull-2992</a>, due to the coordination effort, and we ended\nup updating Plutus as well.\nThis means that we've now also made a lot of progress on the problematic cost model serialization\nissues described in <a href=\"https://github.com/input-output-hk/cardano-ledger/issues/2902\" target=\"_blank\" rel=\"noopener noreferrer\">issue-2902</a>.\nIn particular, after we resolve <a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3014\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3014</a>, we will not have to wait an epoch before\nreleasing a cost model for a new version of Plutus, as we had to do for the Vasil HF.</li><li>[<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3046\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3046</a>][<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3055\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3055</a>] We moved a module that is now only used in Byron to a Byron package.</li><li>[<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3047\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3047</a>][<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3054\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3054</a>] We improved the interface to the <code>Value</code> (multi-asset) type.</li><li>[<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3044\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3044</a>] We debugged and fixed a tricky compilation issue. Certain kinds of field updates\nwere adding approximately 20 minutes to our compile time!</li><li>[<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/2932\" target=\"_blank\" rel=\"noopener noreferrer\">issue-2932</a>][<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3036\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3036</a>] As a part of our ongoing re-organization of the codebase, we\nhave added a <code>Cardano.Ledger.[Era].Core</code> module to each ledger era that has a TxBody class.\nMost classes defined in the era should go in this new module.\nWe also re-export the <code>Cardno.Ledger.Core</code> module and the previous <code>Cardano.Ledger.[Era].Core</code>\nmodules from each era.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"technical-debt-in-progress\">Technical debt in progress<a class=\"hash-link\" href=\"#technical-debt-in-progress\" title=\"Direct link to heading\">​</a></h3><ul><li>[<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3034\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3034</a>][<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3035\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3035</a>][<a href=\"https://github.com/input-output-hk/cardano-node/issues/4421\" target=\"_blank\" rel=\"noopener noreferrer\">node-issue-4421</a>] We are continuing to write benchmarks to understand exactly where\nall the time is being spent on executing the <code>TICKF</code> transition.\nThe consolidation of the per-stake-credential stake distribution to the per-stake-pool\ndistribution does seem to account for a large amount of time (near a second as written, which we\nhave down to about half a second with some optimizations),\nbut this does not account for everything.\nApplying the reward update may also be a big contributing factor.</li><li>[<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3033\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3033</a>][<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3038\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3038</a>][<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3041\" target=\"_blank\" rel=\"noopener noreferrer\">pull-3041</a>] A separate team is working on upgrading all the\ncardano-node repositories to work with ghc 9.2.4. We have been helping out with this effort.</li><li>The nix scripts used to build our new\n<a href=\"https://github.com/input-output-hk/formal-ledger-specifications\" target=\"_blank\" rel=\"noopener noreferrer\">formal ledger model</a>\ndo not work consistently for everyone, and we have been working on fixing these issues.</li><li>[<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/3014\" target=\"_blank\" rel=\"noopener noreferrer\">issue-3014</a>] We are still working on adding a versioning scheme to all of the ledger\nserializers.</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-09-30-ledger",
            "title": "Ledger Team Update",
            "summary": "Ledger Update",
            "date_modified": "2022-09-30T00:00:00.000Z",
            "author": {
                "name": "Jared Corduan",
                "url": "https://github.com/JaredCorduan"
            },
            "tags": [
                "ledger"
            ]
        },
        {
            "id": "2022-09-27-network",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"network-update\">Network Update<a class=\"hash-link\" href=\"#network-update\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ouroboros-network\">Ouroboros Network<a class=\"hash-link\" href=\"#ouroboros-network\" title=\"Direct link to heading\">​</a></h3><ul><li>We finished high and low level <em>peer sharing</em> design. See\n<a href=\"https://github.com/input-output-hk/ouroboros-network/wiki/Peer-Sharing-Implementation-Plan\" target=\"_blank\" rel=\"noopener noreferrer\">Peer Sharing Implementation Plan</a></li><li>We started working on low-level design of <em>eclipse evasion</em> (work in\nprogress).</li><li>We decided to use <strong>peer sharing</strong> instead of overloaded and ambiguous <em>gossip</em> term.\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3980\" target=\"_blank\" rel=\"noopener noreferrer\">PR input-output-hk/ouroboros-network#3980</a></li><li>We fixed technical dept\n<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3905\" target=\"_blank\" rel=\"noopener noreferrer\">issue input-output-hk/cardano-node#3905</a> in\nthe simulation testing of diffusion\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4004\" target=\"_blank\" rel=\"noopener noreferrer\">PR input-output-hk/cardano-node#4004</a></li><li>We deployed all our nodes using our new nix based deployment architecture.\nWhen deploying we found an issue in the\n<a href=\"https://github.com/input-output-hk/cardano-node/issues/3752\" target=\"_blank\" rel=\"noopener noreferrer\"><code>RTView</code></a>.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ouroboros-consensus\">Ouroboros Consensus<a class=\"hash-link\" href=\"#ouroboros-consensus\" title=\"Direct link to heading\">​</a></h3><ul><li>Recently we found out that the consensus does not log exceptions thrown during\nintiialisation.  This was fixed in\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4015\" target=\"_blank\" rel=\"noopener noreferrer\">PR input-output-hk/ouroboros-network#4015</a>\nAs part of this pull request we also changed that all exceptions rethrown by\nthe connection handler thread are wrapped in <code>ExceptionInHandler</code>.</li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"some-older-items-which-were-not-announced\">Some older items, which were not announced<a class=\"hash-link\" href=\"#some-older-items-which-were-not-announced\" title=\"Direct link to heading\">​</a></h4><ul><li>We identified and fixed an issue related to socket activation (socket options\nwhere not set for sockets passed through socket activation).\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3979\" target=\"_blank\" rel=\"noopener noreferrer\">PR input-output-hk/cardano-node#3979</a>\nThis fix will be released in the next <code>cardano-node</code> release.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cardano-node\">Cardano Node<a class=\"hash-link\" href=\"#cardano-node\" title=\"Direct link to heading\">​</a></h3><ul><li>We extended the NixOs service module so that one can modify <code>socketPath</code>,\n<code>runtimeDir</code>, <code>databasePath</code>, <code>traceSocketPathAccept</code>,\n<code>traceSocketPathConnect</code> and <code>stateDir</code> options.\n<a href=\"https://github.com/input-output-hk/cardano-node/pull/4196\" target=\"_blank\" rel=\"noopener noreferrer\">PR input-output-hk/cardano-node#4196</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"io-sim\">IO-Sim<a class=\"hash-link\" href=\"#io-sim\" title=\"Direct link to heading\">​</a></h3><p>We resolved a number of issues before release of <code>io-sim</code> on hackage:</p><ul><li><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/2797\" target=\"_blank\" rel=\"noopener noreferrer\">issue input-output-hk/ouroboros-network#2797</a></li><li><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/2650\" target=\"_blank\" rel=\"noopener noreferrer\">issue input-output-hk/ouroboros-network#2650</a></li><li><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3436\" target=\"_blank\" rel=\"noopener noreferrer\">issue input-output-hk/ouroboros-network#3436</a></li><li><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/2588\" target=\"_blank\" rel=\"noopener noreferrer\">issue input-output-hk/ouroboros-network#2588</a></li><li><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/2587\" target=\"_blank\" rel=\"noopener noreferrer\">issue input-output-hk/ouroboros-network#2587</a></li><li><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/2586\" target=\"_blank\" rel=\"noopener noreferrer\">issue input-output-hk/ouroboros-network#2586</a></li></ul><p>See <a href=\"https://github.com/input-output-hk/io-sim/pull/24\" target=\"_blank\" rel=\"noopener noreferrer\">PR #24</a>.</p><p>We also improved experience for contributors of <code>io-sim</code> and <code>typed-protocols</code> by adding issue templates:</p><ul><li><a href=\"https://github.com/input-output-hk/io-sim/pull/25\" target=\"_blank\" rel=\"noopener noreferrer\">PR input-output-hk/io-sim#25</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"typed-protocols\">Typed Protocols<a class=\"hash-link\" href=\"#typed-protocols\" title=\"Direct link to heading\">​</a></h3><ul><li>We pushed a branch which identifies a GHC quirk:\n<a href=\"https://github.com/input-output-hk/typed-protocols/tree/coot/typed-protocols-rewrite-StateToken-problem\" target=\"_blank\" rel=\"noopener noreferrer\">coot/typed-protocols-rewrite-StateToken-problem</a>.\nThat's too be resolved in order to push forward review of the redesign in\n<a href=\"https://github.com/input-output-hk/typed-protocols/pull/3\" target=\"_blank\" rel=\"noopener noreferrer\">PR input-output-hk/typed-protocols#3</a>.</li><li>As for <code>io-sim</code>, we wrote issue templates:\n<a href=\"https://github.com/input-output-hk/typed-protocols/pull/11\" target=\"_blank\" rel=\"noopener noreferrer\">PR input-output-hk/typed-protocols#11</a></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"input-endorsers-simulation\">Input Endorsers Simulation<a class=\"hash-link\" href=\"#input-endorsers-simulation\" title=\"Direct link to heading\">​</a></h3><p>New features include:</p><ul><li><p>Histograms of block arrival frequency, for both network (inbound) and CPU\n(block validation). This is interesting to check that we're not overloading\nthe CPU block validation capacity, or network link capacity. Or alternatively\nto observe the behaviour in an overload situation if we set the block\ngeneration rate high enough.</p></li><li><p>Pie chart of utilisation of TCP links. This shows how small a fraction of\nlinks are being used at any one time, and shows that once the system \"warms\nup\" and is operating stably, most block delivery is ballistic.</p></li><li><p>Showing off the new screen layout combinators, that let us put multiple\ncharts, titles etc on screen at once and scale them to whatever screen or\nvideo resolution we like without having to tweak numbers (this example is\nscaled to fit 1080HD video resolution).</p></li></ul><div style=\"width:640px;height:360px\"></div>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-09-27-network",
            "title": "Network Team Update",
            "summary": "Network Update",
            "date_modified": "2022-09-27T00:00:00.000Z",
            "author": {
                "name": "Marcin Szamotulski",
                "url": "https://github.com/coot"
            },
            "tags": [
                "network"
            ]
        },
        {
            "id": "2022-09-20-consensus",
            "content_html": "<ul><li>We proposed a fix for the performance degradation observed when running\ndistributed multi-node benchmarks in the UTxO HD feature branch. While this\nfixed the problems observed when running local benchmarks, it broke the\n<code>ThreadNet</code> tests due to concurrency issues. Therefore, we think it is wise to\nstart redesigning the UTxO HD mempool integration.</li><li>We did several rounds of code review on the alternative implementation of\ndiff-sequences required by the UTxO HD feature based on the idea of\nanti-diffs. This alternative implementation is close to being merged, and the\nnext step is to integrate this to the UTxO HD branch, so that we can run\nad-hoc replaying and syncing from scratch benchmarks and compare these with\nthe baseline. The micro-benchmarks we elaborated for the alternative\nimplementation show speedups of up to 4x, so we are optimistic about the\nperformance of replaying and syncing from scratch benchmarks, however it is\nimportant to notice that <em>due to the nature of UTxO HD</em> we will still be\nslower than the baseline.</li><li>The final draft of the Genesis implementation specification is ready for\nreview.</li><li>We implemented a prototype for the happy path of Genesis' ChainSync Jumping\n(CSJ). The prototype is slower than the baseline, however it is not the latest\nversion of the prototype and the jump interval is very small.</li><li>Work on integrating Conway has <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3971#issuecomment-1252524031\" target=\"_blank\" rel=\"noopener noreferrer\">stopped</a> since\npriorities have changed.</li><li>We started work on benchmarking epoch-boundaries and epoch overhead\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/4014\" target=\"_blank\" rel=\"noopener noreferrer\">pr-4014</a>. To this end, we made use of a modified version of our\n<code>db-analyser</code> tool. We ran the new benchmarking setup using the Cardano\nmainnet chain, and we can see that block tick and application take\nsubstantially longer at epoch boundaries, although there are a couple of slots\nduring an epoch in which these computations take more than normal. We notified\nthe ledger team about these findings. We will use this modified version of\n<code>db-analyser</code> to investigate the epoch overhead.</li></ul><h1>Workstreams</h1><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"utxo-hd\">UTxO HD<a class=\"hash-link\" href=\"#utxo-hd\" title=\"Direct link to heading\">​</a></h2><ul><li><p>Spent quite some time investigating the root cause of the degradation in\nperformance observed in the benchmarks. We run the <code>make forge-stress</code>\nbenchmarks locally in order to debug this behavior.</p><ul><li><p>Transaction batching doesn't make a notable difference in the outcome\n(considering we are using the in-memory backend).</p></li><li><p>The mempool batching implementation required asynchronous transaction\nvalidation which is a violation of the <code>LocalTxSubmission</code> protocol\ncontract and therefore if we continued on that route, the impact would\nhave been quite big.</p></li><li><p>The STM logic we implemented by using a <code>TMVar</code> for the mempool internal\nstate was buggy and under certain circumstances it seemed to lock.\nReverting the mempool internal state to be stored in a <code>TVar</code> seems to\nsolve this problem.</p></li><li><p>The results we get after this change look almost identical to the ones\nfrom the baseline.</p></li></ul></li><li><p><a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3997\" target=\"_blank\" rel=\"noopener noreferrer\">The anti-diff prototype (PR\n#3997)</a> has\nbeen reviewed and is close to being merged.</p><ul><li>A follow-up issue (<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/4010\" target=\"_blank\" rel=\"noopener noreferrer\">issue\n#4010</a>)\nto integrate the anti-diff prototype in the various <code>consensus</code> packages\nwas created. A first version of the integration exists, and all tests\npass. A next step is to get some indication of the \"real\" performance gain\nby profiling <code>db-analyser</code> (or <code>cardano-node</code>).</li></ul></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"genesis\">Genesis<a class=\"hash-link\" href=\"#genesis\" title=\"Direct link to heading\">​</a></h2><ul><li><p>Final draft of the Genesis implementation specification, now up for review.</p></li><li><p>Local benchmark setup for parameter tuning via the happy path ChainSync\nJumping (CSJ) prototype (<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3987\" target=\"_blank\" rel=\"noopener noreferrer\">Issue 3987</a>).</p><ul><li><p>Context: Our Genesis design requires us to check in with a large (~20)\nnumber of servers periodically while syncing. These servers are offered\njump requests via the ChainSync protocol (hence the name), which they can\naccept or decline. If a peer declines, the Genesis rule allows us to\ndetermine whether a node actually has a better chain.</p></li><li><p>The \"happy path\" is when no peer declines a jump. We want this to have\nclose to no overhead compared to status quo, i.e. syncing without Genesis.</p></li><li><p>We implemented a prototype for this happy path, and are now starting to\ntest in various configurations (number of peers, latency, bandwidth) to\ntune the performance of ChainSync jumping, i.e. how complicated our logic\nof choosing when to jump needs to be.</p><p><strong>Example:</strong></p></li><li><p>Simulated connection: 50 MBit/s, 50ms latency</p></li><li><p>Jump interval: 3000 slots (on the low end, could be increased to up to\n<code>3k/f</code>)</p></li><li><p>Red: baseline (1.35.3), one peer in topology file</p></li><li><p>Blue: Preliminary version of our prototype, with 10 peers.</p><p><img loading=\"lazy\" src=\"/cardano-updates/assets/images/happy-path-csj-prototype-prelim-5bbe2e2a20a2740e6238a7c73e618168.svg\" width=\"654\" height=\"459\" class=\"img_ev3q\"></p><p>It is slower by about ~30%, but it is not the latest version of the\nprototype, and the jump interval is very small, making CSJ more of a\nbottleneck.</p></li></ul></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"technical-debt\">Technical debt<a class=\"hash-link\" href=\"#technical-debt\" title=\"Direct link to heading\">​</a></h2><ul><li>Fix flakiness in ChainDB QSM tests (<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3990\" target=\"_blank\" rel=\"noopener noreferrer\">PR 3990</a>).</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-09-20-consensus",
            "title": "Consensus Team Update",
            "summary": "- We proposed a fix for the performance degradation observed when running",
            "date_modified": "2022-09-20T00:00:00.000Z",
            "author": {
                "name": "Damian Nadales",
                "url": "https://github.com/dnadales"
            },
            "tags": [
                "consensus"
            ]
        },
        {
            "id": "2022-09-19-db-sync",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"dbsync-update\">DBSync Update<a class=\"hash-link\" href=\"#dbsync-update\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-tag\">New Tag<a class=\"hash-link\" href=\"#new-tag\" title=\"Direct link to heading\">​</a></h3><p>We created a new db-sync tag 13.0.5 which addresses shortcomings of the last\nrelease 13.0.4. It is currently under testing.\nThe Changelog is\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/blob/8ad98d48e0068f3768d48e18fdcbe254037cba3b/cardano-db-sync/CHANGELOG.md#1305\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> and in more details:</p><ul><li><p>We fixed fees for tx with phase 2 failure that didn't include a total collateral field.\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1248\" target=\"_blank\" rel=\"noopener noreferrer\">1248</a></p></li><li><p>We fixed an issue that could cause db-sync to crash if a specific rollback occured.\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1247\" target=\"_blank\" rel=\"noopener noreferrer\">1247</a></p></li><li><p>DBSync will now avoid reserialising data, especially Datums, which not only slows down db-sync but\ncould result in the wrong CBOR encoding being inserted.\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1217\" target=\"_blank\" rel=\"noopener noreferrer\">1217</a></p></li><li><p>All the fixes above come with unit tests which validates the fix.</p></li><li><p>Added support for preprod and preview from docker. DBSync no longer needs to include the configs\nfor different networks, these are directly fetched from the cardano world.\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1254\" target=\"_blank\" rel=\"noopener noreferrer\">1254</a></p></li><li><p>We added better support from docker for the new disable options and the overall documentation.\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1260\" target=\"_blank\" rel=\"noopener noreferrer\">1260</a></p></li></ul><p>All the above were also backported to the master branch</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"open-source\">Open source<a class=\"hash-link\" href=\"#open-source\" title=\"Direct link to heading\">​</a></h3><p>We made the db-sync <a href=\"https://github.com/orgs/input-output-hk/projects/52/views/1\" target=\"_blank\" rel=\"noopener noreferrer\">board public</a>, so\neveryone can have access on the issues we prioritise.\nWe also added new tasks to the board, some of them could be approachable to newcomers or people who\nwant to contribute.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"progress-on-tech-debt-and-new-features\">Progress on tech debt and new features<a class=\"hash-link\" href=\"#progress-on-tech-debt-and-new-features\" title=\"Direct link to heading\">​</a></h3><ul><li><p><a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1223\" target=\"_blank\" rel=\"noopener noreferrer\">1223</a> was merged, which removes the\nforeign keys from the db schema. This opens the road to a number of optimizations.</p></li><li><p>An additional fix on top of the previous work was added\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1250\" target=\"_blank\" rel=\"noopener noreferrer\">1250</a></p></li><li><p>An initial version where DBSync does not rollback on restart is done here\n<a href=\"https://github.com/input-output-hk/cardano-db-sync/pull/1266\" target=\"_blank\" rel=\"noopener noreferrer\">1266</a>.\nThis allows db-sync to restart much faster, without the need to delete data and reinsert them. In\nthe future it can also facilitate migrations in cases where the ledger snapshots have a breaking\nchange, without the need to resync everything from genesis.</p></li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-09-19-db-sync",
            "title": "DB Sync Team Update",
            "summary": "DBSync Update",
            "date_modified": "2022-09-19T00:00:00.000Z",
            "author": {
                "name": "Kostas Dermentzis",
                "url": "https://github.com/kderme"
            },
            "tags": [
                "db-sync"
            ]
        },
        {
            "id": "2022-09-16-ledger",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ledger-update\">Ledger Update<a class=\"hash-link\" href=\"#ledger-update\" title=\"Direct link to heading\">​</a></h2><p>We have been focused nearly entirely on addressing technical debt.</p><ul><li>We introduced more consistent naming across eras, this time for the auxiliary data.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3032\" target=\"_blank\" rel=\"noopener noreferrer\">3032</a>.</li><li>We made clear how the <code>consumed</code> functions differs between eras (which was a previous source of\nconfusion), and added some related support to the fledgling ledger API.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3016\" target=\"_blank\" rel=\"noopener noreferrer\">3016</a>.</li><li>We added clarity and organizational consistency to the main ledger era type synonyms.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3017\" target=\"_blank\" rel=\"noopener noreferrer\">3017</a>.</li><li>We removed code duplication related to the input data hashes.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3018\" target=\"_blank\" rel=\"noopener noreferrer\">3018</a>.</li><li>We split up a large module into smaller components. The large module was actually causing our\nCI to time out.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3020\" target=\"_blank\" rel=\"noopener noreferrer\">3020</a>.</li><li>We cleaned up stale information in our cabal files, and upgraded cabal 3.8.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3023\" target=\"_blank\" rel=\"noopener noreferrer\">3023</a>,\n<a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3031\" target=\"_blank\" rel=\"noopener noreferrer\">3031</a>,\nand <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3028\" target=\"_blank\" rel=\"noopener noreferrer\">3028</a>.</li><li>We made consistent, standalone <code>TxOut</code> (transaction output) modules for every era.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3024\" target=\"_blank\" rel=\"noopener noreferrer\">3024</a>.</li><li>We brought consistency to a maddening inconsistent use of type variables indicating the specific\nchoice of cryptographic primitives. In particular, all uses of <code>crypto</code> have been renamed to <code>c</code>.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3027\" target=\"_blank\" rel=\"noopener noreferrer\">3027</a>.</li><li>We did a clean up of the types in the Alonzo era. In particular, we switched to more parametric\ntypes that will compose better in the future and which simplifies the constraints.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3029\" target=\"_blank\" rel=\"noopener noreferrer\">3029</a>.</li><li>We consolidated some existing fragmented logic regarding how we gather the scripts needed for a\ngiven transaction. This is a much needed cleanup to prevent future mistakes.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3019\" target=\"_blank\" rel=\"noopener noreferrer\">3019</a>.</li><li>We fixed a problem with our generators that was causing a fair number of our property tests to\nfail in CI.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3039\" target=\"_blank\" rel=\"noopener noreferrer\">3039</a>.</li><li>We have started the work to update Plutus. This will bring support for SECP in the next major\nprotocol version, and also address a\n<a href=\"https://github.com/input-output-hk/cardano-ledger/issues/2902\" target=\"_blank\" rel=\"noopener noreferrer\">problem</a>\nthat we current have evolving the cost models.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3030\" target=\"_blank\" rel=\"noopener noreferrer\">3030</a>.</li><li>We addressed a small issue that came up when integrating the conway era downstream, namely\nthe lack of some serialization instances.\nSee <a href=\"https://github.com/input-output-hk/cardano-ledger/pull/3022\" target=\"_blank\" rel=\"noopener noreferrer\">3022</a>.</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-09-16-ledger",
            "title": "Ledger Team Update",
            "summary": "Ledger Update",
            "date_modified": "2022-09-16T00:00:00.000Z",
            "author": {
                "name": "Jared Corduan",
                "url": "https://github.com/JaredCorduan"
            },
            "tags": [
                "ledger"
            ]
        },
        {
            "id": "2022-09-01-ledger",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ledger-update\">Ledger Update<a class=\"hash-link\" href=\"#ledger-update\" title=\"Direct link to heading\">​</a></h2><p>Since finishing up support for the Vasil Hardfork, the ledger team has been\nfocused on two main things: a new ledger era and technical debt.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-minimal-ledger-era\">New minimal ledger era<a class=\"hash-link\" href=\"#new-minimal-ledger-era\" title=\"Direct link to heading\">​</a></h3><p>We have implemented a new ledger era named <code>conway</code> which is nearly identical\nto the <code>babbage</code> era. This has been the first time that we have been able to see\nwhat a minimal ledger era looks like. We have finished this task, modulo any\nintegration issues that might come up. The only thing that the <code>conway</code> era\ndoes differently from the <code>babbage</code> era is provide support for rotating\nthe master keys using the hardfork combinator's state translation.\nWe may end up adding features to the <code>conway</code> era, but it is a nice exercise\nseeing what it looks like to get a minimal ledger era supported in all the\ndownstream components.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"addressing-technical-debt\">Addressing technical debt<a class=\"hash-link\" href=\"#addressing-technical-debt\" title=\"Direct link to heading\">​</a></h3><p>We have been addressing technical debt, mostly in an effort to make the\nrepository a more friendly code base to work in.</p><ul><li>We have begun work on a ledger API, called <code>cardano-ledger-api</code>.</li><li>We have done a big re-design of the major type classes used in the ledger.\nWith hindsight on our side, we now have something much more organized and\neasier to use.</li><li>We have done a lot of re-naming. The names across eras are now much more\nuniform, avoid certain confusions that plagued us, and are clearer in where\nthey are from.</li><li>We have reduced a lot of code duplication that could lead to bugs if you\ndo not have the whole code base in your head.</li><li>We have added a handful of performance improvements.</li><li>We added type safety in a number of locations. In particular, the type of\nvalues that can be minted in a transaction no longer allow for Lovelace\nin the type, and some functions which used to handle both timelock scripts\nand plutus script now correctly enoforce at the type level that only one of\nthem can be used.</li><li>We made our generators so that they now produce a much richer set of\nvalid serializations. There is room within CBOR to serialize the same\ndata structure in multiple ways, and it is helpful to have the generators\nuse a wide variety.</li><li>We have begun re-organizing our test suites.</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-09-01-ledger",
            "title": "Ledger Team Update",
            "summary": "Ledger Update",
            "date_modified": "2022-09-01T00:00:00.000Z",
            "author": {
                "name": "Jared Corduan",
                "url": "https://github.com/JaredCorduan"
            },
            "tags": [
                "ledger"
            ]
        },
        {
            "id": "2022-08-31-consensus",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"executive-summary\">Executive summary<a class=\"hash-link\" href=\"#executive-summary\" title=\"Direct link to heading\">​</a></h2><ul><li>We did most of the heavy lifting required to integrate the Conway era.</li><li>We have property tests for the UTxO HD backing store API implementations. A\npossible bug was identified. Work is ongoing to make sure the property-tests\ncover all the relevant cases.</li><li>We implemented and benchmarked the \"anti-diff\" prototype to speed up the UTxO\nHD functionality. Results show a rough speedup of <code>4x</code> to <code>5.5x</code> across\nseveral scenarios. Note that: <a href=\"https://hackage.haskell.org/package/tasty-bench-0.3.2/docs/Test-Tasty-Bench.html\" target=\"_blank\" rel=\"noopener noreferrer\">\"Data reported by <code>tasty-bench</code> is only of\nindicative and comparative significance.\"</a>.\nWe are investigating additional performance improvements. The \"anti-diff\"\nprototype and benchmarks are still pending code review.</li><li>We elaborated a draft specification for the Genesis implementation and\n<code>ChainSync</code> jumping optimization.</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"workstreams\">Workstreams<a class=\"hash-link\" href=\"#workstreams\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conway\">Conway<a class=\"hash-link\" href=\"#conway\" title=\"Direct link to heading\">​</a></h3><ul><li>Integration PR of the minimal Conway era (<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3962\" target=\"_blank\" rel=\"noopener noreferrer\">Issue #3963</a>, <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3971\" target=\"_blank\" rel=\"noopener noreferrer\">PR\n#3971</a>).</li><li>Discussions with Ledger revealed possible sources of confusion about which\ndata should be changed in the Conway era. As a result, a new technical debt\nissue was raised, which does not block the integration of the Conway era\n(<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3976\" target=\"_blank\" rel=\"noopener noreferrer\">Issue #3976</a>).</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"utxo-hd\">UTxO HD<a class=\"hash-link\" href=\"#utxo-hd\" title=\"Direct link to heading\">​</a></h3><ul><li><p><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3954\" target=\"_blank\" rel=\"noopener noreferrer\">Issue #3954</a>, <a href=\"https://github.com/input-output-hk/ouroboros-network/tree/jdral/3954-backingstore-property-tests\" target=\"_blank\" rel=\"noopener noreferrer\">branch</a>: The functionality of a\nbacking store, which is the interface to the on-disk part of ledger state in\nUTxO-HD, is tested at a high level through the <code>OnDisk</code> tests. However, some\nfunctionalities remain untested, e.g., reads of ranges of keys. As such, we\nhave implemented <code>quickcheck-state-machine</code> tests that exercise backing stores\ndirectly. The tests are reusable for different backing store implementations\nbecause the tests are implementation-agnostic: Any backing store that conforms\nto the backing store interface can be plugged into the tests. Work is still\nongoing to label/monitor the tests, such that we can verify that interesting\ncases are being tested. Furthermore, a possible bug has been identified in the\nLMDB backing store with respect to range reads, though the bug has not been\nresolved yet.</p></li><li><p><a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3946\" target=\"_blank\" rel=\"noopener noreferrer\">Issue #3946</a>, <a href=\"https://github.com/input-output-hk/ouroboros-network/tree/jdral/CAD-4199-prototype-anti-diffs\" target=\"_blank\" rel=\"noopener noreferrer\">branch</a>, <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3882\" target=\"_blank\" rel=\"noopener noreferrer\">PR #3882</a>: The\n\"anti-diff\" prototype proposes an alternative approach to keeping track of\nsequences (more specifically, <code>FingerTree</code>s) of diffs. These diff sequences\nare a component of the in-memory parts of the ledger state in UTxO-HD. Since\nthe consensus code often requires the cumulative diff of a sequence of diffs,\nthe current implementation \"caches\" cumulative diffs of each subtree in the\ndiff sequence. This caching allows relatively fast reconstruction of the total\ncumulative diff, but this caching proved to incur a non-negligible cost: when\nwe manipulate diff sequences through splits and appends, we force re-computing\na logarithmic number of caches. This is problematic, since we often split and\nappend in consensus: we split when we flush diffs to a backing store or when\nwe roll back blocks, and we append when pushing blocks. The new approach\nshould reduce the overhead of this caching.</p><p>We implemented micro-benchmarks for the \"anti-diff\" prototype: we\nfirst generate a sequence of commands (<code>Forward</code>, <code>Push</code>, <code>Flush</code>, or\n<code>Rollback</code>) through a simulation, after which we measure the performance of\napplying the commands to a diff sequence. In this context, <code>Forward</code> means\nforwarding of values through a diff, whereas <code>Rollback</code> means switching to\na different fork by rolling back diffs/blocks and pushing new ones.\nMoreover, we compare the performance for the two implementations: the\n\"legacy\" approach, and the anti-diff approach.</p><p>Some preliminary results were positive, but we needed to revisit the\nbenchmark's configuration to obtain more definitive results. After a\ndiscussion with @dcoutts and the consensus team about this configuration\n(e.g., number of commands generated, choice of the security parameter <code>k</code>),\nthe benchmarks should now be closer to the realistic setting. The following\nconfiguration specifies the default configuration that is used in the\nbenchmarking code:</p><ul><li>Number of commands generated: <code>10_000</code></li><li>Security parameter <code>k</code>: <code>2160</code></li><li>Number of initial backing values: <code>100</code></li><li>Number of key-value pairs deleted by a push: <code>50</code></li><li>Number of key-value pairs inserted by a push: <code>50</code></li><li>Number of key-value pairs forwarded by a forward: <code>50</code></li><li>Probability of a large (in the range <code>[1000, 2000]</code>) rollback: <code>0.05</code></li><li>Probability of a small (in the range <code>[1, 10]</code>) rollback: <code>0.95</code></li><li>Order of commands:<ul><li>An equal number of forward and pushes.</li><li><code>1</code> flush every <code>10</code> pushes.</li><li><code>1</code> rollback every <code>100</code> pushes</li></ul></li></ul><p>Moreover, we run four benchmark scenarios:</p><ul><li>Default configuration</li><li>Without rollbacks</li><li>With only small rollbacks</li><li>Without rollbacks, larger flushes (<code>1</code> flush every <code>100</code> pushes)</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-to-read-results\">How to read results<a class=\"hash-link\" href=\"#how-to-read-results\" title=\"Direct link to heading\">​</a></h3><p>Note: this section uses documentation from the\n<a href=\"https://hackage.haskell.org/package/tasty-bench\" target=\"_blank\" rel=\"noopener noreferrer\">tasty-bench</a> package to\nexplain how to read the results of running our benchmarks.</p><p>Running a benchmark scenario gives us the following (curated) output:</p><div class=\"language-text codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">AntiDiff:                               OK (18.27s)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  2.527 s ±  47 ms, 2.1 GB allocated, 544 MB copied, 2.2 GB peak memory, 0.23x</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">LegacyDiff:                             OK (32.73s)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  10.829 s ± 148 ms, 6.8 GB allocated, 2.3 GB copied, 2.2 GB peak memory</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">...</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The output says that the first benchmark, which exercises the anti-diff\nprototype, was repeatedly executed for <code>18.27</code> seconds (wall-clock time),\nits predicted mean CPU time was <code>2.527</code> seconds and means of individual\nsamples do not often diverge from it further than <code>± 47</code> milliseconds\n(double standard deviation). We also configure the RTS to collect GC\nstatistics, which enables <code>tasty-bench</code> to estimate and report memory usage.\nThis data is reported as per <code>RTSStats</code> fields: <code>allocated_bytes</code>,\n<code>copied_bytes</code> and <code>max_mem_in_use_bytes</code>. So, the output of the first\nbenchmark says that a total of <code>2.1 GB</code> of memory was allocated, that a\ntotal of <code>544 MB</code> of memory were copied, and that the peak memory in usage\nwas <code>2.2 GB</code>. We read the output for the second benchmark in the same way.</p><p>Furthermore, the benchmark compares the mean CPU times for\nboth the anti-diff and legacy approaches: In this case, the mean CPU time\nfor the anti-diff approach is <code>~0.23x</code> the mean CPU time for the legacy\napproach. Conversely, the mean CPU time for the legacy approach is\n<code>1 / 0.23 ~= 4.35x</code> the mean CPU time for the anti-diff approach. We will\ncall <code>0.23x</code> the <em>improvement factor</em>. We will call <code>4.35x</code> the <em>speedup</em>.</p><p>Note that these improvement factors (and reported results) are subject to\nnoise, randomness, the specific configuration parameters, and the whims\nof statistics. Data reported by <code>tasty-bench</code> is only of indicative and\ncomparative significance.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"results\">Results<a class=\"hash-link\" href=\"#results\" title=\"Direct link to heading\">​</a></h3><p>For each of the 4 scenarios, we list the results of running the anti-diff and\nlegacy approaches 5 times. We run the benchmarks 5 times to get an indication\nof whether the results are similar across multiple runs. Furthermore, we\ncalculate the accompanying <em>ranges</em> (if applicable) of improvement factors and\nspeedups.</p><p>Note also the decrease in total bytes allocated and total bytes copied for\nthe anti-diff approach compared to the legacy approach.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"default-configuration\">Default configuration<a class=\"hash-link\" href=\"#default-configuration\" title=\"Direct link to heading\">​</a></h4><table><thead><tr><th>Name</th><th>Mean CPU time</th><th>2*Stdev (CPU time)</th><th>Total bytes allocated</th><th>Total bytes copied</th><th>Peak memory</th></tr></thead><tbody><tr><td>Run 1: AntiDiff</td><td>2.533 s (0.23x)</td><td>4.7 ms</td><td>2.1 GB</td><td>557 MB</td><td>2.4 GB</td></tr><tr><td>Run 1: LegacyDiff</td><td>10.792 s</td><td>162 ms</td><td>6.8 GB</td><td>2.3 GB</td><td>2.4 GB</td></tr><tr><td>Run 2: AntiDiff</td><td>2.508 s (0.23x)</td><td>245 ms</td><td>2.1 GB</td><td>515 MB</td><td>2.2 GB</td></tr><tr><td>Run 2: LegacyDiff</td><td>10.850 s</td><td>30 ms</td><td>6.9 GB</td><td>2.3 GB</td><td>2.2 GB</td></tr><tr><td>Run 3: AntiDiff</td><td>2.562 s (0.23x)</td><td>5.0 ms</td><td>2.1 GB</td><td>552 MB</td><td>2.2 GB</td></tr><tr><td>Run 3: LegacyDiff</td><td>10.993 s</td><td>149 ms</td><td>6.9 GB</td><td>2.3 GB</td><td>2.2 GB</td></tr><tr><td>Run 4: AntiDiff</td><td>2.168 s (0.22x)</td><td>5.3 ms</td><td>1.8 GB</td><td>434 MB</td><td>2.0 GB</td></tr><tr><td>Run 4: LegacyDiff</td><td>9.976 s</td><td>39 ms</td><td>6.3 GB</td><td>2.0 GB</td><td>2.0 GB</td></tr><tr><td>Run 5: AntiDiff</td><td>2.527 s (0.23x)</td><td>47 ms</td><td>2.1 GB</td><td>544 MB</td><td>2.2 GB</td></tr><tr><td>Run 5: LegacyDiff</td><td>10.829 s</td><td>148 ms</td><td>6.8 GB</td><td>2.3 GB</td><td>2.2 GB</td></tr></tbody></table><ul><li>Improvement factor: <code>[0.22, 0.23]</code></li><li>Speedup : <code>[1 / 0.23 ~= 4.35, 1 / 0.22 ~= 4.55]</code></li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"no-rollbacks\">No rollbacks<a class=\"hash-link\" href=\"#no-rollbacks\" title=\"Direct link to heading\">​</a></h4><table><thead><tr><th>Name</th><th>Mean CPU time</th><th>2*Stdev (CPU time)</th><th>Total bytes allocated</th><th>Total bytes copied</th><th>Peak memory</th></tr></thead><tbody><tr><td>Run 1: AntiDiff</td><td>1.638 s (0.19x)</td><td>36 ms</td><td>1.4 GB</td><td>181 MB</td><td>2.4 GB</td></tr><tr><td>Run 1: LegacyDiff</td><td>8.656 s</td><td>207 ms</td><td>5.7 GB</td><td>1.5 GB</td><td>2.4 GB</td></tr><tr><td>Run 2: AntiDiff</td><td>1.638 s (0.19x)</td><td>75 ms</td><td>1.4 GB</td><td>181 MB</td><td>2.2 GB</td></tr><tr><td>Run 2: LegacyDiff</td><td>8.654 s</td><td>322 ms</td><td>5.7 GB</td><td>1.5 GB</td><td>2.2 GB</td></tr><tr><td>Run 3: AntiDiff</td><td>1.663 s (0.19x)</td><td>74 ms</td><td>1.4 GB</td><td>181 MB</td><td>2.2 GB</td></tr><tr><td>Run 3: LegacyDiff</td><td>8.799 s</td><td>216 ms</td><td>5.7 GB</td><td>1.5 GB</td><td>2.2 GB</td></tr><tr><td>Run 4: AntiDiff</td><td>1.645 s (0.19x)</td><td>51 ms</td><td>1.4 GB</td><td>181 MB</td><td>2.0 GB</td></tr><tr><td>Run 4: LegacyDiff</td><td>8.732 s</td><td>261 ms</td><td>5.7 GB</td><td>1.5 GB</td><td>2.0 GB</td></tr><tr><td>Run 5: AntiDiff</td><td>1.639 s (0.19x)</td><td>19 ms</td><td>1.4 GB</td><td>181 MB</td><td>2.2 GB</td></tr><tr><td>Run 5: LegacyDiff</td><td>8.653 s</td><td>234 ms</td><td>5.7 GB</td><td>1.5 GB</td><td>2.2 GB</td></tr></tbody></table><ul><li>Improvement factor: <code>0.19</code></li><li>Speedup : <code>1 / 0.19 ~= 5.25</code></li></ul></li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"only-small-rollbacks\">Only small rollbacks<a class=\"hash-link\" href=\"#only-small-rollbacks\" title=\"Direct link to heading\">​</a></h4><table><thead><tr><th>Name</th><th>Mean CPU time</th><th>2*Stdev (CPU time)</th><th>Total bytes allocated</th><th>Total bytes copied</th><th>Peak memory</th></tr></thead><tbody><tr><td>Run 1: AntiDiff</td><td>1.833 s (0.18x)</td><td>36 ms</td><td>1.5 GB</td><td>185 MB</td><td>2.4 GB</td></tr><tr><td>Run 1: LegacyDiff</td><td>10.362 s</td><td>867 ms</td><td>5.8 GB</td><td>1.6 GB</td><td>2.4 GB</td></tr><tr><td>Run 2: AntiDiff</td><td>1.696 s (0.19x)</td><td>30 ms</td><td>1.5 GB</td><td>185 MB</td><td>2.2 GB</td></tr><tr><td>Run 2: LegacyDiff</td><td>8.822 s</td><td>106 ms</td><td>5.8 GB</td><td>1.5 GB</td><td>2.2 GB</td></tr><tr><td>Run 3: AntiDiff</td><td>1.702 s (0.19x)</td><td>44 ms</td><td>1.5 GB</td><td>186 MB</td><td>2.2 GB</td></tr><tr><td>Run 3: LegacyDiff</td><td>8.906 s</td><td>147 ms</td><td>5.8 GB</td><td>1.5 GB</td><td>2.2 GB</td></tr><tr><td>Run 4: AntiDiff</td><td>1.701 s (0.19x)</td><td>47 ms</td><td>1.5 GB</td><td>185 MB</td><td>2.0 GB</td></tr><tr><td>Run 4: LegacyDiff</td><td>8.949 s</td><td>197 ms</td><td>5.8 GB</td><td>1.5 GB</td><td>2.0 GB</td></tr><tr><td>Run 5: AntiDiff</td><td>1.677 s (0.19x)</td><td>55 ms</td><td>1.5 GB</td><td>186 MB</td><td>2.2 GB</td></tr><tr><td>Run 5: LegacyDiff</td><td>8.856 s</td><td>177 ms</td><td>5.8 GB</td><td>1.5 GB</td><td>2.2 GB</td></tr></tbody></table><ul><li><p>Improvement factor: <code>[0.18, 0.19]</code></p></li><li><p>Speedup : <code>[1 / 0.19 ~= 5.25, 1 / 0.18 ~= 5.55]</code></p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"no-rollbacks-larger-flushes-every-100-pushes\">No rollbacks, larger flushes (every 100 pushes)<a class=\"hash-link\" href=\"#no-rollbacks-larger-flushes-every-100-pushes\" title=\"Direct link to heading\">​</a></h4><table><thead><tr><th>Name</th><th>Mean CPU time</th><th>2*Stdev (CPU time)</th><th>Total bytes allocated</th><th>Total bytes copied</th><th>Peak memory</th></tr></thead><tbody><tr><td>Run 1: AntiDiff</td><td>1.643 s (0.25x)</td><td>21 ms</td><td>1.5 GB</td><td>196 MB</td><td>2.4 GB</td></tr><tr><td>Run 1: LegacyDiff</td><td>6.591 s</td><td>351 ms</td><td>4.0 GB</td><td>1.4 GB</td><td>2.4 GB</td></tr><tr><td>Run 2: AntiDiff</td><td>1.616 s (0.25x)</td><td>47 ms</td><td>1.5 GB</td><td>196 MB</td><td>2.2 GB</td></tr><tr><td>Run 2: LegacyDiff</td><td>6.520 s</td><td>232 ms</td><td>4.0 GB</td><td>1.4 GB</td><td>2.2 GB</td></tr><tr><td>Run 3: AntiDiff</td><td>1.640 s (0.25x)</td><td>34 ms</td><td>1.5 GB</td><td>196 MB</td><td>2.2 GB</td></tr><tr><td>Run 3: LegacyDiff</td><td>6.540 s</td><td>150 ms</td><td>4.0 GB</td><td>1.4 GB</td><td>2.2 GB</td></tr><tr><td>Run 4: AntiDiff</td><td>1.635 s (0.25x)</td><td>76 ms</td><td>1.5 GB</td><td>196 MB</td><td>2.0 GB</td></tr><tr><td>Run 4: LegacyDiff</td><td>6.589 s</td><td>131 ms</td><td>4.0 GB</td><td>1.4 GB</td><td>2.0 GB</td></tr><tr><td>Run 5: AntiDiff</td><td>1.628 s (0.25x)</td><td>19 ms</td><td>1.5 GB</td><td>196 MB</td><td>2.2 GB</td></tr><tr><td>Run 5: LegacyDiff</td><td>6.490 s</td><td>5.9 ms</td><td>4.0 GB</td><td>1.4 GB</td><td>2.2 GB</td></tr></tbody></table></li><li><p>Improvement factor: <code>0.25</code></p></li><li><p>Speedup : <code>1 / 0.25 ~= 4</code></p></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"genesis\">Genesis<a class=\"hash-link\" href=\"#genesis\" title=\"Direct link to heading\">​</a></h3><ul><li>We elaborated a draft of the specification of the Genesis implementation and\nthe ChainSync Jumping optimization. In particular, this includes a proof\nsketch that the latter preserves liveness and safety in all cases (<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3964\" target=\"_blank\" rel=\"noopener noreferrer\">Issue\n3964</a>).<ul><li>@nfrisby's main realization during this sprint was that he had been\nfocusing so far on the case where the selected chain is an extension of\nthe intersection of our peers' ChainSync candidates.</li><li>This is the main case, ie an \"absorbing\" state, but it's not the only\ncase.</li><li>The new proof sketch begins by case splitting on that predicate, and\nthat made the sketch quite a bit easier to follow.</li></ul></li><li>We continued working on the \"happy path\" <code>ChainSync</code> Jumping prototype (<a href=\"https://github.com/input-output-hk/ouroboros-network/issues/3960\" target=\"_blank\" rel=\"noopener noreferrer\">Issue\n3960</a>).</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"technical-debt\">Technical debt<a class=\"hash-link\" href=\"#technical-debt\" title=\"Direct link to heading\">​</a></h3><ul><li>We started working on the issues required to re-enable nightly CI runs..\nNightly CI runs have far more lax time constraints, which gives the option to\nrun significantly more property tests than in our regular CI. To this end, we\nmerged a PR to easily adapt the number of tests globally (<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3947\" target=\"_blank\" rel=\"noopener noreferrer\">PR\n#3947</a>).</li></ul>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-08-31-consensus",
            "title": "Consensus Team Update",
            "summary": "Executive summary",
            "date_modified": "2022-08-31T00:00:00.000Z",
            "author": {
                "name": "Damian Nadales",
                "url": "https://github.com/dnadales"
            },
            "tags": [
                "consensus"
            ]
        },
        {
            "id": "2022-08-12-network",
            "content_html": "<p>The networking team took an active part in the project iteration (PI) planning\nsession, see cardano-node <a href=\"https://github.com/orgs/input-output-hk/projects/39\" target=\"_blank\" rel=\"noopener noreferrer\">backlog</a> for detailed\noutcomes.</p><ul><li><p>We started working on a detailed design / implementation plan for gossip.</p></li><li><p>We merged <a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3859\" target=\"_blank\" rel=\"noopener noreferrer\">input-output-hk/ouroboros-network#3859</a> which\nsets the ouroboros-network repository for the single relay release.</p></li><li><p>We identified a bug in the network simulator, which is fixed in the\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3852\" target=\"_blank\" rel=\"noopener noreferrer\">input-output-hk/ouroboros-network#3852</a>.\nThe above PR was reviewed.</p></li><li><p>We set the tracing configuration for nodes which we deploy and fixed and\nidentified some deployment hiccups.  We identified some bugs in the RT view\nwhich were registered by the maintainers.\n<a href=\"https://github.com/input-output-hk/ouroboros-network-ops/pull/4\" target=\"_blank\" rel=\"noopener noreferrer\">input-output-hk/ouroboros-network-ops#4</a></p></li><li><p>We fixed typos in network-mux library:\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3921\" target=\"_blank\" rel=\"noopener noreferrer\">input-output-hk/ouroboros-network#3921</a></p></li><li><p>For easy of debugging we renamed a trace point:\n<a href=\"https://github.com/input-output-hk/ouroboros-network/pull/3922\" target=\"_blank\" rel=\"noopener noreferrer\">input-output-hk/ouroboros-network#3922</a></p></li><li><p>Duncan iterated on his simulation / visualisation.  He also was able to\nidentify and fix a bug in the simulator.  The simulation contains 50 nodes.\nDashed lines indicate and established connection, while solid lines indicate\na TCP connection with fully open TCP window.</p></li></ul><div style=\"width:640px;height:360px\"></div>",
            "url": "https://input-output-hk.github.io/cardano-updates/2022-08-12-network",
            "title": "Network Team Update",
            "summary": "The networking team took an active part in the project iteration (PI) planning",
            "date_modified": "2022-08-12T00:00:00.000Z",
            "author": {
                "name": "Marcin Szamotulski",
                "url": "https://github.com/coot"
            },
            "tags": [
                "network"
            ]
        }
    ]
}